# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = ''
love = ''
god = 'SWdub3JhcicgcGFyYSBudW5jYSBtYWlzIHZlciBlc3RhIG1lbnNhZ2VtLlxuXG5PYnJpZ2FkbyBwb3IgZXNjb2xoZXIgezF9LiIuZm9ybWF0KENPTkZJRy5BRERPTlRJVExFLCBDT05GSUcuQURET05USVRMRSkNCiAgICAgICAgICAgIHNlbGYubXNnID0gQ09ORklHLlRIRU1FMi5mb3JtYXQoc2VsZi5tc2cpDQoNCiAgICAgICAgZGVmIG9uSW5pdChzZWxmKToNCiAgICAgICAgICAgIHNlbGYuaW1hZ2UgPSAxMDENCiAgICAgICAgICAgIHNlbGYudGl0bGVib3ggPSAxMDINCiAgICAgICAgICAgIHNlbGYudGV4dGJveCA9IDEwMw0KICAgICAgICAgICAgc2VsZi5idWlsZG1lbnUgPSAyMDENCiAgICAgICAgICAgIHNlbGYuaWdub3JlID0gMjAyDQogICAgICAgICAgICBzZWxmLnNob3dfZGlhbG9nKCkNCg0KICAgICAgICBkZWYgc2hvd19kaWFsb2coc2VsZik6DQogICAgICAgICAgICBzZWxmLmdldENvbnRyb2woc2VsZi5pbWFnZSkuc2V0SW1hZ2UoQ09ORklHLkFERE9OX0ZBTkFSVCkNCiAgICAgICAgICAgIHNlbGYuZ2V0Q29udHJvbChzZWxmLmltYWdlKS5zZXRDb2xvckRpZmZ1c2UoJzlGRkZGRkZGJykNCiAgICAgICAgICAgIHNlbGYuZ2V0Q29udHJvbChzZWxmLnRleHRib3gpLnNldFRleHQoc2VsZi5tc2cpDQogICAgICAgICAgICBzZWxmLmdldENvbnRyb2woc2VsZi50aXRsZWJveCkuc2V0TGFiZWwoc2VsZi50aXRsZSkNCiAgICAgICAgICAgIHNlbGYuc2V0Rm9jdXNJZChzZWxmLmJ1aWxkbWVudSkNCg0KICAgICAgICBkZWYgZG9fYnVpbGRfbWVudShzZWxmKToNCiAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJbVmVyaWZpY2HDp8OjbyBkZSBjb21waWxhw6fDo28gYXR1YWxdIFtTZWxlY2lvbmFkbyBwZWxvIHVzdcOhcmlvOiBBYnJpciBtZW51IGRlIGNvbXBpbGHDp8Ojb10gW1Byw7N4aW1hIHZlcmlmaWNhw6fDo286IHswfV0iLmZvcm1hdChDT05GSUcuQlVJTERDSEVDSyksDQogICAgICAgICAgICAgICAgICAgICAgICBsZXZlbD14Ym1jLkxPR0lORk8pDQogICAgICAgICAgICBDT05GSUcuc2V0X3NldHRpbmcoJ25leHRidWlsZGNoZWNrJywgdG9vbHMuZ2V0X2RhdGUoZGF5cz1DT05GSUcuVVBEQVRFQ0hFQ0ssIGZvcm1hdHRlZD1UcnVlKSkNCiAgICAgICAgICAgIENPTkZJRy5zZXRfc2V0dGluZygnaW5zdGFsbGVkJywgJ2lnbm9yZWQnKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICB1cmwgPSAncGx1Z2luOi8vezB9Lz9tb2RlPWJ1aWxkcycuZm9ybWF0KENPTkZJRy5BRERPTl9JRCkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgc2VsZi5jbG9zZSgpDQogICAgICAgICAgICANCiAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oJ0FjdGl2YXRlV2luZG93KFByb2dyYW1zLCB7MH0sIHJldHVybiknLmZvcm1hdCh1cmwpKQ0KDQogICAgICAgIGRlZiBkb19pZ25vcmUoc2VsZik6DQogICAgICAgICAgICBsb2dnaW5nLmxvZygiW1ZlcmlmaWNhw6fDo28gZGEgY29tcGlsYcOnw6NvIGF0dWFsXSBbU2VsZWNpb25hZG8gcGVsbyB1c3XDoXJpbzogTWVudSBJZ25vcmFyIGNvbXBpbGHDp8Ojb10gW1ZlcmlmaWNhw6fDo28gc2VndWludGU6IHswfV0iLmZvcm1hdChDT05GSUcuQlVJTERDSEVDSyksDQogICAgICAgICAgICAgICAgICAgICAgICBsZXZlbD14Ym1jLkxPR0lORk8pDQogICAgICAgICAgICBDT05GSUcuc2V0X3NldHRpbmcoJ25leHRidWlsZGNoZWNrJywgdG9vbHMuZ2V0X2RhdGUoZGF5cz1DT05GSUcuVVBEQVRFQ0hFQ0ssIGZvcm1hdHRlZD1UcnVlKSkNCiAgICAgICAgICAgIENPTkZJRy5zZXRfc2V0dGluZygnaW5zdGFsbGVkJywgJ2lnbm9yZWQnKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBzZWxmLmNsb3NlKCkNCg0KICAgICAgICBkZWYgb25BY3Rpb24oc2VsZiwgYWN0aW9uKToNCiAgICAgICAgICAgIGlmIGFjdGlvbi5nZXRJZCgpIGluIEJBQ0tfQUNUSU9OUzoNCiAgICAgICAgICAgICAgICBzZWxmLmRvX2lnbm9yZSgpDQoNCiAgICAgICAgZGVmIG9uQ2xpY2soc2VsZiwgY29udHJvbGlkKToNCiAgICAgICAgICAgIGlmIGNvbnRyb2xpZCA9PSBzZWxmLmJ1aWxkbWVudToNCiAgICAgICAgICAgICAgICBzZWxmLmRvX2J1aWxkX21lbnUoKQ0KICAgICAgICAgICAgZWxpZiBjb250cm9saWQgPT0gc2VsZi5pZ25vcmU6DQogICAgICAgICAgICAgICAgc2VsZi5kb19pZ25vcmUoKQ0KDQogICAgZnIgPSBCdWlsZFByb21wdCgiRmlyc3RSdW5CdWlsZC54bWwiLCBDT05GSUcuQURET05fUEFUSCwgJ0RlZmF1bHQnKQ0KICAgIGZyLmRvTW9kYWwoKQ0KICAgIGRlbCBmcg0KDQoNCmRlZiBzaG93X3VwZGF0ZV93aW5kb3cobmFtZT0nVGVzdGluZyBXaW5kb3cnLCBjdXJyZW50PScxLjAnLCBuZXc9JzEuMScsIGljb249Q09ORklHLkFERE9OX0lDT04sIGZhbmFydD1DT05GSUcuQURET05fRkFOQVJUKToNCiAgICBjbGFzcyBVcGRhdGVXaW5kb3coeGJtY2d1aS5XaW5kb3dYTUxEaWFsb2cpOg0KDQogICAgICAgIGRlZiBfX2luaXRfXyhzZWxmLCAqYXJncywgKiprd2FyZ3MpOg0KICAgICAgICAgICAgc2VsZi5uYW1lID0gQ09ORklHLlRIRU1FMy5mb3JtYXQoa3dhcmdzWyduYW1lJ10pDQogICAgICAgICAgICBzZWxmLmN1cnJlbnQgPSBrd2FyZ3NbJ2N1cnJlbnQnXQ0KICAgICAgICAgICAgc2VsZi5uZXcgPSBrd2FyZ3NbJ25ldyddDQogICAgICAgICAgICBzZWxmLmljb24gPSBrd2FyZ3NbJ2ljb24nXQ0KICAgICAgICAgICAgc2VsZi5mYW5hcnQgPSBrd2FyZ3NbJ2ZhbmFydCddDQogICAgICAgICAgICBzZWxmLm1zZ3VwZGF0ZSA9ICJBdHVhbGl6YcOnw6NvIGRpc3BvbsOtdmVsIHBhcmEgY29tcGlsYcOnw6NvIGluc3RhbGFkYTpcbltDT0xPUiB7MH1dezF9Wy9DT0xPUl1cblxuVmVyc8OjbyBBdHVhbDogdltDT0xPUiB7Mn1dezN9Wy9DT0xPUl1cbsOabHRpbWEgdmVyc8OjbzogdltDT0xPUiB7NH1dezV9Wy9DT0xPUl1cblxuW0NPTE9SIHs2fV0qUmVjb21lbmRhZG86IG5vdmEgaW5zdGFsYcOnw6NvWy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IxLCBzZWxmLm5hbWUsIENPTkZJRy5DT0xPUjEsIHNlbGYuY3VycmVudCwgQ09ORklHLkNPTE9SMSwgc2VsZi5uZXcsIENPTkZJRy5DT0xPUjEpDQogICAgICAgICAgICBzZWxmLm1zZ2N1cnJlbnQgPSAiRXhlY3V0YW5kbyBhIHZlcnPDo28gbWFpcyByZWNlbnRlIGRhIGNvbXBpbGHDp8OjbyBpbnN0YWxhZGE6XG5bQ09MT1IgezB9XXsxfVsvQ09MT1JdXG5cblZlcnPDo28gQXR1YWw6IHZbQ09MT1IgezJ9XXszfVsvQ09MT1JdXG7Dmmx0aW1hIHZlcnPDo286IHZbQ09MT1IgezR9XXs1fVsvQ09MT1JdXG5cbltDT0xPUiB7Nn1dKlJlY29tZW5kYWRvOiBub3ZhIGluc3RhbGHDp8Ojb1svQ09MT1JdIi5mb3JtYXQoQ09ORklHLkNPTE9SMSwgc2VsZi5uYW1lLCBDT05GSUcuQ09MT1IxLCBzZWxmLmN1cnJlbnQsIENPTkZJRy5DT0xPUjEsIHNlbGYubmV3LCBDT05GSUcuQ09MT1IxKQ0KDQogICAgICAgIGRlZiBvbkluaXQoc2VsZik6DQogICAgICAgICAgICBzZWxmLmltYWdlZmFuYXJ0ID0gMTAxDQogICAgICAgICAgICBzZWxmLmhlYWRlciA9IDEwMg0KICAgICAgICAgICAgc2VsZi50ZXh0Ym94ID0gMTAzDQogICAgICAgICAgICBzZWxmLmltYWdlaWNvbiA9IDEwNA0KICAgICAgICAgICAgc2VsZi5mcmVzaCA9IDIwMQ0KICAgICAgICAgICAgc2VsZi5ub3JtYWwgPSAyMDINCiAgICAgICAgICAgIHNlbGYuaWdub3JlID0gMjAzDQoNCiAgICAgICAgICAgIHNlbGYuc2V0UHJvcGVydHkoJ2RpYWxvZy5oZWFkZXInLCBzZWxmLm5hbWUpDQogICAgICAgICAgICBzZWxmLnNldFByb3BlcnR5KCdkaWFsb2cudGV4dGJveCcsIENPTkZJRy5USEVNRTIuZm9ybWF0KHNlbGYubXNndXBkYXRlIGlmIGN1cnJlbnQgPCBuZXcgZWxzZSBzZWxmLm1zZ2N1cnJlbnQpKQ0KICAgICAgICAgICAgc2VsZi5zZXRQcm9wZXJ0eSgnZGlhbG9nLmltYWdlZmFuYXJ0Jywgc2VsZi5mYW5hcnQpDQogICAgICAgICAgICBzZWxmLnNldFByb3BlcnR5KCdkaWFsb2cuaW1hZ2VkaWZmdXNlJywgJzJGRkZGRkZGJykNCiAgICAgICAgICAgIHNlbGYuc2V0UHJvcGVydHkoJ2RpYWxvZy5pbWFnZWljb24nLCBzZWxmLmljb24pDQoNCiAgICAgICAgZGVmIGRvX2ZyZXNoX2luc3RhbGwoc2VsZik6DQogICAgICAgICAgICBsb2dnaW5nLmxvZygiW1ZlcmlmaWNhciBhdHVhbGl6YcOnw7Vlc10gW1ZlcnPDo28gSW5zdGFsYWRhOiB7MH1dIFtWZXJzw6NvIEF0dWFsOiB7MX1dIFtVc2VyIFNlbGVjdGVkOiBGcmVzaCBJbnN0YWxsIGJ1aWxkXSIuZm9ybWF0KENPTkZJRy5CVUlMRFZFUlNJT04sIENPTkZJRy5CVUlMRExBVEVTVCkpDQogICAgICAgICAgICBsb2dnaW5nLmxvZygiW1ZlcmlmaWNhciBhdHVhbGl6YcOnw7Vlc10gW05leHQgQ2hlY2s6IHswfV0iLmZvcm1hdCh0b29scy5nZXRfZGF0ZShkYXlzPUNPTkZJRy5VUERBVEVDSEVDSywgZm9ybWF0dGVkPVRydWUpKSkNCiAgICAgICAgICAgIHVybCA9ICdwbHVnaW46Ly97MH0vP21vZGU9aW5zdGFsbCZuYW1lPXsxfSZhY3Rpb249ZnJlc2gnLmZvcm1hdChDT05GSUcuQURET05fSUQsIHF1b3RlX3BsdXMoQ09ORklHLkJVSUxETkFNRSkpDQogICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdSdW5QbHVnaW4oezB9KScuZm9ybWF0KHVybCkpDQogICAgICAgICAgICBzZWxmLmNsb3NlKCkNCg0KICAgICAgICBkZWYgZG9fbm9ybWFsX2luc3RhbGwoc2VsZik6DQogICAgICAgICAgICBsb2dnaW5nLmxvZygiW1ZlcmlmaWNhciBhdHVhbGl6YcOnw7Vlc10gW1ZlcnPDo28gSW5zdGFsYWRhOiB7MH1dIFtWZXJzw6NvIEF0dWFsOiB7MX1dIFtVc2VyIFNlbGVjdGVkOiBOb3JtYWwgSW5zdGFsbCBidWlsZF0iLmZvcm1hdChDT05GSUcuQlVJTERWRVJTSU9OLCBDT05GSUcuQlVJTERMQVRFU1QpKQ0KICAgICAgICAgICAgbG9nZ2luZy5sb2coIltWZXJpZmljYXIgYXR1YWxpemHDp8O1ZXNdIFtOZXh0IENoZWNrOiB7MH1dIi5mb3JtYXQodG9vbHMuZ2V0X2RhdGUoZGF5cz1DT05GSUcuVVBEQVRFQ0hFQ0ssIGZvcm1hdHRlZD1UcnVlKSkpDQogICAgICAgICAgICB1cmwgPSAncGx1Z2luOi8vezB9Lz9tb2RlPWluc3RhbGwmbmFtZT17MX0mYWN0aW9uPW5vcm1hbCcuZm9ybWF0KENPTkZJRy5BRERPTl9JRCwgcXVvdGVfcGx1cyhDT05GSUcuQlVJTEROQU1FKSkNCiAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oJ1J1blBsdWdpbih7MH0pJy5mb3JtYXQodXJsKSkNCiAgICAgICAgICAgIHNlbGYuY2xvc2UoKQ0KDQogICAgICAgIGRlZiBkb19pZ25vcmUoc2VsZik6DQogICAgICAgICAgICBsb2dnaW5nLmxvZygiW1ZlcmlmaWNhciBhdHVhbGl6YcOnw7Vlc10gW1ZlcnPDo28gSW5zdGFsYWRhOiB7MH1dIFtWZXJzw6NvIEF0dWFsOiB7MX1dIFtTZWxlY2lvbmFkbyBwZWxvIHVzdcOhcmlvOiBJZ25vcmUgezJ9IERpYXNdIi5mb3JtYXQoQ09ORklHLkJVSUxEVkVSU0lPTiwgQ09ORklHLkJVSUxETEFURVNULCBDT05GSUcuVVBEQVRFQ0hFQ0spKQ0KICAgICAgICAgICAgbG9nZ2luZy5sb2coIltWZXJpZmljYXIgYXR1YWxpemHDp8O1ZXNdIFtOZXh0IENoZWNrOiB7MH1dIi5mb3JtYXQodG9vbHMuZ2V0X2RhdGUoZGF5cz1DT05GSUcuVVBEQVRFQ0hFQ0ssIGZvcm1hdHRlZD1UcnVlKSkpDQogICAgICAgICAgICBzZWxmLmNsb3NlKCkNCg0KICAgICAgICBkZWYgb25BY3Rpb24oc2VsZiwgYWN0aW9uKToNCiAgICAgICAgICAgIGlkID0gYWN0aW9uLmdldElkKCkNCiAgICAgICAgICAgIGlmIGFjdGlvbi5nZXRJZCgpIGluIEJBQ0tfQUNUSU9OUzoNCiAgICAgICAgICAgICAgICBzZWxmLmRvX2lnbm9yZSgpDQoNCiAgICAgICAgZGVmIG9uQ2xpY2soc2VsZiwgY29udHJvbGlkKToNCiAgICAgICAgICAgIGlmIGNvbnRyb2xpZCA9PSBzZWxmLmZyZXNoOg0KICAgICAgICAgICAgICAgIHNlbGYuZG9fZnJlc2hfaW5zdGFsbCgpDQogICAgICAgICAgICBlbGlmIGNvbnRyb2xpZCA9PSBzZWxmLm5vcm1hbDoNCiAgICAgICAgICAgICAgICBzZWxmLmRvX25vcm1hbF9pbnN0YWxsKCkNCiAgICAgICAgICAgIGVsaWYgY29udHJvbGlkID09IHNlbGYuaWdub3JlOg0KICAgICAgICAgICAgICAgIHNlbGYuZG9faWdub3JlKCkNCg0KICAgICMgdXBkYXRlID0gVXBkYXRlV2luZG93KCJidWlsZF91cGRhdGVfcHJvbXB0LnhtbCIsIENPTkZJRy5BRERPTl9QQVRILCAnRGVmYXVsdCcsIG5hbWU9bmFtZSwgY3VycmVudD1jdXJyZW50LCBuZXc9bmV3LCBpY29uPWljb24sIGZhbmFydD1mYW5hcnQpDQogICAgIyB1cGRhdGUuZG9Nb2RhbCgpDQogICAgIyBkZWwgdXBkYXRlDQogICAgbXNnY3VycmVudCA9ICdFeGVjdXRhbmRvIGEgdmVyc8OjbyBtYWlzIHJlY2VudGUgZGEgY29tcGlsYcOnw6NvIGluc3RhbGFkYTogJw0KICAgIG1zZ3VwZGF0ZSA9ICdVcGRhdGUgYXZhaWxhYmxlIGZvciBpbnN0YWxsZWQgYnVpbGQ6ICcNCiAgICBidWlsZF9uYW1lID0gJ1tDT0xPUiB7MH1dezF9Wy9DT0xPUl0nLmZvcm1hdChDT05GSUcuQ09MT1IxLCBuYW1lKQ0KICAgIGN1cnJlbnRfdmVyc2lvbiA9ICdWZXJz'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))