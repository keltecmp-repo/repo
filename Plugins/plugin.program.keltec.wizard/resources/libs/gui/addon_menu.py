# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = 'IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMgICAgICBDb3B5cmlnaHQgKEMpIDIwMTkgZHJpbmZlcm5vbyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgVGhpcyBQcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgICAgICAgICMNCiMgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5ICAgICAgICAjDQojICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLCBvciAoYXQgeW91ciBvcHRpb24pICAgICAgICAgIw0KIyAgYW55IGxhdGVyIHZlcnNpb24uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICBUaGlzIFByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgICAgICAgICAgICAgIw0KIyAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgICAgICAgICAgICAgICMNCiMgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSAgICAgICAgICAgICAgICAjDQojICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlICAgICAgICAgICAjDQojICBhbG9uZyB3aXRoIFhCTUM7IHNlZSB0aGUgZmlsZSBDT1BZSU5HLiAgSWYgbm90LCB3cml0ZSB0byAgICAgICAgICAgICAgICAgICAgIw0KIyAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgNjc1IE1hc3MgQXZlLCBDYW1icmlkZ2UsIE1BIDAyMTM5LCBVU0EuICAgICAgICMNCiMgIGh0dHA6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQppbXBvcnQgeGJtYw0KaW1wb3J0IHhibWNndWkNCg0KaW1wb3J0IG9zDQoNCmZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uLmNvbmZpZyBpbXBvcnQgQ09ORklHDQpmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbiBpbXBvcnQgZGlyZWN0b3J5DQpmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbiBpbXBvcnQgbG9nZ2luZw0KZnJvbSByZXNvdXJjZXMubGlicy5jb21tb24gaW1wb3J0IHRvb2xzDQoNCg0KZGVmIGluc3RhbGxlZChhZGRvbik6DQogICAgdXJsID0gb3MucGF0aC5qb2luKENPTkZJRy5BRERPTlMsIGFkZG9uLCAnYWRkb24ueG1sJykNCiAgICBpZiBvcy5wYXRoLmV4aXN0cyh1cmwpOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBuYW1lID0gdG9vbHMucGFyc2VfZG9tKHRvb2xzLnJlYWRfZnJvbV9maWxlKHVybCksICdhZGRvbicsIHJldD0nbmFtZScsIGF0dHJzPXsnaWQnOiBhZGRvbn0pDQogICAgICAgICAgICBpY29uID0gb3MucGF0aC5qb2luKENPTkZJRy5BRERPTlMsIGFkZG9uLCAnaWNvbi5wbmcnKSAgIyByZWFkIGZyb20gaW5mb2xhYmVsPw0KICAgICAgICAgICAgbG9nZ2luZy5sb2dfbm90aWZ5KCdbQ09MT1IgezB9XXsxfVsvQ09MT1JdJy5mb3JtYXQoQ09ORklHLkNPTE9SMSwgbmFtZVswXSksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1tDT0xPUiB7MH1dQWRkLW9uIGF0aXZhZG9bL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjIpLCAnMjAwMCcsIGljb24pDQogICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgIHBhc3MNCg0KDQpkZWYgaW5zdGFsbF9mcm9tX2tvZGkocGx1Z2luKToNCiAgICBpbXBvcnQgdGltZQ0KDQogICAgaW5zdGFsbGVkX2NvbmQgPSAnU3lzdGVtLkhhc0FkZG9uKHswfSknLmZvcm1hdChwbHVnaW4pDQogICAgdmlzaWJsZV9jb25kID0gJ1dpbmRvdy5Jc1RvcE1vc3QoeWVzbm9kaWFsb2cpJw0KDQogICAgaWYgeGJtYy5nZXRDb25kVmlzaWJpbGl0eShpbnN0YWxsZWRfY29uZCk6DQogICAgICAgIGxvZ2dpbmcubG9nKCdKw6EgaW5zdGFsYWRvICcgKyBwbHVnaW4sIGxldmVsPXhibWMuTE9HREVCVUcpDQogICAgICAgIHJldHVybiBUcnVlDQoNCiAgICBsb2dnaW5nLmxvZygnQmFpeGFuZG8gJyArIHBsdWdpbiwgbGV2ZWw9eGJtYy5MT0dERUJVRykNCiAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdJbnN0YWxsQWRkb24oezB9KScuZm9ybWF0KHBsdWdpbikpDQoNCiAgICBjbGlja2VkID0gRmFsc2UNCiAgICBzdGFydCA9IHRpbWUudGltZSgpDQogICAgdGltZW91dCA9IDIwDQogICAgd2hpbGUgbm90IHhibWMuZ2V0Q29uZFZpc2liaWxpdHkoaW5zdGFsbGVkX2NvbmQpOg0KICAgICAgICBpZiB0aW1lLnRpbWUoKSA+PSBzdGFydCArIHRpbWVvdXQ6DQogICAgICAgICAgICBsb2dnaW5nLmxvZygnSW5zdGFsYcOnw6NvIGV4cGlyYWRhJywgbGV2ZWw9eGJtYy5MT0dERUJVRykNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgIHhibWMuc2xlZXAoNTAwKQ0KDQogICAgICAgICMgQXNzdW1pbmcgd2Ugb25seSB3YW50IHRvIGFuc3dlciB0aGUgb25lIGtub3duICJpbnN0YWxsIiBkaWFsb2cNCiAgICAgICAgaWYgeGJtYy5nZXRDb25kVmlzaWJpbGl0eSh2aXNpYmxlX2NvbmQpIGFuZCBub3QgY2xpY2tlZDoNCiAgICAgICAgICAgIGxvZ2dpbmcubG9nKCdDYWl4YSBkZSBkacOhbG9nbyBwYXJhIGNsaWNhciBlbSBhYnJpcicsIGxldmVsPXhibWMuTE9HREVCVUcpDQogICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdTZW5kQ2xpY2soeWVzbm9kaWFsb2csIDExKScpDQogICAgICAgICAgICBjbGlja2VkID0gVHJ1ZQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgbG9nZ2luZy5sb2coJy4uLmVzcGVyYScsIGxldmVsPXhibWMuTE9HREVCVUcpDQoNCiAgICBsb2dnaW5nLmxvZygnSW5zdGFsYWRvIHswfSEnLmZvcm1hdChwbHVnaW4pLCBsZXZlbD14Ym1jLkxPR0RFQlVHKQ0KICAgIHJldHVybiBUcnVlDQoNCg0KY2xhc3MgQWRkb25NZW51Og0KICAgIGRlZiBfX2luaXRfXyhzZWxmKToNCiAgICAgICAgc2VsZi5kaWFsb2cgPSB4Ym1jZ3VpLkRpYWxvZygpDQogICAgICAgIHNlbGYucHJvZ3Jlc3NfZGlhbG9nID0geGJtY2d1aS5EaWFsb2dQcm9ncmVzcygpDQoNCiAgICBkZWYgc2hvd19tZW51KHNlbGYsIHVybD1Ob25lKToNCiAgICAgICAgcmVzcG9uc2UgPSB0b29scy5vcGVuX3VybChDT05GSUcuQURET05GSUxFKQ0KICAgICAgICB1cmxfcmVzcG9uc2UgPSB0b29scy5vcGVuX3VybCh1cmwpDQogICAgICAgIGxvY2FsX2ZpbGUgPSBvcy5wYXRoLmpvaW4oQ09ORklHLkFERE9OX1BBVEgsICdyZXNvdXJjZXMnLCAndGV4dCcsICdhZGRvbnMuanNvbicpDQoNCiAgICAgICAgaWYgdXJsX3Jlc3BvbnNlOg0KICAgICAgICAgICAgVEVNUEFERE9ORklMRSA9IHVybF9yZXNwb25zZS50ZXh0DQogICAgICAgIGVsaWYgcmVzcG9uc2U6DQogICAgICAgICAgICBURU1QQURET05GSUxFID0gcmVzcG9uc2UudGV4dA0KICAgICAgICBlbGlmIG9zLnBhdGguZXhpc3RzKGxvY2FsX2ZpbGUpOg0KICAgICAgICAgICAgVEVNUEFERE9ORklMRSA9IHRvb2xzLnJlYWRfZnJvbV9maWxlKGxvY2FsX2ZpbGUpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBURU1QQURET05GSUxFID0gTm9uZQ0KICAgICAgICAgICAgbG9nZ2luZy5sb2coIltNZW51IEFkZG9uXSBOZW5odW1hIGxpc3RhIEFkZG9uIGFkaWNpb25hZGEuIikNCg0KICAgICAgICBpZiBURU1QQURET05GSUxFOg0KICAgICAgICAgICAgaW1wb3J0IGpzb24NCg0KICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGFkZG9uc19qc29uID0ganNvbi5sb2FkcyhURU1QQURET05GSUxFKQ0KICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgIGFkZG9uc19qc29uID0gTm9uZQ0KICAgICAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJbQ29uZmlndXJhw6fDtWVzIGF2YW7Dp2FkYXNdIEVSUk86IEZvcm1hdG8gaW52w6FsaWRvIHBhcmEgezB9LiIuZm9ybWF0KFRFTVBBRERPTkZJTEUpKQ0KDQogICAgICAgICAgICBpZiBhZGRvbnNfanNvbjoNCiAgICAgICAgICAgICAgICBhZGRvbnMgPSBhZGRvbnNfanNvblsnYWRkb25zJ10NCg0KICAgICAgICAgICAgICAgIGlmIGFkZG9ucyBhbmQgbGVuKGFkZG9ucykgPiAwOg0KICAgICAgICAgICAgICAgICAgICBmb3IgYWRkb24gaW4gYWRkb25zOg0KICAgICAgICAgICAgICAgICAgICAgICAgYWRkb25uYW1lID0gYWRkb24uZ2V0KCduYW1lJywgJycpDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlID0gYWRkb24uZ2V0KCd0eXBlJywgJ2FkZG9uJykNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24gPSBhZGRvbi5nZXQoJ3NlY3Rpb24nLCBGYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHBsdWdpbiA9IGFkZG9uLmdldCgncGx1Z2luJywgJycpDQogICAgICAgICAgICAgICAgICAgICAgICBhZGRvbnVybCA9IGFkZG9uLmdldCgndXJsJywgJycpDQogICAgICAgICAgICAgICAgICAgICAgICByZXBvc2l0b3J5ID0gYWRkb24uZ2V0KCdyZXBvc2l0b3J5JywgJycpDQogICAgICAgICAgICAgICAgICAgICAgICByZXBvc2l0b3J5eG1sID0gYWRkb24uZ2V0KCdyZXBvc2l0b3J5eG1sJywgJycpDQogICAgICAgICAgICAgICAgICAgICAgICByZXBvc2l0b3J5dXJsID0gYWRkb24uZ2V0KCdyZXBvc2l0b3J5dXJsJywgJycpDQogICAgICAgICAgICAgICAgICAgICAgICBpY29uID0gYWRkb24uZ2V0KCdpY29uJywgQ09ORklHLkFERE9OX0lDT04pDQogICAgICAgICAgICAgICAgICAgICAgICBmYW5hcnQgPSBhZGRvbi5nZXQoJ2ZhbmFydCcsIENPTkZJRy5BRERPTl9GQU5BUlQpDQogICAgICAgICAgICAgICAgICAgICAgICBhZHVsdCA9IGFkZG9uLmdldCgnYWR1bHQnLCBGYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gYWRkb24uZ2V0KCdkZXNjcmlwdGlvbicsICcnKQ0KDQogICAg'
love = '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VPNtVPNtVPNtVPNtVPOcMvOho3DtD09BExyUYyAVG1qOESIZIPN9CFNaqUW1MFptLJ5xVTSxqJk0Bt0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOwo250nJ51MD0XQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtqUyjMF5fo3qypvtcVQ09VPqmn2yhWmbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMTylMJA0o3W5YzSxMS9znJkyXTSxMT9hozSgMFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUfaoJ9xMFp6VPquMTEioaZaYPNaLJA0nJ9hWmbtW3AenJ4aYPNaozSgMFp6VTSxMT9hozSgMFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNaqKWfWmbtLJExo251pzk9YPOxMKAwpzyjqTyiow1xMKAwpzyjqTyiovjtnJAiow1cL29hYPOzLJ5upaD9MzShLKW0YN0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqTuyoJIcqQ1QG05TFHphIRuSGHHlXD0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTIfnJLtqUyjMF5fo3qypvtcVQ09VPquMTEioaOuL2faBt0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOxnKWyL3EipaxhLJExK2McoTHbLJExo25hLJ1yYPO7W21iMTHaBvNaLJExo25mWljtW2SwqTyiovp6VPquMTEioaOuL2faYN0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtW25uoJHaBvOuMTEioz5uoJHfVPq1pzjaBvOuMTEioaIloU0fQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOxMKAwpzyjqTyiow1xMKAwpzyjqTyiovjtnJAiow1cL29hYPOzLJ5upaD9MzShLKW0YN0X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'
god = 'b25zZToNCiAgICAgICAgICAgIGxvZ2dpbmcubG9nX25vdGlmeSgiW0NPTE9SIHswfV1BZGRvbiBJbnN0YWxsZXJbL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjEpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdbQ09MT1IgezB9XXsxfTpbL0NPTE9SXSBbQ09MT1IgezJ9XUludmFsaWQgWmlwIFVybCFbL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjEsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGx1Z2luLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTkZJRy5DT0xPUjIpKQ0KICAgICAgICAgICAgcmV0dXJuDQoNCiAgICAgICAgdG9vbHMuZW5zdXJlX2ZvbGRlcnMoQ09ORklHLlBBQ0tBR0VTKQ0KDQogICAgICAgIHNlbGYucHJvZ3Jlc3NfZGlhbG9nLmNyZWF0ZShDT05GSUcuQURET05USVRMRSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnW0NPTE9SIHswfV1bQl1CYWl4YW5kbzpbL0JdWy9DT0xPUl0gW0NPTE9SIHsxfV17Mn1bL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT05GSUcuQ09MT1IxLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGx1Z2luKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsnXG4nKycnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKydcbicrJ1tDT0xPUiB7MH1dUG9yIGZhdm9yLCBhZ3VhcmRlWy9DT0xPUl0nLmZvcm1hdChDT05GSUcuQ09MT1IyKSkNCiAgICAgICAgdXJsc3BsaXRzID0gdXJsLnNwbGl0KCcvJykNCiAgICAgICAgbGliID0gb3MucGF0aC5qb2luKENPTkZJRy5QQUNLQUdFUywgdXJsc3BsaXRzWy0xXSkNCg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBvcy5yZW1vdmUobGliKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwYXNzDQogICAgICAgICAgICANCiAgICAgICAgRG93bmxvYWRlcigpLmRvd25sb2FkKHVybCwgbGliKQ0KICAgICAgICB0aXRsZSA9ICdbQ09MT1IgezB9XVtCXUJhaXhhbmRvOlsvQl1bL0NPTE9SXSBbQ09MT1IgezF9XXsyfVsvQ09MT1JdJy5mb3JtYXQoQ09ORklHLkNPTE9SMiwgQ09ORklHLkNPTE9SMSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGx1Z2luKQ0KICAgICAgICBzZWxmLnByb2dyZXNzX2RpYWxvZy51cGRhdGUoMCwgdGl0bGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsnXG4nKycnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArJ1xuJysnW0NPTE9SIHswfV1Qb3IgZmF2b3IsIGFndWFyZGVbL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjIpKQ0KICAgICAgICBwZXJjZW50LCBlcnJvcnMsIGVycm9yID0gZXh0cmFjdC5hbGwobGliLCBDT05GSUcuQURET05TLCB0aXRsZT10aXRsZSkNCiAgICAgICAgc2VsZi5wcm9ncmVzc19kaWFsb2cudXBkYXRlKDAsIHRpdGxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArJ1xuJysnJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKydcbicrJ1tDT0xPUiB7MH1dQmFpeGFuZG8gRGVwZW5kZW5jaWVzWy9DT0xPUl0nLmZvcm1hdChDT05GSUcuQ09MT1IyKSkNCiAgICAgICAgaW5zdGFsbGVkKHBsdWdpbikNCiAgICAgICAgaW5zdGFsbGxpc3QgPSBkYi5ncmFiX2FkZG9ucyhsaWIpDQogICAgICAgIGxvZ2dpbmcubG9nKHN0cihpbnN0YWxsbGlzdCkpDQogICAgICAgIGRiLmFkZG9uX2RhdGFiYXNlKGluc3RhbGxsaXN0LCAxLCBUcnVlKQ0KICAgICAgICBzZWxmLmluc3RhbGxfZGVwZW5kZW5jeShwbHVnaW4pDQogICAgICAgIHNlbGYucHJvZ3Jlc3NfZGlhbG9nLmNsb3NlKCkNCg0KICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdVcGRhdGVBZGRvblJlcG9zKCknKQ0KICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdVcGRhdGVMb2NhbEFkZG9ucygpJykNCiAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbignQ29udGFpbmVyLlJlZnJlc2goKScpDQoNCiAgICAgICAgZm9yIGl0ZW0gaW4gaW5zdGFsbGxpc3Q6DQogICAgICAgICAgICBpZiBpdGVtLnN0YXJ0c3dpdGgoJ3NraW4uJykgYW5kIG5vdCBpdGVtID09ICdza2luLnNob3J0Y3V0cyc6DQogICAgICAgICAgICAgICAgaWYgbm90IENPTkZJRy5CVUlMRE5BTUUgPT0gJycgYW5kIENPTkZJRy5ERUZBVUxUSUdOT1JFID09ICd0cnVlJzoNCiAgICAgICAgICAgICAgICAgICAgQ09ORklHLnNldF9zZXR0aW5nKCdkZWZhdWx0c2tpbmlnbm9yZScsICd0cnVlJykNCiAgICAgICAgICAgICAgICBza2luLnN3aXRjaF90b19za2luKGl0ZW0sICdTa2luIEluc3RhbGxlcicpDQoNCiAgICBkZWYgaW5zdGFsbF9hZGRvbihzZWxmLCBwbHVnaW4sIHVybHMsIG92ZXI9RmFsc2UpOg0KICAgICAgICBmcm9tIHJlc291cmNlcy5saWJzIGltcG9ydCBkYg0KDQogICAgICAgIGluc3RhbGwgPSBOb25lDQoNCiAgICAgICAgaWYgbm90IG92ZXI6ICAgICAgICANCiAgICAgICAgICAgIGlmIHhibWMuZ2V0Q29uZFZpc2liaWxpdHkoJ1N5c3RlbS5IYXNBZGRvbih7MH0pJy5mb3JtYXQocGx1Z2luKSk6DQogICAgICAgICAgICAgICAgaW5zdGFsbCA9IHNlbGYuZGlhbG9nLnllc25vKENPTkZJRy5BRERPTlRJVExFLCAnW0NPTE9SIHswfV17MX1bL0NPTE9SXSBqw6EgaW5zdGFsYWRvLiBWb2PDqiBnb3N0YXJpYSBkZSByZWluc3RhbMOhLWxvPycuZm9ybWF0KENPTkZJRy5DT0xPUjEsIHBsdWdpbikpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGluc3RhbGwgPSBzZWxmLmRpYWxvZy55ZXNubyhDT05GSUcuQURET05USVRMRSwgJ1ZvY8OqIGdvc3RhcmlhIGRlIGluc3RhbGFyIFtDT0xPUiB7MH1dezF9Wy9DT0xPUl0/Jy5mb3JtYXQoQ09ORklHLkNPTE9SMSwgcGx1Z2luKSkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGluc3RhbGwgPSBUcnVlDQogICAgICAgICAgICANCiAgICAgICAgaWYgbm90IGluc3RhbGw6DQogICAgICAgICAgICByZXR1cm4NCiAgICAgICAgICAgIA0KICAgICAgICB1cmxfcmVzcG9uc2UgPSB0b29scy5vcGVuX3VybCh1cmxzWzBdLCBjaGVjaz1UcnVlKQ0KICAgICAgICByZXBvc2l0b3J5dXJsX3Jlc3BvbnNlID0gdG9vbHMub3Blbl91cmwodXJsc1syXSwgY2hlY2s9VHJ1ZSkNCiAgICAgICAgcmVwb3NpdG9yeXhtbF9yZXNwb25zZSA9IHRvb2xzLm9wZW5fdXJsKHVybHNbM10pDQogICAgICAgIA0KICAgICAgICBpZiBGYWxzZSBub3QgaW4gW3JlcG9zaXRvcnl4bWxfcmVzcG9uc2UsIHJlcG9zaXRvcnl1cmxfcmVzcG9uc2VdOg0KICAgICAgICANCiAgICAgICAgICAgIHJlcG9faWQgPSB1cmxzWzFdDQogICAgICAgIA0KICAgICAgICAgICAgaWYgbm90IHhibWMuZ2V0Q29uZFZpc2liaWxpdHkoJ1N5c3RlbS5IYXNBZGRvbih7MH0pJy5mb3JtYXQocmVwb19pZCkpOg0KICAgICAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJSZXBvc2l0w7NyaW8gbsOjbyBpbnN0YWxhZG8sIGluc3RhbGFuZG8tbyIpDQoNCiAgICAgICAgICAgICAgICBmcm9tIHhtbC5ldHJlZSBpbXBvcnQgRWxlbWVudFRyZWUNCiAgICAgICAgICAgICAgICByb290ID0gRWxlbWVudFRyZWUuZnJvbXN0cmluZyhyZXBvc2l0b3J5eG1sX3Jlc3BvbnNlLnRleHQuZW5jb2RlKCdhc2NpaScsICdiYWNrc2xhc2hyZXBsYWNlJykpDQogICAgICAgICAgICAgICAgZW50cmllcyA9IHJvb3QuZmluZGFsbCgnYWRkb24nKQ0KICAgICAgICAgICAgICAgIHZlcnNpb24gPSBOb25lDQoNCiAgICAgICAgICAgICAgICBmb3IgZW50cnkgaW4gZW50cmllczoNCiAgICAgICAgICAgICAgICAgICAgaWYgZW50cnkuYXR0cmliWydpZCddID09IHJlcG9faWQ6DQogICAgICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uID0gZW50cnkuYXR0cmliWyd2ZXJzaW9uJ10NCg0KICAgICAgICAgICAgICAgIGlmIHZlcnNpb246DQogICAgICAgICAgICAgICAgICAgIHJlcG96aXAgPSAnezB9ezF9LXsyfS56aXAnLmZvcm1hdCh1cmxzWzJdLCByZXBvX2lkLCB2ZXJzaW9uKQ0KICAgICAgICAgICAgICAgICAgICBsb2dnaW5nLmxvZyhyZXBvemlwKQ0KICAgICAgICAgICAgICAgICAgICBkYi5hZGRvbl9kYXRhYmFzZShyZXBvX2lkLCAxKQ0KICAgICAgICAgICAgICAgICAgICBzZWxmLmluc3RhbGxfYWRkb24ocmVwb19pZCwgcmVwb3ppcCwgb3Zlcj1UcnVlKQ0KICAgICAgICAgICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdVcGRhdGVBZGRvblJlcG9zKCknKQ0KICAgICAgICAgICAgICAgICAgICBpbnN0YWxsID0gaW5zdGFsbF9mcm9tX2tvZGkocGx1Z2luKQ0KICAgICAgICAgICAgICAgICAgICBpZiBpbnN0YWxsOg0KICAgICAgICAgICAgICAgICAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbignQ29udGFpbmVyLlJlZnJlc2goKScpDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgIGxvZ2dpbmcubG9nKA0KICAgICAgICAgICAgICAgICAgICAgICAgIltBZGRvbiBJbnN0YWxsZXJdIFJlcG9zaXTDs3JpbyBuw6NvIGluc3RhbGFkbzogSW5jYXBheiBkZSBvYnRlciB1cmwhICh7MH0pIi5mb3JtYXQodXJsc1sxXSkpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJSZXBvc2l0w7NyaW8gaW5zdGFsYWRvLCBpbnN0YWxhbmRvIGFkZG9uIikNCiAgICAgICAgICAgICAgICBpbnN0YWxsID0gaW5zdGFsbF9mcm9tX2tvZGkocGx1Z2luKQ0KICAgICAgICAgICAgICAgIGlmIGluc3RhbGw6DQogICAgICAgICAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oJ0NvbnRhaW5lci5SZWZyZXNoKCknKQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICBlbGlmIHVybF9yZXNwb25zZToNCiAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJTZW0gcmVwb3NpdMOzcmlvLCBpbnN0YWxhbmRvIGFkZG9uIikNCiAgICAgICAgICAgIHNlbGYuaW5zdGFsbF9hZGRvbl9mcm9tX3VybChwbHVnaW4sIHVybHNbMF0pDQoNCiAgICAgICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKG9zLnBhdGguam9pbihDT05GSUcuQURET05TLCBwbHVnaW4p'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))