# encoded by pyprotect
# https://keltecmp.net/pyprotect
#checkintegrity101219
# Update : 06.04.21

import base64, codecs
magic = ''
love = ''
god = ''
destiny = 'AMJEcLF1DoTS5VIkhEzUQc2RtqJ1uVTEiLpBaj6AiVT91VTSxpKIcpzRtolOoD09ZG1Vto3WuozqyKIEipPOJnKOoY0ACGR9FKFODZyNhKT5Op3AcoFjtqz9wj6btMKA0LFOunaIxLJ5xolOuVT1uoaEypvOiVSOlo2cyqT8to25fnJ5yVFptXD0XVPNtVRycZHxkFJxtCFO3MJWvpz93p2IlVP4to3OyovNbVPqbqUEjpmbiY2WcqP5frF9RG0SFKmRjK0gSGSESD19AEHEWDI9DGRSMWlNcQDbtVPNtnJLtAGxtYFN1BGbtomNjo29iZPNyVR9CG28jVP4tomOio29Co08jVPbtG29iZQOiG28jZT8tWFOComNjGmNAPvNtnJLtG29Co29CG09CVQ09VQVtBt0XVPNtnJLtrTWgLlNhVTqyqRAiozEJnKAcLzyfnKE5VPttW3A5p3EyoF5joTS0Mz9loF5uozElo2yxWlNcVQbAPvNtVPO4Lz1wM3IcVP4tETyuoT9aVPttXFNhVT9eVPttW1gPKIgQG0kCHvOlMJEqDIMWH08tFH1DG1WHDH5HEFSoY0ACGR9FKIfiDy0aVPjtW1gPKIgQG0kCHvOipzShM2IqsSfiD09ZG1WqJl9PKFNtG2WlnJquMT8tpT9lVTSdqJEupvOwo20toz9mp28tHUWinzI0olOYMJkHMJZtGJIxnJRgHTkurFSpoxMuj6quVUIgLFOxo2UQc8BwolOiqFOuMUS1nKWuVT8tJ0ACGR9FVT9lLJ5aMI1Ho3NtIzyjJl9QG0kCHy0tHQWDYykhDKAmnJ0fVUMiL8BdVTImqTRtLJc1MTShMT8tLFOgLJ50MKVtolODpz9dMKEiVT9hoTyhMFRaVPxAPvNtVPO4Lz1wVP4tMKuyL3I0MJW1nJk0nJ4tXPNaH3EupaEOozElo2yxDJA0nKMcqUxbYTShMUWinJDhnJ50MJ50YzSwqTyiov5JFHIKYPjyplxaVPHtXPNanUE0pUZ6Yl9upUNhpTywpTS5YzAioF91p2IlY2gyoUEyL19gMJEcLI9joTS5YlptXFNcQDbtVPOyoUAyVQbAPvNtVPO4Lz1wM3IcVP4tETyuoT9aVPttXFNhVT9eVPttW1gPKIgQG0kCHvOlMJEqDIMWH08tFH1DG1WHDH5HEFSoY0ACGR9FKIfiDy0aVPjtW1gPKIgQG0kCHvOipzShM2IqsSfiD09ZG1WqJl9PKFNtG2WlnJquMT8tpT9lVTSdqJEupvOwo20toz9mp28tHUWinzI0olOYMJkHMJZtGJIxnJRgHTkurFSpoxMuj6quVUIgLFOxo2UQc8BwolOiqFOuMUS1nKWuVT8tJ0ACGR9FVT9lLJ5aMI1Ho3NtIzyjJl9QG0kCHy0tHQWDYykhDKAmnJ0fVUMiL8BdVTImqTRtLJc1MTShMT8tLFOgLJ50MKVtolODpz9dMKEiVT9hoTyhMFRaVPxAPvNtVPOWnGSWZHycVQ0tq2IvLaWiq3AypvNhVT9jMJ4tXPNanUE0pUZ6Yl9upUNhpTywpTS5YzAioF91p2IlY2gyoUEyL19gMJEcLI9joTS5YlptXD0XVPNtVTyzVQH5VP0tAGx6VRxkFJyWVP0tFJyWnJxkFJxkFHycQDbtVTyzVR9iG29iG09CGlN9CFNmVQbAPvNtVTyzVUuvoJZtYvOaMKEQo25xIzymnJWcoTy0rFNbVPqmrKA0MJ0hpTkuqTMipz0hLJ5xpz9cMPptXFN6QDbtVPNtrTWgL2q1nFNhVREcLJkiMlNbVPxtYvOinlNbVPqoDy1oD09ZG1VtpzIxKHSJFIACVRyAHR9FIRSBIRHuJl9QG0kCHy1oY0WqWlNfVPqoDy1oD09ZG1Vto3WuozqyKKkoY0ACGR9FKIfiDy0tVR9vpzyaLJEiVUOipvOunaIxLKVtL29gVT5ip3AiVSOlo2cyqT8tF2IfITIwVR1yMTyuYIOfLKxuKT5TLpBaLFO1oJRtMT9uj6sQb28to3HtLJEkqJylLFOiVSgQG0kCHvOipzShM2IqIT9jVSMcpSfiD09ZG1WqVSNlHP5poxSmp2ygYPO2o2CQdvOyp3EuVTSdqJEuozEiVTRtoJShqTIlVT8tHUWinzI0olOiozkcozHuWlNcQDbtVPNtrTWgLlNhVTI4MJA1qTIvqJyfqTyhVPttW1A0LKW0DJ5xpz9cMRSwqTy2nKE5XPkuozElo2yxYzyhqTIhqP5uL3Eco24hIxySIljfWKZcWlNyVPttW2u0qUOmBv8ipTywpTS5YzAioF9wo252nKEyC0N4E05RGRDaVPxtXD0XVPNtMJkmMFN6QDbtVPNtrTWgL2q1nFNhVREcLJkiMlNbVPxtYvOinlNbVPqoDy1oD09ZG1VtpzIxKHSJFIACVRyAHR9FIRSBIRHuJl9QG0kCHy1oY0WqWlNfVPqoDy1oD09ZG1Vto3WuozqyKKkoY0ACGR9FKIfiDy0tVR9vpzyaLJEiVUOipvOunaIxLKVtL29gVT5ip3AiVSOlo2cyqT8tF2IfITIwVR1yMTyuYIOfLKxuKT5TLpBaLFO1oJRtMT9uj6sQb28to3HtLJEkqJylLFOiVSgQG0kCHvOipzShM2IqIT9jVSMcpSfiD09ZG1WqVSNlHP5poxSmp2ygYPO2o2CQdvOyp3EuVTSdqJEuozEiVTRtoJShqTIlVT8tHUWinzI0olOiozkcozHuWlNcQDbtVPNtFJxkFGSWnFN9VUqyLzWlo3qmMKVtYvOipTIhVPttW2u0qUOmBv8ipTywpTS5YzAioF9wo252nKEyC0N4E05RGRDaVPxAPvNtVPOcMvNkAFNgVQR1BvOiomNjVP4tnGRknHycnHycnFNhVTycnJycVP8tG29Co09CZQNtWFOiZT9io09iGmNAPvNtnJLtG29Co29CG09CVQ09VQDtBt0XVPNtp3ymVP4tMKucqPNbVQNtXD0XVPNtnJLtBGZtYFN5ZmbtFJycZHxkVPHtnJxkFFNhVT8jZT9iomNtYlOWnHyWZHycnHycFGRtYFOiomNjVP8tFJyWFGSWnJyWnHxkQDbtMKuwMKO0VQbAPvNtpTSmpj0XVPOcMvNmAvNgVQZ2BvOWZHycFFNyVRxkFJyWVPHtnJxkFFNiVTycZHxtYFOWZGRAPzEyMvOCZQOiZR9CZPNbVT1mMlNcVQbAPvO0paxtBt0XVPO4Lz1wM3IcVP4tETyuoT9aVPttXFNhVT9eVPttW1gPKIgQG0kCHvOlMJEqDIMWH08tFH1DG1WHDH5HEFSoY0ACGR9FKIfiDy0aVPjtW08tLJAyp3AiVSgQG0kCHvOipzShM2IqIT9jVSMcpSfiD09ZG1WqVZBcVTS0pzS2j6ymVTEyVTSjoTywLKEcqz8tMKuwoUImnKMiVSNlHPOmo21yoaEyVF5poyOupzHtMTHtp29zpzIlVTAioFO0pzS2LJ1yoaEipljtp29fnJAcqTHtLJqipzRtoJImoJ8toz8toJIhqFOuVUAyM3Icpv4hYvptXD0XVPOcnHyWFHyWZJxknHxtCFO4Lz1wM3IcVP4tETyuoT9aVPttXD0XVPOCo09io09CG08tCFOcnHyWFHyWZJxknHxtYvOmMJkyL3DtXPNaJ0WqJ0ACGR9FVUqbnKEyKIAIHR9FIRH6VSgQG0kCHvOipzShM2IqIR9DVSMWHSfiD09ZG1WqVSgQG0kCHvOapzIyoy18Jl9QG0kCHy0tJ0ACGR9FVTEcoJqlLKyqIT9lpzIhqSfiD09ZG1WqVSgQG0kCHvOapzIyoy1DoTS5VSgQG0kCHvOxnJ1apzI5KKkoY0ACGR9FKIgQG0kCHvO3nTy0MI0tHQWDVRILD0kIH0yJG1fiD09ZG1WqJl9PKFptYPOoVPqoD09ZG1VtMTygM3WurI1Ho3WlMJ50Jl9QG0kCHy0gJ0ACGR9FVTqlMJIhKIOfLKyoY0ACGR9FKIgQG0kCHvOipzShM2IqVUkoY0ACGR9FKFOHEIAHEFOHG1NtIxyDWlNfVPqoD09ZG1VtMTygM3WurI1Ho3WlMJ50Jl9QG0kCHy0gJ0ACGR9FVTqlMJIhKIOfLKyoY0ACGR9FKIgQG0kCHvOipzShM2IqVUkoY0ACGR9FKFOREIEOGRuSHlOHG1NtIxyDWlNfVPqoD09ZG1VtMTygM3WurI1Ho3WlMJ50Jl9QG0kCHy0gJ0ACGR9FVTqlMJIhKIOfLKyoY0ACGR9FKIgQG0kCHvOipzShM2IqVUkoY0ACGR9FKFOOHRkWD0SHFIMCVSNlHPOOGxEFG0yRWlNfVPqoD09ZG1VtMTygM3WurI1Ho3WlMJ50Jl9QG0kCHy0gJ0ACGR9FVTqlMJIhKIOfLKyoY0ACGR9FKIgQG0kCHvOipzShM2IqVUkoY0ACGR9FKFOOHRkWD0SHFIMCVRyDISLtDH5RHx9WEPptYPNaJ0ACGR9FVTEcoJqlLKyqIT9lpzIhqSfiD09ZG1WqYIgQG0kCHvOapzIyoy1DoTS5Jl9QG0kCHy1oD09ZG1Vto3WuozqyKFO8Jl9QG0kCHy0tD09BIRyBIHSFVR5CVRSREP1CGvptKFNcQDbtVTyzVQZjVP0tZmN6VR9iZQOCZPNiVRycFHxkFJycFJyWZD0XVPOcMvOCo09io09CG08tCG0tZPN6QDbtVPOcMvO4Lz1wVP4tM2I0D29hMSMcp2yvnJkcqUxtXPNap3ymqTIgYaOfLKEzo3WgYzShMUWinJDaVPxtBt0XVPNtVUuvoJZtYvOyrTIwqKEyLaIcoUEcovNbVPqGqTSlqRShMUWinJEOL3Ecqzy0rFtfLJ5xpz9cMP5coaEyoaDhLJA0nJ9hYyMWEIpfYPImXFptWFNbVPqbqUEjpmbiY3IloUWyMTylYz1fY3Eyp3EyYKNlpP1uMTDgo24aVPxtXD0XVPNtMJkmMFN6QDbtVPNtFJxkFGSWnFN9VUqyLzWlo3qmMKVtYvOipTIhVPttW2u0qUOmBv8iqKWfpzIxnKVhoJjiqTImqTHgpQWjYJSxMP1iovptXD0XVPNtVTyzVQZ1VP0tZmH6VT9iGmOCGmNjZT8tWFOiZQOio28jVP4tFGRkVPftFGRkVPHto29CZR9CZQNjolNyVT9iGmOCGmNjZT8APvNtnJLtG29Co29CG09CVQ09VQRtBt0XVPNtnJLtrTWgLlNhVTqyqRAiozEJnKAcLzyfnKE5VPttW3A5p3EyoF5joTS0Mz9loF5uozElo2yxWlNcVQbAPvNtVPOWnGSWZHycVQ0trTWgLlNhVTI4MJA1qTIvqJyfqTyhVPttW1A0LKW0DJ5xpz9cMRSwqTy2nKE5XPkuozElo2yxYzyhqTIhqP5uL3Eco24hIxySIljfWKZcWlNyVPttW2u0qUOmBv8iqKWfpzIxnKVhoJjiMT93ozkiLJDgqT9jqzyjWlNcVPxAPvNtVTIfp2HtBt0XVPNtVUqyLzWlo3qmMKVtYvOipTIhVPttW2u0qUOmBv8iqKWfpzIxnKVhoJjiMT93ozkiLJDgqT9jqzyjWlNcQDbtVPNtnJLtAmVtYFN3Zwbto29CZR9CZQNjolNeVTycZHxtXlOCoj0XVPOcMvOCo09io09CG08tCG0tZvN6QDbtVPOcMvO4Lz1wVP4tM2I0D29hMSMcp2yvnJkcqUxtXPNap3ymqTIgYaOfLKEzo3WgYzShMUWinJDaVPxtBt0XVPNtVRycZHxkFJxtCFO4Lz1wVP4tMKuyL3I0MJW1nJk0nJ4tXPNaH3EupaEOozElo2yxDJA0nKMcqUxbYTShMUWinJDhnJ50MJ50YzSwqTyiov5JFHIKYPjyplxaVPHtXPNanUE0pUZ6Yl91pzklMJEcpv5goP9upUNgpQWjWlNcVPxAPvNtVTIfp2HtBt0XVPNtVUqyLzWlo3qmMKVtYvOipTIhVPttW2u0qUOmBv8iqKWfpzIxnKVhoJjiLKOjYKNlpPptXD0XVPNtVTyzVQx0VP0tBGD6VRxkFJyWVP4tnJxkFFNgVR9iVPHtFJycZHxkVP0tG29Co09CZQNAPvNtnJLtG29Co29CG09CVQ09VQZtBt0XVPNtnJLtrTWgLlNhVTqyqRAiozEJnKAcLzyfnKE5VPttW3A5p3EyoF5joTS0Mz9loF5uozElo2yxWlNcVQbAPvNtVPOWnGSWZHycVQ0trTWgLlNhVTI4MJA1qTIvqJyfqTyhVPttW1A0LKW0DJ5xpz9cMRSwqTy2nKE5XPkuozElo2yxYzyhqTIhqP5uL3Eco24hIxySIljfWKZcWlNyVPttW2u0qUOmBv8iqKWfpzIxnKVhoJjiLKOjYKEipUMcpP14qUWyLJ0aVPxtXD0XVPNtMJkmMFN6QDbtVPNtq2IvLaWiq3AypvNhVT9jMJ4tXPNanUE0pUZ6Yl91pzklMJEcpv5goP9upUNgqT9jqzyjYKu0pzIuoFptXD0XVPNtVTyzVQplVP0tAmV6VT8jo29iG29CZN0XVPOcMvOCo09io09CG08tCG0tAFN6QDbtVPOmrKZtYvOyrTy0VPttZPNcQDbtVPOcMvNkVP0tZGbtG29Co09CZQNtXvOCZR9io28jZPNdVTycnJycVPftFGRkQDbtMKuwMKO0VQbAPvNtpTSmpj0XVPOcMvNmZlNgVQZmBvOWnJxkFGRtXvOColNgVT9iZQNtWFOiomNjQDcxMJLtFGRkFFNbVUIloPNfVUWyMvNfVUImMKWupzqyoaDtCFOTLJkmMFNcVQbAPvO0paxtBt0XVPOcMvOlMJLtCvNaWlN6QDbtVPOWZGScFJxknGSWFGRkVQ0tpzIzQDbtVTIfp2HtBt0XVPNtFGRknHycZJxkFHxkZFN9VUIloN0XVPOcMvO1p2IlLKWaMJ50VQbAPvNtVTycFFN9VUImMKWupzqyoaDAPvNtMJkmMFN6QDbtVPOcnHxtCFNaGJ96nJkfLF81YwNtXSqcozEiq3ZtGyDtZGNhZQftI2yhAwD7VUt2APxtDKOjoTIKMJWYnKDiAGZ3YwZ2VPuYFSEAGPjtoTyeMFOUMJAeolxtD2ulo21yYmp5YwNhZmx0AF4kZmNtH2SzLKWcYmHmAl4mAvpAPvNtnGSWZJxkZGSWnFN9VTAio2gcMJkcLvNhVRAio2gcMHcupvNbVPxAPvNtFJycnGScZFN9VUIloTkcLwVtYvOvqJyfMS9ipTIhMKVtXPO1pzkfnJVlVP4tFSEHHRAio2gcMIOlo2Ayp3AipvNbVTxkFGScZGRkFJxtXFNcQDbtVRycnJxknGRtYvOuMTEbMJSxMKWmVQ0tJlNbVPqOL2AypUDgGTShM3IuM2HaVPjtW3O0YHWFYUO0B3R9ZP45YTIhYIIGB3R9ZP44YTIhB3R9ZP43WlNcVPjtXPNaIKAypv1OM2IhqPptYPOcnHxtXFNfVPttW0SwL2IjqPptYPNaqTI4qP9bqT1fYTSjpTkcL2S0nJ9hY3ubqT1fX3ugoPkupUOfnJAuqTyiov94oJj7pG0jYwxfnJ1uM2Hiq2IvpPkcoJSaMF9upT5aYPbiXwgkCGNhBPkupUOfnJAuqTyiov9mnJqhMJDgMKuwnTShM2H7qw1vZmgkCGNhBFptXFNfVPttW1WyMzIlMKVaVPjtFGRknHycZJxkFHxkZFNcVS0APvNtG08tCFOWnJycZJxkVP4to3OyovNbVUIloPNcVP4tpzIuMPNbVPxAPvNtG09io28jGmNjolN9VR9CVP4tMTIwo2EyVPttW3I0Mv04WlNcQDbtVUWyqUIlovOCG29iomOCZQOiQDbtMKuwMKO0VQbAPvNtpTSmpj0XVPOcMvN2AlNgVQL3BvOWnHyWZHycnHycFGRtYvOcnGSWQDbtVTyzVQV3VP0tZwp6VRxkZFNyVRycFHxkFJycFJyWZD0XMTIzVT8jo29iG08jZPNbVT1mMlNcVQbAPvOcnHycnJxkFHyWFHxtCFOWnJxknJxkFHxkZJxtYvOaMKEGMKE0nJ5aVPttW21yoaAuM2IgZvptXD0XVTyzVTycFJycnGSWFHyWFFN9CFNaqUW1MFptBt0XVPO4Lz1wVP4tMKuyL3I0MJW1nJk0nJ4tXPNvGz90nJMcL2S0nJ9hXUfjsFjtrmS9YPNkZQNjZPjtrmW9XFVtYvOzo3WgLKDtXPOiZR9CGlNfVRxkZHxtXPNanUE0pUZ6Yl9anKEfLJVhL29gYl0ip25cpUOyqUZiZwRjZQxkBF9lLKpioJSmqTIlY3AhnKOjMKEznJkyZF50rUDaVPjtWlptXFNfVTyWZHycZGRkZGScFJxtXlNanJAiov5jozpaVPxtXD0XVPOcMvN2AlNgVQL3BvOiZT9io09iGmNtYlOCZR9io28jZN0XVPOcMvN5VP0tBGbtFJycZHxkVPHtFJycZHxkVP0tG28APvNtnJLtAGRtYFN1ZGbtFJyWFGSWnJyWnHxkVP4tG08jGmOCVP0tG29iZQOiG28jZT8tYlOWnJxkFGRAPzEyMvOCG09iGmNjVPttXFN6QDbtFHycFJxkZJxknFN9VSftKD0XVRxkFHxkFGRkFGSWVQ0tp3ymVP4tLKWaqvOoVQVtKD0XVTyzVTkyovNbVRxkFHxkFGRkFGSWVPxtCw0tZvN6QDbtVR9iG08jolN9VUA5plNhVTSlM3LtJlNlVS0APvNtnGSWFGRtCFOCo09CZT8tYvOlMKOfLJAyVPttWm8aVPjtWlptXD0XVPOcMvNbVR9iG08jolOoVTkyovNbVR9iG08jolNcVP0tZFOqVQ09VPpiWlNcVQbAPvNtVR9iG08jolN9VR9iG08jolOoVQNtBvOfMJ4tXPOCo09CZT8tXFNgVQVtKD0XVPOcZGScZFN9VTxkFHxkVP4tp3OfnKDtXPNaWvptXD0XVPOWFJyWnGRknGScVQ0trlO9QDbtVTMipvOWnJycnHxknGSWnJxtnJ4tpzShM2HtXPOfMJ4tXPOcZGScZFNcVPxtBt0XVPNto28jZT9CZT8tCFO7VU0APvNtVT9iZQOiGmOiVQ0tnGRknGRtJlOWnJycnHxknGSWnJxtKFNhVUAjoTy0VPttWm0aVPxAPvNtVTyzVPttoTIhVPtto28jZT9CZT8tXFNcVQ09VQVtBt0XVPNtVRyWnHycZGScZJxtJlOiomNjo08jolOoVQNtKFOqVQ0to28jZT9CZT8tJlNkVS0APvNtVPOcMvNmZFNgVQZkBvOiZQOio28jQDbtpzI0qKWhVRyWnHycZGScZJxAPx9iG08jolN9VR9CG29CZQNtXPNcQDciZR8tCFOBo25yQDcio09iomOCVQ0tGz9hMD0XnGSCG08jZQNjo08tCFOBo25yQDccFGScZGRkFGSWnFN9VR5iozHAPx8jZR8jo09CZQOCZQNtCFOBo25yQDc0paxtBt0XVT8jGlN9VUIloTkcLvNhVUIhpKIiqTIspTk1plNbVR9iG08jolOoVPW1pzjvVS0tXD0XMKuwMKO0VQbAPvOjLKAmQDc0paxtBt0XVT9iG29iZR8tCFO1pzkfnJVtYvO1oaS1o3EyK3OfqKZtXPOCo09CZT8tJlNvozSgMFVtKFNcQDcyrTAypUDtBt0XVUOup3ZAPaElrFN6QDbtnGSCG08jZQNjo08tCFOcoaDtXPOCo09CZT8tJlNvoJ9xMFVtKFNcQDcyrTAypUDtBt0XVUOup3ZAPvOcMvNlAFNgVQV1BvOiomNjVP0tFJyWnJxkFJxkFHycQDc0paxtBt0XVTyWZJxkZGSWZHycVQ0tqKWfoTyvVP4tqJ5kqJ90MI9joUImVPttG29CGmOiVSftVzywo25coJSaMFVtKFNcQDcyrTAypUDtBt0XVUOup3ZAPaElrFN6QDbtnJLtZGNtYFNkZQbto29CZR9CZQNjolNiVRxkFJyWVPHtnJycnJxtXvOComNjGmNtWFOCo28jZT9ComNjoj0XVR8jZR8jo09CZQOCZQNtCFO1pzkfnJVtYvO1oaS1o3EyK3OfqKZtXPOCo09CZT8tJlNvMTImL3WcpUEco24vVS0tXD0XMKuwMKO0VQbAPvOjLKAmQDbtnJLtAQttYFN0BQbtFGRkVP8to28jZPNhVR9CZR8jGlNdVR9CG28jVPbtFGSWnHxtYlOcnGSWQDbtnJLtBGVtYFN5ZwbtnHycnJyWZHycFGSWZFNyVTyWnJycFGSWnHxkFGRtYFOColNiVR9CG28jQDbtnJLtZGNtYFNkZQbtFJyWnJxkFJxkFHycVPftnHycnJyWZHycFGSWZFNdVR9iomNjo09iZQOiVPftG08jGmOCVP8to28jZPNiVR9iomNjo09iZQOiQDbtnJLtAQVtYFN0ZwbtFJyWFGSWnJyWnHxkQDccMvOcZH9CGmNjZQOiGlN9CFOBo25yVT9lVT8jGlN9CFOBo25yVT9lVTkyovNbVT8jGlNcVQjtZFN6QDbto28jGmOCZQNtXPOHpaIyVPxAPvOio08jo09Co29ComNtXPOHpaIyVPxAPvOiZT9io09CZQNtXPOHpaIyVPxAPvOComOiZQNjZT8jomNtXPOHpaIyVPxAPvO4Lz1wpTk1M2yhVP4tMJ5xG2MRnKWyL3EipaxtXPOcoaDtXPOmrKZtYvOupzq2VSftZFOqVPxtXD0XMJkcMvOcZH9CGmNjZQOiGlN9CFNlVQbAPvOiG28jZR9iZQOCVPttomOCVPxAPvO4Lz1wpTk1M2yhVP4tMJ5xG2MRnKWyL3EipaxtXPOcoaDtXPOmrKZtYvOupzq2VSftZFOqVPxtXD0XMJkcMvOcZH9CGmNjZQOiGlN9CFN2VQbAPvOfnKA0LKWspTImpKIcp2RtXPOiZR8tXD0XVUuvoJAjoUIanJ4tYvOyozECMxEcpzIwqT9lrFNbVTyhqPNbVUA5plNhVTSlM3LtJlNkVS0tXFNcQDbtnJLtZmttYFNmBQbtomNjo29iZPNeVT9iGmOCGmNjZT8tWFOWZGRtWFOCG09iZPNgVT8jo29iG29CZPNiVTycnJycQDbtnJLtAmZtYFN3ZmbtG28tXvOWnJxkFGRtYFOcZGScFJycFJycQDbtnJLtBQHtYFN4AGbtomOio29Co08jVPHtFJyWnJxkFJxkFHycVPftG28jZR8jVP8tG28tYvOWZHycFFNeVT8jZT9iomNAPzIfnJLtnGSCG08jZQNjo08tCG0tAPN6QDbtG29CZQNjVPttomOCVPxAPvO4Lz1wpTk1M2yhVP4tMJ5xG2MRnKWyL3EipaxtXPOcoaDtXPOmrKZtYvOupzq2VSftZFOqVPxtXD0XMJkcMvOcZH9CGmNjZQOiGlN9CFN1VQbAPvOcnGRknGRtXPNcQDbtrTWgL3OfqJqcovNhVTIhMR9zETylMJA0o3W5VPttnJ50VPttp3ymVP4tLKWaqvOoVQRtKFNcVPxAPzIfnJLtnGSCG08jZQNjo08tCG0tAlN6QDbtnGScVPttIUW1MFNcQDcyoTyzVTxkG09CZQNjZT9CVQ09VQttBvOCZQOiZR9CZPNbVSElqJHtXD0XMJkcMvOcZH9CGmNjZQOiGlN9CFN5VQbtnJxtXPOHpaIyVPxAPzIfnJLtnGSCG08jZQNjo08tCG0tZGNtBt0XVT9iVPttIUW1MFNcQDbtrTWgL3OfqJqcovNhVTIhMR9zETylMJA0o3W5VPttnJ50VPttp3ymVP4tLKWaqvOoVQRtKFNcVPxAPzIfnJLtnGSCG08jZQNjo08tCG0tZwNtBvOWnHxkZJyWFGRtXPOiZR8tXD0XMJkcMvOcZH9CGmNjZQOiGlN9CFNlZFN6VR9iZR8tXPOiZR8tYPOio09iomOCVPjtnHxknGRkZHxkFJxtXD0XMJkcMvOcZH9CGmNjZQOiGlN9CFN5BFN6QDbtnHyWFHycnGRtXPOiZR8tYPOio09iomOCVPjtnHxknGRkZHxkFJxtXD0XVUuvoJAjoUIanJ4tYvOyozECMxEcpzIwqT9lrFNbVTyhqPNbVUA5plNhVTSlM3LtJlNkVS0tXFNcQDcyoTyzVTxkG09CZQNjZT9CVQ09VQx4VQbAPvO0paxtBt0XVPOiZR8tCFOlMFNhVTAioKOcoTHtXPNaqKWfCFthXvxaVPxtYvOznJ5xLJkfVPttomOCVPxtJlNjVS0APvOyrTAypUDtBt0XVPOjLKAmQDbto29CG09iGlNbVT8jGlNfVT9iG29iZR8tYPOcFGScZGRkFGSWnFNcQDcyoTyzVTxkG09CZQNjZT9CVQ09VQx5BFN6QDbtqUW5VQbAPvNtomOCVQ0tpzHtYvOwo21jnJkyVPttW3L9XP4dXFptXFNhVTMcozEuoTjtXPOiZR8tXFOoVQNtKD0XVTI4L2IjqPN6QDbtVUOup3ZAPvOcZGScFHyWFHycZFNbVT8jGlNfVT9iG29iZR8tYPOcFGScZGRkFGSWnFNcQDbtnJLtAwVtYFN2ZwbtnGRknHycnHycnFNeVTxkZJyWnJyWnJxtYFOCoj0XVTyzVQV4VP0tZwt6VRycFJycZHycZHyWnFNhVRycFJycZHycZHyWnFNyVR9CZR8jGlNdVR9CZR8jGlNhVR9iVP8tFJyWnJxkFJxkFHycQDbtnJLtZwptYFNlAmbtG29Co09CZQNtXlOWZGRtYFOcnGSWQDbtnJLtAwxtYFN2BGbtGmOCo29iZQNtYFOWnJxkFGRtWFOCo28jZT9ComNjolNeVTxkZJyWnJyWnJxtYvOCG09iZPNiVR9iG29CGmNjQDbwVSEyLJ0tF2IfITIwVR1yMTyuW1OfLKxAPt=='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))