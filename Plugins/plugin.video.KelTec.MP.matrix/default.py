# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = '# -*- coding: utf-8 -*-
if 64 - 64: i11iIiiIii
try :
 import urllib . parse as urllib
except ImportError :
 import urllib
try :
 import urllib2
except ImportError :
 import urllib . request as urllib2
import re
import os
import sys
try :
 import cookielib
except ImportError :
 import http . cookiejar as cookielib
from urllib import request as urllib2 , parse as urllib
import requests
import xbmc
import webbrowser
import uuid as random
import base64
import codecs
import xbmc
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import time
import webbrowser
import datetime
from datetime import datetime , date , timedelta
import hashlib
import check_start
from bs4 import BeautifulSoup
from check_start . start import OO0o
from requests . utils import quote , unquote
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
import resources . lib . common as common
if 73 - 73: II111iiii
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
try :
 import json
except :
 import simplejson as json
 if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
 if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * Ii1I
i1I1ii1II1iII = "03.02.2023"
if 86 - 86: ooOoO0o
i1ii1iIII = 'plugin.video.KelTec.MP.matrix'
Oo0oO0oo0oO00 = xbmcaddon . Addon ( i1ii1iIII )
i111I = '[COLOR white][B]KelTec Media Play Tv[/B][/COLOR]'
II1Ii1iI1i = 'plugin.video.KelTec.MP.matrix'
iiI1iIiI = xbmcaddon . Addon ( id = II1Ii1iI1i )
if 91 - 91: OoO0O00 . i11iIiiIii / oO0o % I11i / OoO0O00 - i11iIiiIii
II1Iiii1111i = xbmcvfs . translatePath ( os . path . join ( 'special://home/addons/' + II1Ii1iI1i + '/resources/art/' ) )
i1IIi11111i = Oo0oO0oo0oO00 . getAddonInfo ( "name" )
o000o0o00o0Oo = Oo0oO0oo0oO00 . getAddonInfo ( 'icon' )
oo = Oo0oO0oo0oO00 . getAddonInfo ( 'path' )
IiII1I1i1i1ii = oo + '/fanart.jpg'
IIIII = oo + '/fanart2.jpg'
if 26 - 26: I1Ii111 . I11i - OOooOOo % O0 + OOooOOo
i1iiIIiiI111 = oo + '/icon.gif'
if 62 - 62: i11iIiiIii - II111iiii
IIIiI11ii = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) )
O000oo = oo + '/resources/img/'
i1iIIi1 = 'https://linkmeu.ml/mg-base/'
ii11iIi1I = xbmcgui . Dialog ( )
iI111I11I1I1 = OO0o ( )
if 55 - 55: OoOoOO00 % i1IIi / Ii1I - oO0o - O0 / II111iiii
iii11iII = Oo0oO0oo0oO00 . getAddonInfo ( 'path' )
i1I111I = os . path . join ( iii11iII , "resources" , "images" )
if 1 - 1: IiII % OoO0O00 * I11i
OoOo = os . path . join ( iii11iII , 'resources' , 'lib' )
sys . path . insert ( 0 , OoOo )
import common
if 34 - 34: OoooooooOO + iIii1I11I1II1 + i11iIiiIii - I1ii11iIi11i + i11iIiiIii
ooOoo0O = xbmcvfs . translatePath ( Oo0oO0oo0oO00 . getAddonInfo ( "profile" ) )
OooO0 = os . path . join ( ooOoo0O , "cache" )
if not os . path . exists ( OooO0 ) :
 os . makedirs ( OooO0 )
 if 35 - 35: OOooOOo % I1Ii111 % i11iIiiIii / OoooooooOO
Ii11iI1i = os . path . join ( iii11iII , "resources" , "common" , "init.py" )
Ooo = os . path . join ( ooOoo0O , "virtual_directoriesLists.txt" )
O0o0Oo = os . path . join ( ooOoo0O , 'tempList.txt' )
Oo00OOOOO = os . path . join ( ooOoo0O , 'favorites.txt' )
if 85 - 85: ooOoO0o . iII111i - OoO0O00 % ooOoO0o % II111iiii
if not ( os . path . isfile ( Oo00OOOOO ) ) :
 common . SaveList ( Oo00OOOOO , [ ] )
 if 81 - 81: OoO0O00 + II111iiii % iII111i * O0
if not ( os . path . isfile ( Ooo ) ) :
 common . SaveList ( Ooo , [ ] )
 if 89 - 89: oO0o + Oo0Ooo
Ii1IOo0o0 = Oo0oO0oo0oO00 . getSetting ( "makeGroups" ) == "true"
if 49 - 49: oO0o % Ii1I + i1IIi . I1IiiI % I1ii11iIi11i
if 48 - 48: I11i + I11i / II111iiii / iIii1I11I1II1
def i1iiI11I ( id ) :
 return Oo0oO0oo0oO00 . getLocalizedString ( id )
 if 29 - 29: OoooooooOO
 if 23 - 23: o0oOOo0O0Ooo . II111iiii
 if 98 - 98: iIii1I11I1II1 % OoOoOO00 * I1ii11iIi11i * OoOoOO00
i1 = int ( sys . argv [ 1 ] )
__addon__ = xbmcaddon . Addon ( )
IiIiiI = __addon__
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
I1I = __addon__ . getAddonInfo ( 'version' )
try :
 oOO00oOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
except :
 oOO00oOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) )
try :
 IIIiI11ii = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
except :
 IIIiI11ii = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) )
OoOoiI = os . path . join ( oOO00oOO , 'favorites.dat' )
o00O = xbmcaddon . Addon ( ) . getSetting ( "favoritos" )
if 69 - 69: oO0o % I1Ii111 - o0oOOo0O0Ooo + I1Ii111 - O0 % OoooooooOO
if 31 - 31: II111iiii - OOooOOo . I1Ii111 % OoOoOO00 - O0
if 4 - 4: II111iiii / ooOoO0o . iII111i
if os . path . exists ( OoOoiI ) == True :
 O0oo0OO0oOOOo = open ( OoOoiI ) . read ( )
else :
 O0oo0OO0oOOOo = [ ]
 if 35 - 35: IiII % I1IiiI
 if 70 - 70: iII111i * I1ii11iIi11i
def i1II1 ( message , timeShown = 5000 ) :
 xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , message , timeShown , __icon__ ) )
 if 66 - 66: OoooooooOO + Ii1I + Ii1I - i1IIi
def O0o0Ooo ( text , encoding = 'utf-8' , errors = 'strict' ) :
 if isinstance ( text , bytes ) :
  if 56 - 56: ooOoO0o . OoOoOO00 * iII111i . OoOoOO00
  return text . decode ( encoding , errors = errors )
 return text
 if 72 - 72: iII111i / i1IIi * Oo0Ooo - I1Ii111
def Oo0O0O0ooO0O ( heading = '' , message = '' ) :
 IIIIii = None
 if 70 - 70: Ii1I / I11i . iII111i % Oo0Ooo
 OOoOO00OOO0OO = xbmc . Keyboard ( message , heading )
 OOoOO00OOO0OO . doModal ( )
 if OOoOO00OOO0OO . isConfirmed ( ) :
  IIIIii = O0o0Ooo ( OOoOO00OOO0OO . getText ( ) )
 return IIIIii
 if 16 - 16: I1IiiI * oO0o % IiII
 if 86 - 86: I1IiiI + Ii1I % i11iIiiIii * oO0o . ooOoO0o * I11i
 if 44 - 44: oO0o
 if 88 - 88: I1Ii111 % Ii1I . II111iiii
iI1ii1Ii = '[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]'
if 92 - 92: OoOoOO00
i1OOO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] BEM VINDOS[/B]\n[COLOR orangered]|[/COLOR] Tv ao Vivo [COLOR orangered]|[/COLOR] Filmes [COLOR orangered]|[/COLOR] Séries [COLOR orangered]|[/COLOR] Desenhos [COLOR orangered]|[/COLOR] Animes [COLOR orangered]|[/COLOR] Melhores Lançamentos Dual Audio[COLOR orangered]|[/COLOR]'
if 59 - 59: II111iiii + OoooooooOO * OoOoOO00 + i1IIi
if 58 - 58: II111iiii * OOooOOo * I1ii11iIi11i / OOooOOo
if 75 - 75: oO0o
I1III = ''
OO0O0OoOO0 = base64 . b64decode ( I1III ) . decode ( 'utf-8' )
OO0O0OoOO0 = ''
if 10 - 10: OoooooooOO % iIii1I11I1II1
if 54 - 54: I1Ii111 - II111iiii % OoOoOO00 % I11i % iIii1I11I1II1 + ooOoO0o
if 15 - 15: I11i * ooOoO0o * Oo0Ooo % i11iIiiIii % OoOoOO00 - OOooOOo
if 68 - 68: I1Ii111 % i1IIi . IiII . I1ii11iIi11i
if 92 - 92: iII111i . I1Ii111
i1i = 'http://teste.com/get.php'
iiI111I1iIiI = '[COLOR white][B]PESQUISAR...[/B][/COLOR]'
II = 'https://png.pngtree.com/png-vector/20190115/ourlarge/pngtree-vector-search-icon-png-image_320926.jpg'
Ii1I1IIii1II = ''
if 65 - 65: Ii1I . iIii1I11I1II1 / O0 - Ii1I
iii1i1iiiiIi = 'Pesquise por filme'
if 2 - 2: I1IiiI / O0 / o0oOOo0O0Ooo % OoOoOO00 % Ii1I
o0o00OO0 = '[B][COLOR silver]Configurações & Ajustes do Add-on[/COLOR][/B]'
i1I1ii = 'https://i.imgur.com/8KUL2Rt.png'
oOOo0 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]CONFIGURAÇÕES!\n[/B][COLOR orangered]|[/COLOR] Ajustes  gerais do Add-on.'
if 54 - 54: O0 - IiII % OOooOOo
OOoO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] FAVORITOS[/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
iII = 'https://i.imgur.com/q09OJRb.png'
ii1ii11IIIiiI = 'Adicione Itens aos Favoritos, pressionando OK do controle ou clicando o direito e selecionando Adicionar aos favoritos do KelTec Media Play'
if 67 - 67: I11i * oO0o * I1ii11iIi11i + OOooOOo / i1IIi
if 11 - 11: Ii1I + iII111i - ooOoO0o * oO0o % i11iIiiIii - I1Ii111
o0oO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] MENU DE ACESSO [COLORcrimson]|[/COLOR][/COLOR][COLOR orangered] VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
IIiIi1iI = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]TOP[/COLOR] [COLOR orangered](VIP)[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
i1IiiiI1iI = 'https://i.imgur.com/5rgqF8K.png'
i1iIi = 'https://i.imgur.com/nTIPRcu.png'
if 68 - 68: i11iIiiIii % I1ii11iIi11i + i11iIiiIii
iii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR red] AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] O MENU DE ACESSO [COLORorangered]VIP[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo e fique por dentro do melhor conteúdo familiar.\nA Team KelTec Media-Play deseja um ótimo entretenimento a todos!'
if 1 - 1: Oo0Ooo / o0oOOo0O0Ooo % iII111i * IiII . i11iIiiIii
III1Iiii1I11 = 'No Kodi só canais; Pelo vip canais e VOD, use o app exclusivo.'
if 9 - 9: I1ii11iIi11i / Oo0Ooo - I1IiiI / OoooooooOO / iIii1I11I1II1 - o0oOOo0O0Ooo
o00oooO0Oo = 'http://lista.lorddark.club:80/get.php'
if 78 - 78: Ii1I % I1Ii111 + I1ii11iIi11i
if 64 - 64: oO0o * O0 . I1IiiI + II111iiii
IIi1i = "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]Torrent Play"
if 87 - 87: o0oOOo0O0Ooo - I1ii11iIi11i + IiII % iII111i + I1IiiI - OoOoOO00
if 16 - 16: iIii1I11I1II1
oOooOOOoOo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]VIP[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 41 - 41: Ii1I - O0 - O0
if 68 - 68: OOooOOo % I1Ii111
if 88 - 88: iIii1I11I1II1 - ooOoO0o + OOooOOo
IiI111111IIII = "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Media'Play Principal"
if 37 - 37: I1Ii111 / OoOoOO00
if 23 - 23: O0
o00oO0oOo00 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]VIP[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 81 - 81: OoO0O00
if 42 - 42: OoO0O00 / I11i / o0oOOo0O0Ooo + iII111i / OoOoOO00
if 84 - 84: ooOoO0o * II111iiii + Oo0Ooo
if 53 - 53: iII111i % II111iiii . IiII - iIii1I11I1II1 - IiII * II111iiii
ooO0oOOooOo0 = "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Play TV"
if 38 - 38: I1Ii111
if 84 - 84: iIii1I11I1II1 % iII111i / iIii1I11I1II1 % I11i
ii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]VIP[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 84 - 84: o0oOOo0O0Ooo % II111iiii . i11iIiiIii / OoO0O00
if 80 - 80: I1Ii111 . i11iIiiIii - o0oOOo0O0Ooo
if 25 - 25: OoO0O00
oOo0oO = '[B][COLOR white]KelTec [COLOR crimson]Media Play [/B][COLOR orange]|[/COLOR] [COLOR silver]Pesquisa[/COLOR]'
if 51 - 51: Oo0Ooo - oO0o + II111iiii * Ii1I . I11i + oO0o
if 78 - 78: i11iIiiIii / iII111i - Ii1I / OOooOOo + oO0o
oOoooo0O0Oo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]VIP[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 76 - 76: Ii1I + IiII
if 34 - 34: Oo0Ooo
if 89 - 89: Oo0Ooo * OoOoOO00 * I1Ii111 + iII111i - I11i
IIiiIiII1Ii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]ÁREA [COLOR crimson]|[/COLOR] DE ACESSO DO [COLOR crimson]|[/COLOR] ADD-ON[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 88 - 88: II111iiii * I1Ii111 * O0
if 64 - 64: OOooOOo % iIii1I11I1II1 * oO0o
o0 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]VIP[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 37 - 37: oO0o - I1Ii111 % Oo0Ooo
if 77 - 77: Oo0Ooo - i1IIi - I11i . OoOoOO00
if 39 - 39: II111iiii / ooOoO0o + I1Ii111 / OoOoOO00
if 13 - 13: IiII + O0 + iII111i % I1IiiI / o0oOOo0O0Ooo . IiII
OO0Oooo0oOO0O = 'nome'
o00O0 = '[COLOR orangered]KelTec Play Escolha uma opção:[/COLOR]'
if 83 - 83: ooOoO0o
if 65 - 65: I1IiiI % Ii1I * oO0o
I1iiiii = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'
if 71 - 71: IiII * II111iiii * oO0o
if 56 - 56: I1IiiI
O0oO = 'aHR0cHM6Ly9saW5rbWV1Lm1sL2Jhc2UtbWF0cml4'
try :
 OO0ooOOO0OOO = base64 . b64decode ( O0oO ) . decode ( 'utf-8' )
except :
 OO0ooOOO0OOO = O0oO
 if 63 - 63: OoOoOO00 * iII111i
ooiIi1 = 'aHR0cHM6Ly91cmxyZWRpci5tbC9ob21lLXR2'
try :
 OoOOoOooooOOo = base64 . b64decode ( ooiIi1 ) . decode ( 'utf-8' )
except :
 OoOOoOooooOOo = ooiIi1
 if 87 - 87: I1IiiI
 if 58 - 58: OoOoOO00 % o0oOOo0O0Ooo
 if 50 - 50: I1Ii111 . o0oOOo0O0Ooo
ooO0OO = xbmcaddon . Addon ( ) . getAddonInfo ( 'name' )
if 54 - 54: IiII + Ii1I % OoO0O00 + OoooooooOO - O0 - o0oOOo0O0Ooo
if 77 - 77: OOooOOo * iIii1I11I1II1
if sys . argv [ 1 ] == 'limparFavoritos' :
 oO00oOOoooO = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'profile' ) ) . decode ( "utf-8" )
 IiIi11iI = os . path . join ( oO00oOOoooO , "favorites.dat" )
 Oo0O00O000 = os . path . isfile ( IiIi11iI )
 if Oo0O00O000 :
  try :
   os . remove ( IiIi11iI )
  except :
   pass
 xbmcgui . Dialog ( ) . ok ( 'Sucesso' , '[B][COLOR aquamarine]Favoritos limpo com sucesso![/COLOR][/B]' )
 xbmc . sleep ( 2000 )
 exit ( )
 if 3 - 3: Ii1I * I1ii11iIi11i % I11i
def oO0o0o0oo ( ) :
 iI1111iiii = IiIiiI . getSetting ( 'username' )
 Oo0OO = IiIiiI . getSetting ( 'password' )
 O0OooOo0o , oO0o0o0oo , iiI11ii1I1 , Ooo0OOoOoO0 , oOo0OOoO0 , IIo0Oo0oO0oOO00 = oo00OO0000oO ( o00oooO0Oo , iI1111iiii , Oo0OO )
 if oO0o0o0oo > '' and oO0o0o0oo == 'Active' :
  I1II1 = 'Ativo'
 else :
  I1II1 = 'Expirado ou Não existe'
 if iiI11ii1I1 > '' :
  oooO = i1I1i111Ii ( str ( iiI11ii1I1 ) )
 else :
  oooO = ''
 if Ooo0OOoOoO0 > '' and Ooo0OOoOoO0 == '0' :
  ooo = 'Não'
 else :
  ooo = 'Sim'
 if oOo0OOoO0 > '' :
  i1i1iI1iiiI = i1I1i111Ii ( str ( oOo0OOoO0 ) )
 else :
  i1i1iI1iiiI = ''
 if IIo0Oo0oO0oOO00 > '' :
  Ooo0oOooo0 = IIo0Oo0oO0oOO00
 else :
  Ooo0oOooo0 = ''
 oOOOoo00 = 'Status: [COLOR yellow]%s[/COLOR]\nExpira em: [COLOR yellow]%s[/COLOR]\nDemonstrativo: [COLOR yellow]%s[/COLOR]\nCriado em: [COLOR yellow]%s[/COLOR]\nConexões permitidas: [COLOR yellow]%s[/COLOR]' % ( I1II1 , str ( oooO ) , ooo , str ( i1i1iI1iiiI ) , str ( Ooo0oOooo0 ) )
 xbmcgui . Dialog ( ) . textviewer ( 'Conta Premium:' , oOOOoo00 )
 if 9 - 9: O0 % O0 - o0oOOo0O0Ooo
 if 51 - 51: I1IiiI . iIii1I11I1II1 - I1ii11iIi11i / O0
 if 52 - 52: o0oOOo0O0Ooo + O0 + iII111i + Oo0Ooo % iII111i
if sys . argv [ 1 ] == 'keltecvipbees' :
 import xbmc
 import webbrowser
 if xbmc . getCondVisibility ( 'system.platform.windows' ) :
  if xbmcgui . Dialog ( ) . yesno ( ooO0OO , 'Baixar o aplicativo VIP Bees P2P ?\n\n[COLOR red]ATENÇÃO[/COLOR]: [COLOR silver]O VIP Bees P2P é outro sistema diferente do KODI e Funciona somente nesse app em aparelhos android.[/COLOR]' ) :
   webbrowser . open ( 'https://linkmeu.ml/bees-apk' )
   if 75 - 75: I1IiiI . ooOoO0o . O0 * I1Ii111
 if xbmc . getCondVisibility ( 'system.platform.android' ) :
  if xbmcgui . Dialog ( ) . yesno ( ooO0OO , 'Baixar o aplicativo VIP Bees P2P ?\n\n[COLOR red]ATENÇÃO[/COLOR]: [COLOR silver]O VIP Bees P2P é outro sistema diferente do KODI e Funciona somente nesse app em aparelhos android.[/COLOR]' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://linkmeu.ml/bees-apk' ) )
   if 4 - 4: Ii1I % oO0o * OoO0O00
 exit ( )
 if 100 - 100: I1Ii111 * OOooOOo + OOooOOo
 if 54 - 54: OoooooooOO + o0oOOo0O0Ooo - i1IIi % i11iIiiIii
 if 3 - 3: o0oOOo0O0Ooo % o0oOOo0O0Ooo
if sys . argv [ 1 ] == 'keltecviphz' :
 import xbmc
 import webbrowser
 if xbmc . getCondVisibility ( 'system.platform.windows' ) :
  if xbmcgui . Dialog ( ) . yesno ( ooO0OO , 'Baixar o aplicativo VIP Bees P2P ?\n\n[COLOR red]ATENÇÃO[/COLOR]: [COLOR silver]O VIP Bees P2P é outro sistema diferente do KODI e Funciona somente nesse app em aparelhos android.[/COLOR]' ) :
   webbrowser . open ( 'https://linkmeu.ml/bees-apk' )
   if 83 - 83: II111iiii + I1Ii111
 if xbmc . getCondVisibility ( 'system.platform.android' ) :
  if xbmcgui . Dialog ( ) . yesno ( ooO0OO , 'Baixar o aplicativo VIP Bees P2P ?\n\n[COLOR red]ATENÇÃO[/COLOR]: [COLOR silver]O VIP Bees P2P é outro sistema diferente do KODI e Funciona somente nesse app em aparelhos android.[/COLOR]' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://linkmeu.ml/bees-apk' ) )
   if 73 - 73: iII111i
 exit ( )
 if 42 - 42: i11iIiiIii * iIii1I11I1II1 / I1ii11iIi11i . i11iIiiIii % I11i
 if 41 - 41: IiII / O0
if sys . argv [ 1 ] == 'conectplay' :
 import xbmc
 import webbrowser
 if xbmc . getCondVisibility ( 'system.platform.windows' ) :
  if xbmcgui . Dialog ( ) . yesno ( ooO0OO , 'Baixar o aplicativo android VIP SshConectPlay VPN Pró ?\n\n[COLOR red]ATENÇÃO[/COLOR]: [COLOR silver]O VIP SshConectPlay VPN Pró é outro sistema diferente do KODI e Funciona somente nesse app em aparelhos android.[/COLOR]' ) :
   webbrowser . open ( 'https://linkmeu.ml/SshConectPlay-apk' )
   if 51 - 51: I11i % I1IiiI
 if xbmc . getCondVisibility ( 'system.platform.android' ) :
  if xbmcgui . Dialog ( ) . yesno ( ooO0OO , 'Baixar o aplicativo VIP Bees P2P ?\n\n[COLOR red]ATENÇÃO[/COLOR]: [COLOR silver]O VIP SshConectPlay VPN Pró é outro sistema diferente do KODI e Funciona somente nesse app em aparelhos android.[/COLOR]' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://linkmeu.ml/SshConectPlay-apk' ) )
   if 60 - 60: I1IiiI / OOooOOo . I1IiiI / I1Ii111 . IiII
 exit ( )
 if 92 - 92: OoOoOO00 + I1Ii111 * Ii1I % I1IiiI
 if 42 - 42: Oo0Ooo
 if 76 - 76: I1IiiI * iII111i % I1Ii111
if sys . argv [ 1 ] == 'SetPassword' :
 OoooO00o = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
 o0O0o = xbmcvfs . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , OoooO00o ) )
 if os . path . exists ( o0O0o ) == False :
  os . mkdir ( o0O0o )
 xbmc . sleep ( 4 )
 if 77 - 77: OoOoOO00 - I1IiiI * i11iIiiIii * ooOoO0o * iIii1I11I1II1
 if 100 - 100: oO0o / I1Ii111 / I1ii11iIi11i
 IiIi11iI = os . path . join ( o0O0o , "password.txt" )
 Oo0O00O000 = os . path . isfile ( IiIi11iI )
 OOoOO00OOO0OO = xbmcaddon . Addon ( ) . getSetting ( "keyboard" )
 if Oo0O00O000 == False :
  oOoOOo0O = '0069'
  OOOooo = base64 . b64encode ( oOoOOo0O . encode ( ) ) . decode ( 'utf-8' )
  OooO0OO = open ( IiIi11iI , 'w' )
  OooO0OO . write ( OOOooo )
  OooO0OO . close ( )
  xbmc . sleep ( 4 )
  o0OOo0o0O0O = open ( IiIi11iI , 'r+' )
  o0OO0o0oOOO0O = o0OOo0o0O0O . read ( )
  iI = base64 . b64decode ( o0OO0o0oOOO0O ) . decode ( 'utf-8' )
  ii11iIi1I = xbmcgui . Dialog ( )
  if int ( OOoOO00OOO0OO ) == 0 :
   I1i11 = ii11iIi1I . numeric ( 0 , 'Insira a senha atual:' )
  else :
   I1i11 = ii11iIi1I . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if I1i11 == iI :
   if int ( OOoOO00OOO0OO ) == 0 :
    OooIiIIII1i11I = ii11iIi1I . numeric ( 0 , 'Insira a nova senha:' )
   else :
    OooIiIIII1i11I = ii11iIi1I . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if OooIiIIII1i11I != '' :
    OOO = base64 . b64encode ( OooIiIIII1i11I . encode ( ) ) . decode ( 'utf-8' )
    o0OOo0o0O0O = open ( IiIi11iI , 'w' )
    o0OOo0o0O0O . write ( OOO )
    o0OOo0o0O0O . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 else :
  o0OOo0o0O0O = open ( IiIi11iI , 'r+' )
  o0OO0o0oOOO0O = o0OOo0o0O0O . read ( )
  iI = base64 . b64decode ( o0OO0o0oOOO0O ) . decode ( 'utf-8' )
  ii11iIi1I = xbmcgui . Dialog ( )
  if int ( OOoOO00OOO0OO ) == 0 :
   I1i11 = ii11iIi1I . numeric ( 0 , 'Insira a senha atual:' )
  else :
   I1i11 = ii11iIi1I . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if I1i11 == iI :
   if int ( OOoOO00OOO0OO ) == 0 :
    OooIiIIII1i11I = ii11iIi1I . numeric ( 0 , 'Insira a nova senha:' )
   else :
    OooIiIIII1i11I = ii11iIi1I . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if OooIiIIII1i11I != '' :
    OOO = base64 . b64encode ( OooIiIIII1i11I . encode ( ) ) . decode ( 'utf-8' )
    o0OOo0o0O0O = open ( IiIi11iI , 'w' )
    o0OOo0o0O0O . write ( OOO )
    o0OOo0o0O0O . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 exit ( )
 if 6 - 6: OoooooooOO
 if 50 - 50: I1ii11iIi11i % O0 * o0oOOo0O0Ooo
 if 5 - 5: IiII * OoOoOO00
 if 5 - 5: I1Ii111
 if 90 - 90: I1Ii111 . ooOoO0o / Ii1I - I11i
 if 40 - 40: OoooooooOO
 if 25 - 25: IiII + Ii1I / ooOoO0o . o0oOOo0O0Ooo % O0 * OoO0O00
def o0O0oo0OO0O ( msg ) :
 OO0 ( '[B][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]' , '-' , 20 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] MENU DE ACESSO[/COLOR][COLOR green] |[/COLOR][COLOR orangered] VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]' , '-' , 22 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]ÁREA [COLOR darkgreen]|[/COLOR] DE ACESSO DO [COLOR darkgreen]|[/COLOR] ADD-ON[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]' , '-' , 23 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]PESQUISA[/COLOR]' , '-' , 115 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]DESTAQUES[/COLOR]' , 'https://linkmeu.ml/mg-destaques/' , 112 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]LANÇAMENTOS[/COLOR]' , 'https://linkmeu.ml/mg-lancamentos' , 112 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]SÉRIES[/COLOR]' , 'https://linkmeu.ml/mg-series' , 112 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]CATEGORIAS[/COLOR]' , 'https://linkmeu.ml/mg-base' , 114 , O000oo + 'icon.gif' )
 OO0 ( '[B][COLOR silver]Torrent Play Check & Update[/COLOR][/B]' , '-' , 12 , O000oo + 'icon.gif' )
 if 72 - 72: OoooooooOO
 if 72 - 72: I1IiiI % i11iIiiIii . Oo0Ooo / II111iiii
 if 14 - 14: I1ii11iIi11i + OoO0O00
 if 3 - 3: I1ii11iIi11i . Oo0Ooo / II111iiii
def i11IiIiiIiII ( ) :
 iiIIi = iiI1iI111ii1i ( 'https://linkmeu.ml/mg-lancamentos/' )
 Ii1IIiI1IiIII = [ ]
 OO0Oo000OOOoO = [ ]
 O0i11I1I1I = re . compile ( '<a class="last" href="https://linkmeu.ml/mg-lancamentos/(.*)/">.*</a>' ) . findall ( iiIIi ) [ 0 ]
 oOOOo00O00O = int ( O0i11I1I1I )
 for iIIIII1I in range ( 1 , oOOOo00O00O + 1 ) :
  OO0Oo000OOOoO . append ( '[B]PÁGINA: %s[/B]' % iIIIII1I )
  Ii1IIiI1IiIII . append ( 'https://linkmeu.ml/mg-lancamentos/' + str ( iIIIII1I ) + '/' )
 ooI1i = xbmcgui . Dialog ( ) . select ( '-= [B]Torrent Play[/B] =-' , OO0Oo000OOOoO )
 if ooI1i >= 0 :
  pass
def iIII ( url ) :
 iiIIi = iiI1iI111ii1i ( url )
 o0o0O = BeautifulSoup ( iiIIi , 'html.parser' )
 ooooO0oOoOOoO = o0o0O . find ( 'ul' , { 'class' : "sub-menu" } ) . findAll ( 'li' )
 for iIIIII1I in ooooO0oOoOOoO :
  I1i11i = iIIIII1I . text . encode ( 'utf-8' )
  url = iIIIII1I . a [ 'href' ]
  if url . startswith ( 'http' ) :
   url = url
  else :
   url = i1iIIi1 + url
  OO0 ( I1i11i , url , 112 , i1iiIIiiI111 )
  if 11 - 11: I1IiiI / II111iiii + o0oOOo0O0Ooo * I1ii11iIi11i - I1ii11iIi11i - I1IiiI
def O0oOooooo0O ( item , arquivo = False ) :
 for iiI1I1 in item :
  if not arquivo :
   return iiI1I1
  else :
   return iiI1I1 . text . encode ( 'utf-8' )
   if 56 - 56: I1IiiI . O0 + Oo0Ooo
def i1II1I1Iii1 ( url ) :
 iiIIi = iiI1iI111ii1i ( url )
 iiI11Iii = iiIIi
 O0o0O0 = BeautifulSoup ( iiI11Iii , 'html.parser' )
 Ii1II1I11i1 = O0o0O0 . findAll ( 'div' , attrs = { "class" : 'ItemN' } )
 for iiI1I1 in Ii1II1I11i1 :
  oOoooooOoO = iiI1I1 . findAll ( 'span' , attrs = { 'class' : 'idi' } ) [ 0 ]
  Ii111 = oOoooooOoO . text
  try :
   Ii111 = Ii111 . decode ( 'utf-8' )
  except :
   pass
  I111i1i1111 = O0oOooooo0O ( iiI1I1 . findAll ( 'span' , attrs = { 'class' : 'quality' } ) , True )
  IIII1 = I111i1i1111
  try :
   IIII1 = IIII1 . decode ( 'utf-8' )
  except :
   pass
  I1I1i = iiI1I1 . findAll ( "div" , { "class" : "peli" } ) [ 0 ]
  I1i11i = I1I1i . img [ 'alt' ]
  I1IIIiIiIi = I1I1i . img [ 'src' ]
  url = I1I1i . a [ 'href' ]
  url = url . replace ( '/b/?' , '' )
  I1i11i = I1i11i . split ( '– HD' ) [ 0 ] . split ( ') HD' ) [ 0 ] . split ( ' – BluRay' ) [ 0 ] . split ( ' – WEB-DL' ) [ 0 ]
  I1i11i = I1i11i . replace ( '   ' , ' ' ) . replace ( ' Completa ' , ' ' ) . replace ( '   ' , ' ' ) . replace ( '   ' , ' ' )
  OO0 ( '%s - %s - %s' % ( str ( I1i11i ) , Ii111 , IIII1 ) , url . encode ( 'utf-8' ) , 1199 , I1IIIiIiIi . encode ( 'utf-8' ) )
 Ii1II1I11i1 = O0o0O0 . findAll ( 'div' , attrs = { "class" : 'wp-pagenavi' } )
 IIIII1 = len ( Ii1II1I11i1 )
 for iiI1I1 in Ii1II1I11i1 :
  iIi1Ii1i1iI = O0oOooooo0O ( iiI1I1 . find ( "span" , { "class" : "pages" } ) )
  IIiI1 = iiI1I1 . findAll ( attrs = { "class" : "nextpostslink" } ) [ 0 ] . get ( 'href' )
  IIiI1 = IIiI1 . replace ( '/b/?' , '' )
  if 17 - 17: OOooOOo / OOooOOo / I11i
  OO0 ( '[B][COLOR white]' + str ( iIi1Ii1i1iI ) + '[/COLOR][/B]' , IIiI1 . encode ( 'utf-8' ) , 112 , O000oo + 'Proxima.png' , True )
 if IIIII1 == 0 :
  ii1 = re . compile ( '<link rel="next" href="(.*?)".+?/>' ) . findall ( iiIIi )
  for iIIIII1I in ii1 :
   iIIIII1I = iIIIII1I . replace ( '/b/?' , '' )
   OO0 ( '[COLOR white][B]Proxima Página[/B][/COLOR]' , str ( iIIIII1I ) , 112 , O000oo + 'Proxima.png' , True )
   if 1 - 1: ooOoO0o % iIii1I11I1II1 + Oo0Ooo . iIii1I11I1II1 % I1IiiI
   if 89 - 89: Ii1I
   if 76 - 76: ooOoO0o
   if 15 - 15: OOooOOo . I11i + OoooooooOO - OoO0O00
def Oo0 ( ) :
 oooooOOO000Oo = xbmc . Keyboard ( '' , '[B]Encontre filmes, atores e diretores[/B]' )
 oooooOOO000Oo . doModal ( )
 if ( oooooOOO000Oo . isConfirmed ( ) ) :
  Ooo00OoOOO = oooooOOO000Oo . getText ( )
  Oo0OO0000oooo = urllib . quote ( Ooo00OoOOO )
  IIII1iII = 'https://linkmeu.ml/mg-base?s=' + Oo0OO0000oooo
  i1II1I1Iii1 ( IIII1iII )
 else :
  sys . exit ( )
  if 28 - 28: i1IIi - iII111i
  if 54 - 54: iII111i - O0 % OOooOOo
def Oo ( url , name , iconimage ) :
 iiIIi = iiI1iI111ii1i ( url )
 OO0 ( '[B][COLOR white]Sinopse:%s[/COLOR][/B]' % name . split ( '(' ) [ 0 ] , url , 1120 , iconimage , False )
 O0o0O0 = BeautifulSoup ( iiIIi , "html.parser" )
 Ii1II1I11i1 = O0o0O0 . findAll ( attrs = { "class" : "trailer litebox" } )
 if 44 - 44: I1IiiI - I11i % iIii1I11I1II1
 if 71 - 71: ooOoO0o . Ii1I - OoooooooOO % Ii1I . II111iiii
 if 89 - 89: iII111i . O0 / I1ii11iIi11i % OoOoOO00 . Oo0Ooo
 ooooO0oOoOOoO = O0o0O0 . find ( 'div' , { 'id' : 'categoria' , 'class' : 'box_item center-widget' } )
 IiiI1i = ooooO0oOoOOoO . findAll ( 'div' )
 for iIIIII1I in IiiI1i :
  name = iIIIII1I . text . encode ( 'utf-8' )
  try :
   url = iIIIII1I . a [ 'href' ] . encode ( 'utf-8' )
  except :
   url = 'True'
  if name == '' :
   xbmc . log ( '%s' % iIIIII1I )
   ooOOo00O00Oo = url . split ( '&dn=' ) [ - 1 ] . split ( '&tr=' ) [ 0 ]
   name = urllib . unquote_plus ( urllib . unquote_plus ( ooOOo00O00Oo . split ( '[' ) [ - 0 ] ) )
  OO0 ( name , url , 1198 , iconimage , False )
  if 42 - 42: O0 / o0oOOo0O0Ooo + OoooooooOO * ooOoO0o % ooOoO0o
def i1iIiIIIII ( url , name , iconimage ) :
 iiIIi = iiI1iI111ii1i ( url )
 O0o0O0 = BeautifulSoup ( iiIIi )
 Ii1II1I11i1 = O0o0O0 . findAll ( attrs = { "class" : "trailer litebox" } )
 for I1I1i in Ii1II1I11i1 :
  o0ooOoO000oO = I1I1i . get ( 'href' )
  OOo ( o0ooOoO000oO , name , iconimage )
  if 50 - 50: ooOoO0o
def o0O0O0ooo0oOO ( url ) :
 iiI11Iii = iiI1iI111ii1i ( url )
 O0o0O0 = BeautifulSoup ( iiI11Iii , 'html.parser' )
 if 97 - 97: I1IiiI / iII111i
 Ii1II1I11i1 = O0o0O0 . findAll ( attrs = { "class" : 'meta_datos' } )
 for I1I1i in Ii1II1I11i1 :
  print ( I1I1i )
  Oooo0 = I1I1i . h1 . text
  oOO = I1I1i . find ( 'div' , { 'class' : 'views' } )
  Oooo = oOO . text . replace ( '|' , '\nVotos: ' ) . replace ( '/ 10' , '' ) . replace ( 'votos' , '' )
  I1i1iiiII1i = O0o0O0 . find ( attrs = { "class" : 'meta_datos' } ) . findAll ( 'p' )
  oO0oO0 = I1i1iiiII1i [ 1 ] . text . split ( '|' ) [ - 1 ]
  i1i1IIIIi1i ( i111I , 'Sinopse: %s' % Oooo0 + '\n\n' + Oooo + '\n\n' + oO0oO0 )
  if 7 - 7: iIii1I11I1II1 + iII111i * i11iIiiIii / OoooooooOO + iII111i - Oo0Ooo
  if 3 - 3: i1IIi / II111iiii / i11iIiiIii * i1IIi - II111iiii
def i1i1IIIIi1i ( heading , text ) :
 id = 10147
 xbmc . executebuiltin ( 'ActivateWindow(%d)' % id )
 xbmc . sleep ( 100 )
 Ii = xbmcgui . Window ( id )
 iII1111III1I = 50
 while ( iII1111III1I > 0 ) :
  try :
   xbmc . sleep ( 10 )
   iII1111III1I -= 1
   Ii . getControl ( 1 ) . setLabel ( heading )
   Ii . getControl ( 5 ) . setText ( text )
   return
  except :
   pass
   if 39 - 39: i1IIi / IiII
def oO000oOo00o0o ( url , name , iconimage ) :
 O00oO0 = xbmcgui . ListItem ( name , path = url )
 O00oO0 . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 O00oO0 . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 return O00oO0
 if 70 - 70: I11i . I1ii11iIi11i * OoooooooOO - IiII * I1IiiI + OoOoOO00
 if 10 - 10: o0oOOo0O0Ooo / i11iIiiIii
def o00 ( url , name , iconimage ) :
 url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
 xbmc . Player ( ) . play ( item = url , listitem = oO000oOo00o0o ( url , name , iconimage ) )
 if 85 - 85: I1ii11iIi11i . I1Ii111
 if 78 - 78: ooOoO0o * I1Ii111 + iIii1I11I1II1 + iIii1I11I1II1 / I1Ii111 . Ii1I
def O000 ( url , name , iconimage ) :
 if 79 - 79: OoooooooOO - I1IiiI
 o00O00oO00 = iiI1iIiI . getSetting ( 'torrent' )
 if 'magnet' in url or '.torrent' in url :
  if int ( o00O00oO00 ) == 0 :
   url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
   O00oO0 = xbmcgui . ListItem ( name , path = url )
   O00oO0 . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
   O00oO0 . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
   if 23 - 23: iIii1I11I1II1 * i1IIi % OoooooooOO * IiII
   xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , O00oO0 )
  elif int ( o00O00oO00 ) == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("org.acestream.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    ii11iIi1I . ok ( i111I , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
  elif int ( o00O00oO00 ) == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("tv.bitx.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    ii11iIi1I . ok ( i111I , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
 else :
  O00oO0 = xbmcgui . ListItem ( name , path = url )
  O00oO0 . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
  O00oO0 . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
  if 9 - 9: IiII - II111iiii + O0 / iIii1I11I1II1 / i11iIiiIii
  xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , O00oO0 )
  if 39 - 39: IiII * Oo0Ooo + iIii1I11I1II1 - IiII + OOooOOo
  if 69 - 69: O0
def OOo ( url , name , iconimage ) :
 url = 'plugin://plugin.video.youtube/play/?video_id={}' . format ( url )
 if 85 - 85: ooOoO0o / O0
 O00oO0 = xbmcgui . ListItem ( name , path = url )
 O00oO0 . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 O00oO0 . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 if 18 - 18: o0oOOo0O0Ooo % O0 * I1ii11iIi11i
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , O00oO0 )
 if 62 - 62: I1Ii111 . IiII . OoooooooOO
 if 11 - 11: OOooOOo / I11i
 if 73 - 73: i1IIi / i11iIiiIii
 if 58 - 58: Oo0Ooo . II111iiii + oO0o - i11iIiiIii / II111iiii / O0
 if 85 - 85: OoOoOO00 + OOooOOo
def iiI1iI111ii1i ( url ) :
 try :
  I1II = urllib2 . Request ( url )
  I1II . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
  iii1 = urllib2 . urlopen ( I1II )
  iiIIi = iii1 . read ( ) . decode ( 'utf-8' )
  iii1 . close ( )
  return iiIIi
 except IOError :
  ii11iIi1I . notification ( i111I , 'Não foi possivel acessar o servidor.' , i1iiIIiiI111 )
  sys . exit ( 0 )
  if 67 - 67: I1IiiI
  if 55 - 55: I1ii11iIi11i - iII111i * o0oOOo0O0Ooo + OoOoOO00 * OoOoOO00 * O0
def OO0 ( name , url , mode , iconimage , pasta = True , total = 1 , plot = '' ) :
 O000Oo0o = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage )
 O00oO0 = xbmcgui . ListItem ( name )
 if pasta :
  O00oO0 . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  O00oO0 . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if mode == 1198 or mode == 11999 :
  O00oO0 . setProperty ( 'IsPlayable' , 'true' )
 if mode == 1199 :
  OoO0O0O0o00 = [ ]
  OoO0O0O0o00 . append ( ( '[B][COLOR white]Ver Sinopse[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1120&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  OoO0O0O0o00 . append ( ( '[B][COLOR white]Play Trailer[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1121&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  O00oO0 . addContextMenuItems ( OoO0O0O0o00 , replaceItems = False )
 O00oO0 . setProperty ( 'fanart_image' , IIIII )
 O00oO0 . setInfo ( 'video' , { 'title' : name , 'plot' : plot } )
 xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = O000Oo0o , listitem = O00oO0 , isFolder = pasta , totalItems = total )
 if 7 - 7: I1IiiI + OoOoOO00 / IiII
 if 79 - 79: OoO0O00 - iIii1I11I1II1 + Ii1I - I1Ii111
 if 93 - 93: II111iiii . I1IiiI - Oo0Ooo + OoOoOO00
def ooO0o ( msg ) :
 import startup
 if 89 - 89: I11i / I1Ii111
 if 90 - 90: iII111i
 if 31 - 31: OOooOOo + O0
 if 87 - 87: ooOoO0o
 if 45 - 45: OoO0O00 / OoooooooOO - iII111i / Ii1I % IiII
 if 83 - 83: I1IiiI . iIii1I11I1II1 - IiII * i11iIiiIii
 if 20 - 20: i1IIi * I1Ii111 + II111iiii % o0oOOo0O0Ooo % oO0o
def i1II1 ( message , timeShown = 5000 ) :
 xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , message , timeShown , __icon__ ) )
 if 13 - 13: Oo0Ooo
def O0o0Ooo ( text , encoding = 'utf-8' , errors = 'strict' ) :
 if isinstance ( text , bytes ) :
  if 60 - 60: I1ii11iIi11i * I1IiiI
  return text . decode ( encoding , errors = errors )
 return text
 if 17 - 17: OOooOOo % Oo0Ooo / I1ii11iIi11i . IiII * OOooOOo - II111iiii
def Oo0O0O0ooO0O ( heading = '' , message = '' ) :
 IIIIii = None
 if 41 - 41: Ii1I
 OOoOO00OOO0OO = xbmc . Keyboard ( message , heading )
 OOoOO00OOO0OO . doModal ( )
 if OOoOO00OOO0OO . isConfirmed ( ) :
  IIIIii = O0o0Ooo ( OOoOO00OOO0OO . getText ( ) )
 return IIIIii
 if 77 - 77: I1Ii111
 if 65 - 65: II111iiii . I1IiiI % oO0o * OoO0O00
def iI11I ( string ) :
 try :
  string = string . encode ( 'utf-8' )
 except :
  pass
 try :
  I1IIIiii1 = base64 . b64encode ( string ) . decode ( 'utf-8' )
 except :
  I1IIIiii1 = base64 . b64encode ( string )
 return I1IIIiii1
 if 65 - 65: I11i / II111iiii * Ii1I . iII111i * oO0o % OOooOOo
 if 69 - 69: ooOoO0o - OoO0O00 / i11iIiiIii + I1ii11iIi11i % OoooooooOO
o000O000 = [ ]
if 19 - 19: iIii1I11I1II1
def Ii1IiI1i1ii ( url ) :
 try :
  from urllib . parse import quote
 except ImportError :
  from urllib import quote
 try :
  import requests
  I1I1i1I = IiIiiI . getSetting ( 'username' )
  oOoOOo0O = IiIiiI . getSetting ( 'password' )
  oo0oo = iI11I ( I1I1i1I )
  IIi11IIiIii1 = iI11I ( oOoOOo0O )
  I1iIII1 = iI11I ( url )
  iIii = '\x68\x74\x74\x70\x3a\x2f\x2f\x6d\x74\x64\x62\x2e\x6d\x6c\x3a\x36\x35\x35\x33\x35\x2f\x61\x63\x65\x73\x73\x6f?username={0}&password={1}&url={2}' . format ( str ( oo0oo ) , str ( IIi11IIiIii1 ) , str ( I1iIII1 ) )
  I1II = requests . get ( url = iIii , headers = { 'User-Agent' : I1iiiii , 'Accept-Language' : 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' } , timeout = 12 )
  iiI11Iii = I1II . content
  try :
   iiI11Iii = iiI11Iii . decode ( 'utf-8' )
  except :
   pass
 except :
  iiI11Iii = ''
  i1II1 ( 'Falha ao acessar' )
 if iiI11Iii == 'expirado' :
  if not o000O000 :
   xbmcgui . Dialog ( ) . ok ( 'KelTec Media Play' , 'O Login expirou ou não existe!' )
   i1II1 ( 'Login expirou ou não existe!' )
   o000O000 . append ( 'expirado' )
   if 84 - 84: oO0o % i1IIi
 oOOIi1II = IiIiiI . getSetting ( 'proxy' )
 try :
  from urllib . parse import quote , urlparse
 except ImportError :
  from urllib import quote
  from urlparse import urlparse
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 if '\x6f\x6e\x65\x70\x6c\x61\x79\x68\x64\x2e\x63\x6f\x6d' in url and oOOIi1II == 'true' or '\x62\x69\x74\x2e\x6c\x79' in url and oOOIi1II == 'true' :
  try :
   O0Oo00 = '\x68\x74\x74\x70\x73\x3a\x2f\x2f\x7a\x6f\x72\x65\x75\x2e\x69\x6e\x72\x75\x70\x74\x2e\x6e\x65\x74\x2f\x70\x75\x62\x6c\x69\x63\x2f\x64\x6e\x73\x2e\x74\x78\x74'
   iiI11Iii = ii1IiIIi1i ( O0Oo00 , '' )
   oOOo0OOOOo0Oo = json . loads ( iiI11Iii )
   oOOo0OOOOo0Oo = oOOo0OOOOo0Oo . get ( 'dns' )
   url = oOOo0OOOOo0Oo + quote ( url )
  except :
   pass
 try :
  if 67 - 67: oO0o / iII111i . I11i . iIii1I11I1II1
  iiiI = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-Agent" : I1iiiii ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
  IiIi1 = urllib2 . Request ( url , headers = iiiI )
  iii1 = urllib2 . urlopen ( IiIi1 ) . read ( ) . decode ( 'utf-8' )
 except urllib2 . URLError as i111iiI1ii :
  if hasattr ( i111iiI1ii , 'code' ) :
   xbmc . executebuiltin ( "Notification(Falha, código de erro - " + str ( i111iiI1ii . code ) + ",10000," + __icon__ + ")" )
  elif hasattr ( i111iiI1ii , 'reason' ) :
   xbmc . executebuiltin ( "Notification(Falha, motivo - " + str ( i111iiI1ii . reason ) + ",10000," + __icon__ + ")" )
  iii1 = ''
 return iii1
 if 24 - 24: OoOoOO00 / OoooooooOO . II111iiii . I1IiiI % O0 % Ii1I
 if 5 - 5: OoooooooOO - OoO0O00 + IiII - iII111i . OoO0O00 / ooOoO0o
def i1I1i1i1iII1 ( url ) :
 try :
  from urllib . parse import quote
 except ImportError :
  from urllib import quote
 try :
  import requests
  I1I1i1I = IiIiiI . getSetting ( 'username' )
  oOoOOo0O = IiIiiI . getSetting ( 'password' )
  oo0oo = iI11I ( I1I1i1I )
  IIi11IIiIii1 = iI11I ( oOoOOo0O )
  I1iIII1 = iI11I ( url )
  iIii = '\x68\x74\x74\x70\x3a\x2f\x2f\x6d\x74\x64\x62\x2e\x6d\x6c\x3a\x36\x35\x35\x33\x35\x2f\x61\x63\x65\x73\x73\x6f?username={0}&password={1}&url={2}' . format ( str ( oo0oo ) , str ( IIi11IIiIii1 ) , str ( I1iIII1 ) )
  I1II = requests . get ( url = iIii , headers = { 'User-Agent' : I1iiiii , 'Accept-Language' : 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' } , timeout = 12 )
  iiI11Iii = I1II . content
  try :
   iiI11Iii = iiI11Iii . decode ( 'utf-8' )
  except :
   pass
 except :
  iiI11Iii = ''
  i1II1 ( 'Falha ao acessar' )
 if iiI11Iii == 'expirado' :
  if not o000O000 :
   xbmcgui . Dialog ( ) . ok ( 'KelTec Media Play' , 'O Login expirou ou não existe!' )
   i1II1 ( 'Login expirou ou não existe!' )
   o000O000 . append ( 'expirado' )
   if 68 - 68: Oo0Ooo + i11iIiiIii
 oOOIi1II = IiIiiI . getSetting ( 'proxy' )
 if oOOIi1II == 'true' :
  try :
   import requests
   import random
   Oo0oOooo000OO = { 'User-agent' : I1iiiii , 'Matrix' : '19' , 'Add-on' : 'plugin.video.Keltec-MP' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : 'copyright © 2017-2021' , 'Referer' : 'www.keltecmp.net' , 'Team' : 'KelTec-Media-Play' , '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ,
 'Content-Type' : 'text/html' }
   if int ( count ) > 0 :
    OO0oOo = int ( count ) - 1
   else :
    OO0oOo = 0
    if 35 - 35: iII111i + ooOoO0o - oO0o . iII111i . IiII
    if 87 - 87: OoOoOO00
    if 25 - 25: i1IIi . OoO0O00 - OoOoOO00 / OoO0O00 % OoO0O00 * iIii1I11I1II1
   III = ii1IiIIi1i ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=no&anonymity=all' , '' )
   iIiIi11Ii = III . splitlines ( )
   iIII1i1i = len ( iIiIi11Ii )
   IiI1iii11iIi1 = random . randint ( 0 , iIII1i1i - 1 )
   i1iI11I1II1 = 'http://' + iIiIi11Ii [ IiI1iii11iIi1 ]
   if 14 - 14: i11iIiiIii - iII111i * OoOoOO00
   OO0o = ii1IiIIi1i ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=yes&anonymity=all' , '' )
   III111i11IiI = OO0o . splitlines ( )
   O0000 = len ( III111i11IiI )
   ooO00O0O0 = random . randint ( 0 , O0000 - 1 )
   iII1I1 = 'https://' + III111i11IiI [ ooO00O0O0 ]
   if 85 - 85: iII111i * o0oOOo0O0Ooo
   ii1iii11i1 = { "http" : i1iI11I1II1 , "https" : iII1I1 }
   I1II = requests . get ( url , headers = Oo0oOooo000OO , proxies = ii1iii11i1 )
   I1II . encoding = 'utf-8'
   if 4 - 4: IiII . IiII % I1ii11iIi11i % Ii1I / Ii1I
   iii1 = I1II . text
   return iii1
  except :
   II11iIiiI1111 = IiIiiI . getSetting ( 'proxy_try' )
   if int ( OO0oOo ) > 0 :
    OOO00oo0ooO = int ( OO0oOo )
   elif int ( count ) == 1 and int ( OO0oOo ) == 0 :
    OOO00oo0ooO = int ( II11iIiiI1111 ) + 1 + 1
   if int ( OOO00oo0ooO ) > 1 :
    if 38 - 38: iIii1I11I1II1 - II111iiii - I1IiiI
    oooOOOO0oooo = i1I1i1i1iII1 ( url , int ( OOO00oo0ooO ) )
    return oooOOOO0oooo
   else :
    i1II1 ( '[COLOR red]Erro ao utilizar o proxy ou servidor![/COLOR]' )
    i1II1 = ''
 else :
  try :
   try :
    import urllib . request as urllib2
   except ImportError :
    import urllib2
   iiiI = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-agent" : I1iiiii , "Matrix" : "19" , "Add-on" : "plugin.video.Keltec-MP" , "KelTec Media-Play" : "Direitos Reservados" , "Ref" : "copyright © 2017-2021" , "Referer" : "www.keltecmp.net" , "Team" : "KelTec-Media-Play" , "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
   IiIi1 = urllib2 . Request ( url , headers = iiiI )
   iii1 = urllib2 . urlopen ( IiIi1 ) . read ( ) . decode ( 'utf-8' )
   return iii1
  except urllib2 . URLError as i111iiI1ii :
   if hasattr ( i111iiI1ii , 'code' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( i111iiI1ii . code ) + ",10000," + __icon__ + ")" )
   elif hasattr ( i111iiI1ii , 'reason' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( i111iiI1ii . reason ) + ",10000," + __icon__ + ")" )
   iii1 = ''
   return iii1
   if 51 - 51: O0 - i1IIi / I1IiiI
def iI111i1I1II ( ) :
 try :
  import requests
  I1I1i1I = IiIiiI . getSetting ( 'username' )
  oOoOOo0O = IiIiiI . getSetting ( 'password' )
  oo0oo = iI11I ( I1I1i1I )
  IIi11IIiIii1 = iI11I ( oOoOOo0O )
  iIii = '\x68\x74\x74\x70\x3a\x2f\x2f\x6d\x74\x64\x62\x2e\x6d\x6c\x3a\x36\x35\x35\x33\x35\x2f\x76\x65\x6e\x63\x69\x6d\x65\x6e\x74\x6f?username={0}&password={1}' . format ( str ( oo0oo ) , str ( IIi11IIiIii1 ) )
  I1II = requests . get ( url = iIii , headers = { 'User-Agent' : I1iiiii , 'Accept-Language' : 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' } )
  iiI11Iii = I1II . content
  try :
   iiI11Iii = iiI11Iii . decode ( 'utf-8' )
  except :
   pass
 except :
  iiI11Iii = 'desconhecido'
 xbmcgui . Dialog ( ) . ok ( 'KelTec Media Play' , 'Vencimento: %s' % str ( iiI11Iii ) )
 if 96 - 96: I1Ii111 / Oo0Ooo * II111iiii - iII111i * Oo0Ooo
 if 81 - 81: IiII . o0oOOo0O0Ooo / I1Ii111
def Iii111Ii ( url , count ) :
 oOOIi1II = IiIiiI . getSetting ( 'proxy' )
 if oOOIi1II == 'true' :
  try :
   import requests
   import random
   Oo0oOooo000OO = { 'User-agent' : I1iiiii , 'Matrix' : '19' , 'Add-on' : 'plugin.video.Keltec-MP' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : 'copyright © 2017-2021' , 'Referer' : 'www.keltecmp.net' , 'Team' : 'KelTec-Media-Play' , '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ,
 'Content-Type' : 'text/html' }
   if int ( count ) > 0 :
    OO0oOo = int ( count ) - 1
   else :
    OO0oOo = 0
    if 54 - 54: Ii1I * I1Ii111 - OoooooooOO % I1IiiI + O0
    if 6 - 6: I1ii11iIi11i - II111iiii / oO0o + i11iIiiIii + OOooOOo
    if 54 - 54: Ii1I - I11i - I1Ii111 . iIii1I11I1II1
   III = ii1IiIIi1i ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=no&anonymity=all' , '' )
   iIiIi11Ii = III . splitlines ( )
   iIII1i1i = len ( iIiIi11Ii )
   IiI1iii11iIi1 = random . randint ( 0 , iIII1i1i - 1 )
   i1iI11I1II1 = 'http://' + iIiIi11Ii [ IiI1iii11iIi1 ]
   if 79 - 79: Ii1I . OoO0O00
   OO0o = ii1IiIIi1i ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=yes&anonymity=all' , '' )
   III111i11IiI = OO0o . splitlines ( )
   O0000 = len ( III111i11IiI )
   ooO00O0O0 = random . randint ( 0 , O0000 - 1 )
   iII1I1 = 'https://' + III111i11IiI [ ooO00O0O0 ]
   if 40 - 40: o0oOOo0O0Ooo + Oo0Ooo . o0oOOo0O0Ooo % ooOoO0o
   ii1iii11i1 = { "http" : i1iI11I1II1 , "https" : iII1I1 }
   I1II = requests . get ( url , headers = Oo0oOooo000OO , proxies = ii1iii11i1 )
   I1II . encoding = 'utf-8'
   if 15 - 15: Ii1I * Oo0Ooo % I1ii11iIi11i * iIii1I11I1II1 - i11iIiiIii
   iii1 = I1II . text
   return iii1
  except :
   II11iIiiI1111 = IiIiiI . getSetting ( 'proxy_try' )
   if int ( OO0oOo ) > 0 :
    OOO00oo0ooO = int ( OO0oOo )
   elif int ( count ) == 1 and int ( OO0oOo ) == 0 :
    OOO00oo0ooO = int ( II11iIiiI1111 ) + 1 + 1
   if int ( OOO00oo0ooO ) > 1 :
    if 60 - 60: I1IiiI * I1Ii111 % OoO0O00 + oO0o
    oooOOOO0oooo = Iii111Ii ( url , int ( OOO00oo0ooO ) )
    return oooOOOO0oooo
   else :
    i1II1 ( '[COLOR red]Erro ao utilizar o proxy ou servidor![/COLOR]' )
    iii1 = ''
    return iii1
 else :
  try :
   try :
    import urllib . request as urllib2
   except ImportError :
    import urllib2
   iiiI = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-agent" : I1iiiii , "Matrix" : "19" , "Add-on" : "plugin.video.Keltec-MP" , "KelTec Media-Play" : "Direitos Reservados" , "Ref" : "copyright © 2017-2021" , "Referer" : "www.keltecmp.net" , "Team" : "KelTec-Media-Play" , "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
   IiIi1 = urllib2 . Request ( url , headers = iiiI )
   iii1 = urllib2 . urlopen ( IiIi1 ) . read ( ) . decode ( 'utf-8' )
   return iii1
  except urllib2 . URLError as i111iiI1ii :
   if hasattr ( i111iiI1ii , 'code' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( i111iiI1ii . code ) + ",10000," + __icon__ + ")" )
   elif hasattr ( i111iiI1ii , 'reason' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( i111iiI1ii . reason ) + ",10000," + __icon__ + ")" )
   iii1 = ''
   return iii1
   if 52 - 52: i1IIi
   if 84 - 84: Ii1I / IiII
   if 86 - 86: OoOoOO00 * II111iiii - O0 . OoOoOO00 % iIii1I11I1II1 / OOooOOo
def ii1IiIIi1i ( url , ref , userargent = False , headers = False ) :
 try :
  if ref > '' :
   IiIIiIIIiIii = ref
  else :
   IiIIiIIIiIii = url
  if userargent :
   I1i11II = userargent
  else :
   I1i11II = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'
  II11 = cookielib . CookieJar ( )
  I1iii = urllib2 . build_opener ( urllib2 . HTTPCookieProcessor ( II11 ) )
  if headers :
   I1iii . addheaders = headers
  else :
   I1iii . addheaders = [ ( 'Accept-Language' , 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' ) , ( 'User-Agent' , I1i11II ) , ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ) , ( 'Referer' , IiIIiIIIiIii ) ]
  oooOOOO0oooo = I1iii . open ( url ) . read ( )
  iii1 = oooOOOO0oooo . decode ( 'utf-8' )
  return iii1
 except :
  iii1 = ''
  return iii1
  if 51 - 51: I1ii11iIi11i
def III1I1Ii11iI ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 try :
  iiiI = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
  IiIi1 = urllib2 . Request ( url , headers = iiiI )
  iii1 = urllib2 . urlopen ( IiIi1 , timeout = 32 ) . read ( ) . decode ( 'utf-8' )
 except :
  iii1 = ''
 return iii1
 if 52 - 52: OOooOOo - iII111i * oO0o
 if 17 - 17: OoooooooOO + OOooOOo * I11i * OoOoOO00
def iiIii1I ( url , origin = False , referer = False , post = False ) :
 try :
  from urllib . parse import urlencode
 except ImportError :
  from urllib import urlencode
 try :
  from urllib . request import Request , urlopen , URLError
 except ImportError :
  from urllib2 import Request , urlopen , URLError
 try :
  from StringIO import StringIO
 except ImportError :
  from io import BytesIO as StringIO
 import gzip
 I1II = Request ( url )
 I1II . add_header ( 'sec-ch-ua' , '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"' )
 I1II . add_header ( 'sec-ch-ua-mobile' , '?0' )
 I1II . add_header ( 'sec-ch-ua-platform' , '"Windows"' )
 I1II . add_header ( 'Upgrade-Insecure-Requests' , '1' )
 I1II . add_header ( 'User-Agent' , I1iiiii )
 I1II . add_header ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' )
 I1II . add_header ( 'Sec-Fetch-Site' , 'none' )
 I1II . add_header ( 'Sec-Fetch-Mode' , 'navigate' )
 I1II . add_header ( 'Sec-Fetch-User' , '?1' )
 I1II . add_header ( 'Sec-Fetch-Dest' , 'document' )
 I1II . add_header ( 'Accept-Encoding' , 'gzip' )
 I1II . add_header ( 'Accept-Language' , 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' )
 if origin :
  I1II . add_header ( 'Origin' , origin )
 if referer :
  I1II . add_header ( 'Referer' , referer )
 try :
  if post :
   post = urlencode ( post )
   try :
    iii1 = urlopen ( I1II , data = post . encode ( 'utf-8' ) )
    i1I11iIiII = iii1 . getcode ( )
    OO0OO0OO = iii1 . info ( ) . get ( 'Content-Encoding' )
   except :
    iii1 = urlopen ( I1II , data = post )
    i1I11iIiII = iii1 . getcode ( )
    OO0OO0OO = iii1 . info ( ) . get ( 'Content-Encoding' )
  else :
   try :
    iii1 = urlopen ( I1II )
    i1I11iIiII = iii1 . getcode ( )
    OO0OO0OO = iii1 . info ( ) . get ( 'Content-Encoding' )
   except :
    i1I11iIiII = 401
    OO0OO0OO = 'none'
 except :
  i1I11iIiII = 401
  OO0OO0OO = 'none'
 if i1I11iIiII == 200 :
  if OO0OO0OO == 'gzip' :
   try :
    OoooO0o = StringIO ( iii1 . read ( ) )
    IIIii1iiIi = gzip . GzipFile ( fileobj = OoooO0o )
    oooo0OOo = IIIii1iiIi . read ( )
   except :
    oooo0OOo = ''
  else :
   try :
    oooo0OOo = iii1 . read ( )
   except :
    oooo0OOo = ''
 else :
  oooo0OOo = ''
 try :
  oooo0OOo = oooo0OOo . decode ( 'utf-8' )
 except :
  pass
 return oooo0OOo
 if 72 - 72: O0 / ooOoO0o + OoooooooOO * iII111i
 if 61 - 61: OoooooooOO % II111iiii - I1IiiI % I1ii11iIi11i + i1IIi
def i1II ( url , origin = False , referer = False , post = False ) :
 try :
  from urllib . parse import urlencode
 except ImportError :
  from urllib import urlencode
 try :
  from urllib . request import Request , urlopen , URLError
 except ImportError :
  from urllib2 import Request , urlopen , URLError
 try :
  from StringIO import StringIO
 except ImportError :
  from io import BytesIO as StringIO
 import gzip
 I1II = Request ( url )
 I1II . add_header ( 'sec-ch-ua' , '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"' )
 I1II . add_header ( 'sec-ch-ua-mobile' , '?0' )
 I1II . add_header ( 'sec-ch-ua-platform' , '"Windows"' )
 I1II . add_header ( 'Upgrade-Insecure-Requests' , '1' )
 I1II . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36' )
 I1II . add_header ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' )
 I1II . add_header ( 'Sec-Fetch-Site' , 'none' )
 I1II . add_header ( 'Sec-Fetch-Mode' , 'navigate' )
 I1II . add_header ( 'Sec-Fetch-User' , '?1' )
 I1II . add_header ( 'Sec-Fetch-Dest' , 'document' )
 I1II . add_header ( 'Accept-Encoding' , 'gzip' )
 I1II . add_header ( 'Accept-Language' , 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' )
 if origin :
  I1II . add_header ( 'Origin' , origin )
 if referer :
  I1II . add_header ( 'Referer' , referer )
 try :
  if post :
   post = urlencode ( post )
   try :
    iii1 = urlopen ( I1II , data = post . encode ( 'utf-8' ) )
    i1I11iIiII = iii1 . getcode ( )
    OO0OO0OO = iii1 . info ( ) . get ( 'Content-Encoding' )
   except :
    iii1 = urlopen ( I1II , data = post )
    i1I11iIiII = iii1 . getcode ( )
    OO0OO0OO = iii1 . info ( ) . get ( 'Content-Encoding' )
  else :
   try :
    iii1 = urlopen ( I1II )
    i1I11iIiII = iii1 . getcode ( )
    OO0OO0OO = iii1 . info ( ) . get ( 'Content-Encoding' )
   except :
    i1I11iIiII = 401
    OO0OO0OO = 'none'
 except :
  i1I11iIiII = 401
  OO0OO0OO = 'none'
 if i1I11iIiII == 200 :
  if OO0OO0OO == 'gzip' :
   try :
    OoooO0o = StringIO ( iii1 . read ( ) )
    IIIii1iiIi = gzip . GzipFile ( fileobj = OoooO0o )
    oooo0OOo = IIIii1iiIi . read ( )
   except :
    oooo0OOo = ''
  else :
   try :
    oooo0OOo = iii1 . read ( )
   except :
    oooo0OOo = ''
 else :
  oooo0OOo = ''
 try :
  oooo0OOo = oooo0OOo . decode ( 'utf-8' )
 except :
  pass
 return oooo0OOo
 if 15 - 15: OoOoOO00
 if 62 - 62: Ii1I
def ooO000O ( text , start_with , end_with ) :
 oO = re . findall ( "(?i)(" + start_with + "[\S\s]+?" + end_with + ")" , text )
 return oO
 if 23 - 23: Oo0Ooo % I11i - OOooOOo % iIii1I11I1II1 . OoOoOO00
 if 24 - 24: IiII / OoooooooOO + Ii1I % iIii1I11I1II1 - OOooOOo . OOooOOo
 if 32 - 32: OOooOOo . IiII / OoO0O00
def i1I1IIIiiI ( data , re_patten ) :
 ooooO0oOoOOoO = ''
 OO0O0ooOOO00 = re . search ( re_patten , data )
 if OO0O0ooOOO00 != None :
  ooooO0oOoOOoO = OO0O0ooOOO00 . group ( 1 )
 else :
  ooooO0oOoOOoO = ''
 return ooooO0oOoOOoO
 if 17 - 17: O0 . I1Ii111 . O0 + O0 / Oo0Ooo . ooOoO0o
 if 62 - 62: I1ii11iIi11i % iII111i * OoO0O00 - i1IIi
 if 66 - 66: i11iIiiIii / o0oOOo0O0Ooo - OoooooooOO / i1IIi . i11iIiiIii
def IIIII1iii11 ( url ) :
 try :
  oooOOOO0oooo = Iii111Ii ( url , 1 )
  import gzip , bi'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))