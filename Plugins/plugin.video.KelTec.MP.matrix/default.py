# encoded by pyprotect# https://keltecmp.net/pyprotectimport base64, codecsmagic = '# -*- coding: utf-8 -*-
if 64 - 64: i11iIiiIii
try :
 import urllib . parse as urllib
except ImportError :
 import urllib
try :
 import urllib2
except ImportError :
 import urllib . request as urllib2
import re
import os
import sys
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
try :
 import cookielib
except ImportError :
 import http . cookiejar as cookielib
from urllib import request as urllib2 , parse as urllib
import datetime
from datetime import datetime
if 73 - 73: II111iiii
import hashlib
from bs4 import BeautifulSoup
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
import uuid as random
if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * Ii1I
import re
import os
import base64
import codecs
import xbmc
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import time
import xbmc
import webbrowser
if 46 - 46: ooOoO0o * I11i - OoooooooOO
try :
 import json
except :
 import simplejson as json
 if 30 - 30: o0oOOo0O0Ooo - O0 % o0oOOo0O0Ooo - OoooooooOO * O0 * OoooooooOO
Oo0o = "20.06.2021"
if 60 - 60: I1ii11iIi11i + I1Ii111 - I11i / i1IIi
Ii1iI = 'plugin.video.KelTec.MP.matrix'
Oo = xbmcaddon . Addon ( Ii1iI )
I1Ii11I1Ii1i = '[COLOR white][B]KelTec Media Play Tv[/B][/COLOR]'
Ooo = 'plugin.video.KelTecPlayTv'
o0oOoO00o = xbmcaddon . Addon ( id = Ooo )
if 43 - 43: Ii1I . oO0o
IIii11I1 = Oo . getAddonInfo ( "name" )
oo0 = Oo . getAddonInfo ( 'icon' )
Oooo00OOo000 = Oo . getAddonInfo ( 'path' )
O0I11i1i11i1I = Oooo00OOo000 + '/fanart.jpg'
Iiii = Oooo00OOo000 + '/fanart2.jpg'
if 87 - 87: oO0o / ooOoO0o + I1Ii111 - ooOoO0o . ooOoO0o / II111iiii
iiIIIIi1i1 = Oooo00OOo000 + '/icon.gif'
if 54 - 54: OOooOOo % O0 + I1IiiI - iII111i / I11i
iIiiI1 = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) )
OoOooOOOO = Oooo00OOo000 + '/resources/img/'
i11iiII = 'http://megatorrentshd.theproxy.to/'
I1iiiiI1iII = xbmcgui . Dialog ( )
if 20 - 20: i1IIi + i11iIiiIii - Ii1I % OoO0O00 . OoooooooOO
if 96 - 96: i1IIi . OoOoOO00 * OOooOOo % ooOoO0o
OO0O0O00OooO = Oo . getAddonInfo ( 'path' )
OoooooOoo = os . path . join ( OO0O0O00OooO , "resources" , "images" )
if 70 - 70: OoO0O00 . OoO0O00 - OoO0O00 / I1ii11iIi11i * OOooOOo
OoO000 = os . path . join ( OO0O0O00OooO , 'resources' , 'lib' )
sys . path . insert ( 0 , OoO000 )
import common
if 42 - 42: oO0o - i1IIi / i11iIiiIii + OOooOOo + OoO0O00
iIi = xbmcvfs . translatePath ( Oo . getAddonInfo ( "profile" ) )
II = os . path . join ( iIi , "cache" )
if not os . path . exists ( II ) :
 os . makedirs ( II )
 if 14 - 14: Oo0Ooo . I1IiiI / Ii1I
IiiiI1II1I1 = os . path . join ( OO0O0O00OooO , "resources" , "common" , "init.py" )
oo = os . path . join ( iIi , "virtual_directoriesLists.txt" )
Ii11iI1i = os . path . join ( iIi , 'tempList.txt' )
OooO0o0Oo = os . path . join ( iIi , 'favorites.txt' )
if 78 - 78: iIii1I11I1II1 - Ii1I * OoO0O00 + o0oOOo0O0Ooo + iII111i + iII111i
if not ( os . path . isfile ( OooO0o0Oo ) ) :
 common . SaveList ( OooO0o0Oo , [ ] )
 if 11 - 11: iII111i - OoO0O00 % ooOoO0o % iII111i / OoOoOO00 - OoO0O00
if not ( os . path . isfile ( oo ) ) :
 common . SaveList ( oo , [ ] )
 if 74 - 74: iII111i * O0
oOOo0oo = Oo . getSetting ( "makeGroups" ) == "true"
if 80 - 80: I11i * i11iIiiIii / I1Ii111
if 9 - 9: Ii1I + oO0o % Ii1I + i1IIi . OOooOOo
III1i1i = int ( sys . argv [ 1 ] )
__addon__ = xbmcaddon . Addon ( )
iiI1 = __addon__
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
i11Iiii = __addon__ . getAddonInfo ( 'version' )
try :
 iI = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
except :
 iI = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) )
try :
 iIiiI1 = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
except :
 iIiiI1 = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) )
I1i1I1II = os . path . join ( iI , 'favorites.dat' )
i1 = xbmcaddon . Addon ( ) . getSetting ( "favoritos" )
if 48 - 48: O0 + O0 - I1ii11iIi11i . ooOoO0o / iIii1I11I1II1
if 77 - 77: i1IIi % OoOoOO00 - IiII + ooOoO0o
class I11iiIiii ( urllib2 . HTTPRedirectHandler ) :
 def http_error_301 ( self , req , fp , code , msg , headers ) :
  iii11I111 = urllib2 . HTTPRedirectHandler . http_error_301 ( self , req , fp , code , msg , headers )
  return iii11I111
  if 63 - 63: OoO0O00 * oO0o - iII111i * O0
 def http_error_302 ( self , req , fp , code , msg , headers ) :
  iii11I111 = urllib2 . HTTPRedirectHandler . http_error_302 ( self , req , fp , code , msg , headers )
  if 17 - 17: I1ii11iIi11i % II111iiii
if os . path . exists ( I1i1I1II ) == True :
 I1IIiiIiii = open ( I1i1I1II ) . read ( )
else :
 I1IIiiIiii = [ ]
 if 97 - 97: ooOoO0o - OOooOOo * i11iIiiIii / OoOoOO00 % I1Ii111 - OoooooooOO
 if 59 - 59: O0 + I1IiiI + IiII % I1IiiI
def o0OOoo0OO0OOO ( message , timeShown = 5000 ) :
 xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , message , timeShown , __icon__ ) )
 if 19 - 19: oO0o % i1IIi % o0oOOo0O0Ooo
def oo0OooOOo0 ( text , encoding = 'utf-8' , errors = 'strict' ) :
 if isinstance ( text , bytes ) :
  if 92 - 92: iII111i . I11i + o0oOOo0O0Ooo
  return text . decode ( encoding , errors = errors )
 return text
 if 28 - 28: i1IIi * Oo0Ooo - o0oOOo0O0Ooo * IiII * Ii1I / OoO0O00
def OooO0OoOOOO ( heading = '' , message = '' ) :
 i1Ii = None
 if 78 - 78: I11i
 OO00Oo = xbmc . Keyboard ( message , heading )
 OO00Oo . doModal ( )
 if OO00Oo . isConfirmed ( ) :
  i1Ii = oo0OooOOo0 ( OO00Oo . getText ( ) )
 return i1Ii
 if 51 - 51: IiII * o0oOOo0O0Ooo + I11i + OoO0O00
 if 66 - 66: OoOoOO00
 if 97 - 97: oO0o % IiII * IiII
 if 39 - 39: Ii1I % IiII
i111IiI1I = '[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]'
if 70 - 70: Ii1I . Oo0Ooo / o0oOOo0O0Ooo . Ii1I - O0 / IiII
ooOooo000oOO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] BEM VINDOS[/B]\n[COLOR orangered]|[/COLOR] Tv ao Vivo [COLOR orangered]|[/COLOR] Filmes [COLOR orangered]|[/COLOR] Séries [COLOR orangered]|[/COLOR] Desenhos [COLOR orangered]|[/COLOR] Animes [COLOR orangered]|[/COLOR] Melhores Lançamentos Dual Audio[COLOR orangered]|[/COLOR]'
if 59 - 59: II111iiii + OoooooooOO * OoOoOO00 + i1IIi
if 58 - 58: II111iiii * OOooOOo * I1ii11iIi11i / OOooOOo
if 75 - 75: oO0o
I1III = ''
OO0O0OoOO0 = base64 . b64decode ( I1III ) . decode ( 'utf-8' )
OO0O0OoOO0 = ''
if 10 - 10: OoooooooOO % iIii1I11I1II1
if 54 - 54: I1Ii111 - II111iiii % OoOoOO00 % I11i % iIii1I11I1II1 + ooOoO0o
if 15 - 15: I11i * ooOoO0o * Oo0Ooo % i11iIiiIii % OoOoOO00 - OOooOOo
if 68 - 68: I1Ii111 % i1IIi . IiII . I1ii11iIi11i
if 92 - 92: iII111i . I1Ii111
i1i = 'http://teste.com/get.php'
iiI111I1iIiI = '[COLOR white][B]PESQUISAR...[/B][/COLOR]'
IIIi1I1IIii1II = 'https://png.pngtree.com/png-vector/20190115/ourlarge/pngtree-vector-search-icon-png-image_320926.jpg'
O0ii1ii1ii = ''
if 91 - 91: IiII
iiIii = 'Pesquise por filme'
if 79 - 79: OoooooooOO / O0
OO0OoO0o00 = '[B][COLOR silver]Configurações Ativar & Desativar Mensagens[/COLOR][/B]'
ooOO0O0ooOooO = 'https://i.imgur.com/8KUL2Rt.png'
oOOOo00O00oOo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]CONFIGURAÇÕES!\n[/B][COLOR orangered]|[/COLOR] Ajustes  gerais do Add-on.'
if 34 - 34: O0 + OOooOOo + Oo0Ooo
I1 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] FAVORITOS[/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
i1IIIiiII1 = 'https://i.imgur.com/q09OJRb.png'
OOOOoOoo0O0O0 = 'Adicione Itens aos Favoritos, pressionando OK do controle ou clicando o direito e selecionando Adicionar aos favoritos do KelTec Media Play'
if 85 - 85: oO0o % i11iIiiIii - iII111i * OoooooooOO / I1IiiI % I1IiiI
if 1 - 1: OoO0O00 - oO0o . I11i . OoO0O00 / Oo0Ooo + I11i
OooOOOOo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] SUPORTE [COLOR crimson]|[/COLOR][/COLOR][COLOR orangered] TOP VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
oo0O0oO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]TOP[/COLOR] [COLOR orangered](VIP)[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
ooooo = 'https://i.imgur.com/5rgqF8K.png'
II1I = 'https://i.imgur.com/nTIPRcu.png'
if 84 - 84: IiII . i11iIiiIii . IiII * I1ii11iIi11i - I11i
ii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR red] AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] O acesso [COLOR orangered]Top Vip[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo e fique por dentro do melhor conteúdo familiar.\nA Team KelTec Media-Play deseja um ótimo entretenimento a todos!'
if 81 - 81: I1Ii111 % iII111i . I1ii11iIi11i / o0oOOo0O0Ooo
iiiIiI = 'No Kodi só canais; Pelo vip canais e VOD, use o app exclusivo.'
if 91 - 91: iII111i % i1IIi % iIii1I11I1II1
IIi1I11I1II = 'http://lista.lorddark.club:80/get.php'
if 63 - 63: OoooooooOO - OoO0O00 . II111iiii / o0oOOo0O0Ooo . OoOoOO00 / O0
if 84 - 84: IiII
OOO00O0O = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]KelTec [COLOR darkgreen]Torrent[/COLOR] Play[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 33 - 33: O0 . IiII . I1IiiI
if 72 - 72: i1IIi / OoO0O00 + OoooooooOO - Oo0Ooo
iI1Iii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 68 - 68: OOooOOo % I1Ii111
if 88 - 88: iIii1I11I1II1 - ooOoO0o + OOooOOo
if 40 - 40: I1IiiI * Ii1I + OOooOOo % iII111i
OOOOOoo0 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media Play TV[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 49 - 49: O0 . iII111i
if 11 - 11: IiII * I1IiiI . iIii1I11I1II1 % OoooooooOO + iII111i
OOO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 68 - 68: II111iiii + I11i
if 45 - 45: iII111i / iII111i + I1Ii111 + ooOoO0o
if 47 - 47: o0oOOo0O0Ooo + ooOoO0o
OoO = '[B][COLOR white]KelTec [COLOR crimson]Media Play [/B][COLOR orange]|[/COLOR] [COLOR silver]Pesquisa[/COLOR]'
if 88 - 88: iII111i . II111iiii * II111iiii % I1Ii111
if 15 - 15: i1IIi * I1IiiI + i11iIiiIii
I1Ii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 94 - 94: Ii1I - II111iiii . OOooOOo % I11i . i11iIiiIii + O0
if 26 - 26: I11i - iIii1I11I1II1 - I1IiiI / OoO0O00 . OoOoOO00 % iIii1I11I1II1
if 91 - 91: o0oOOo0O0Ooo . iIii1I11I1II1 / oO0o + i1IIi
I1i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR crimson]|[/COLOR] ADD-ON [COLOR crimson]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 53 - 53: I1ii11iIi11i * OoOoOO00 + ooOoO0o - II111iiii
if 2 - 2: I11i + Ii1I - I1IiiI % o0oOOo0O0Ooo . iII111i
I1I1i1I = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 30 - 30: OoooooooOO
if 5 - 5: ooOoO0o - II111iiii - OoooooooOO % Ii1I + I1IiiI * iIii1I11I1II1
if 37 - 37: IiII % ooOoO0o + OoOoOO00 + o0oOOo0O0Ooo * I11i % O0
if 61 - 61: I1IiiI - OOooOOo . oO0o / OOooOOo + Oo0Ooo
I1i11i = 'nome'
o00oO0oo0OO = '[COLOR orangered]KelTec Play Escolha uma opção:[/COLOR]'
if 57 - 57: I1Ii111 % Ii1I + o0oOOo0O0Ooo - Oo0Ooo
if 65 - 65: I11i . OoOoOO00
IiI1i = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'
if 92 - 92: IiII . IiII + OoO0O00
if 9 - 9: I1IiiI * O0 + IiII - I11i * I1Ii111
Oooo0oOO = 'aHR0cDovL2tlbHRlYy1tZWRpYXBsYXkudGsvU3VwcmVtYS1CYXNlLVAvQmFzZS1Ib21lL0hvbWUyLUNvcGlhLmh0bWw='
try :
 Ooo00O00o = base64 . b64decode ( Oooo0oOO ) . decode ( 'utf-8' )
except :
 Ooo00O00o = Oooo0oOO
 if 98 - 98: OOooOOo + IiII + oO0o % OoooooooOO
 if 97 - 97: O0 * OoooooooOO . OoooooooOO
 if 33 - 33: I1Ii111 + iII111i * oO0o / iIii1I11I1II1 - I1IiiI
O0oO = xbmcaddon . Addon ( ) . getAddonInfo ( 'name' )
if 73 - 73: I1ii11iIi11i * i11iIiiIii % oO0o . I1ii11iIi11i
if 66 - 66: oO0o + oO0o + ooOoO0o / iII111i + OOooOOo
if sys . argv [ 1 ] == 'limparFavoritos' :
 iIii1111iII = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'profile' ) ) . decode ( "utf-8" )
 iiiiI = os . path . join ( iIii1111iII , "favorites.dat" )
 oooOo0OOOoo0 = os . path . isfile ( iiiiI )
 if oooOo0OOOoo0 :
  try :
   os . remove ( iiiiI )
  except :
   pass
 xbmcgui . Dialog ( ) . ok ( 'Sucesso' , '[B][COLOR red]Favoritos limpo com sucesso![/COLOR][/B]' )
 xbmc . sleep ( 2000 )
 exit ( )
 if 51 - 51: Oo0Ooo / OoOoOO00 . OOooOOo * o0oOOo0O0Ooo + OoO0O00 * IiII
 if 73 - 73: OoO0O00 + OoooooooOO - O0 - Ii1I - II111iiii
if sys . argv [ 1 ] == 'SetPassword' :
 O0O = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
 o0oOOoooOOOOo = xbmcvfs . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , O0O ) )
 if os . path . exists ( o0oOOoooOOOOo ) == False :
  os . mkdir ( o0oOOoooOOOOo )
 xbmc . sleep ( 4 )
 if 62 - 62: ooOoO0o
 if 74 - 74: iII111i + o0oOOo0O0Ooo
 iiiiI = os . path . join ( o0oOOoooOOOOo , "password.txt" )
 oooOo0OOOoo0 = os . path . isfile ( iiiiI )
 OO00Oo = xbmcaddon . Addon ( ) . getSetting ( "keyboard" )
 if oooOo0OOOoo0 == False :
  oO00O000oO0 = '0069'
  O0OoOO0o = base64 . b64encode ( oO00O000oO0 . encode ( ) ) . decode ( 'utf-8' )
  ooooo0O0000oo = open ( iiiiI , 'w' )
  ooooo0O0000oo . write ( O0OoOO0o )
  ooooo0O0000oo . close ( )
  xbmc . sleep ( 4 )
  iIii1II11 = open ( iiiiI , 'r+' )
  OooOo0ooo = iIii1II11 . read ( )
  o00oo0 = base64 . b64decode ( OooOo0ooo ) . decode ( 'utf-8' )
  I1iiiiI1iII = xbmcgui . Dialog ( )
  if int ( OO00Oo ) == 0 :
   I11ii1IIiIi = I1iiiiI1iII . numeric ( 0 , 'Insira a senha atual:' )
  else :
   I11ii1IIiIi = I1iiiiI1iII . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if I11ii1IIiIi == o00oo0 :
   if int ( OO00Oo ) == 0 :
    OoOOo0OOoO = I1iiiiI1iII . numeric ( 0 , 'Insira a nova senha:' )
   else :
    OoOOo0OOoO = I1iiiiI1iII . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if OoOOo0OOoO != '' :
    ooO0O00Oo0o = base64 . b64encode ( OoOOo0OOoO . encode ( ) ) . decode ( 'utf-8' )
    iIii1II11 = open ( iiiiI , 'w' )
    iIii1II11 . write ( ooO0O00Oo0o )
    iIii1II11 . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 else :
  iIii1II11 = open ( iiiiI , 'r+' )
  OooOo0ooo = iIii1II11 . read ( )
  o00oo0 = base64 . b64decode ( OooOo0ooo ) . decode ( 'utf-8' )
  I1iiiiI1iII = xbmcgui . Dialog ( )
  if int ( OO00Oo ) == 0 :
   I11ii1IIiIi = I1iiiiI1iII . numeric ( 0 , 'Insira a senha atual:' )
  else :
   I11ii1IIiIi = I1iiiiI1iII . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if I11ii1IIiIi == o00oo0 :
   if int ( OO00Oo ) == 0 :
    OoOOo0OOoO = I1iiiiI1iII . numeric ( 0 , 'Insira a nova senha:' )
   else :
    OoOOo0OOoO = I1iiiiI1iII . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if OoOOo0OOoO != '' :
    ooO0O00Oo0o = base64 . b64encode ( OoOOo0OOoO . encode ( ) ) . decode ( 'utf-8' )
    iIii1II11 = open ( iiiiI , 'w' )
    iIii1II11 . write ( ooO0O00Oo0o )
    iIii1II11 . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 exit ( )
 if 65 - 65: I1ii11iIi11i . I11i - I1Ii111 * IiII / I1Ii111 / ooOoO0o
 if 40 - 40: ooOoO0o * IiII * i11iIiiIii
 if 57 - 57: ooOoO0o
 if 29 - 29: OoOoOO00 - IiII * OoooooooOO + OoooooooOO . II111iiii + OoooooooOO
 if 74 - 74: Ii1I - IiII / iII111i * O0 - OOooOOo
 if 19 - 19: I1IiiI
 if 25 - 25: Ii1I / ooOoO0o
def IIooO ( msg ) :
 Ooo0oOooo0 ( '[B][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]' , '-' , 20 , OoOooOOOO + 'icon.gif' )
 if 61 - 61: OoOoOO00 - OOooOOo - i1IIi
 Ooo0oOooo0 ( '[B][COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR darkgreen]|[/COLOR] ADD-ON [COLOR darkgreen]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]' , '-' , 21 , OoOooOOOO + 'icon.gif' )
 Ooo0oOooo0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]PESQUISA[/COLOR]' , '-' , 115 , OoOooOOOO + 'icon.gif' )
 Ooo0oOooo0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]DESTAQUES[/COLOR]' , 'http://megatorrentshd.theproxy.to/destaque/' , 112 , OoOooOOOO + 'icon.gif' )
 Ooo0oOooo0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]LANÇAMENTOS[/COLOR]' , 'http://megatorrentshd.theproxy.to/category/filmes-lancamentos' , 112 , OoOooOOOO + 'icon.gif' )
 Ooo0oOooo0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]SÉRIES[/COLOR]' , 'http://megatorrentshd.theproxy.to/category/series' , 112 , OoOooOOOO + 'icon.gif' )
 Ooo0oOooo0 ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]CATEGORIAS[/COLOR]' , 'http://megatorrentshd.theproxy.to/' , 114 , OoOooOOOO + 'icon.gif' )
 Ooo0oOooo0 ( '[B][COLOR silver]Torrent Play Check & Update[/COLOR][/B]' , '-' , 12 , OoOooOOOO + 'icon.gif' )
 if 25 - 25: O0 * I11i + I1ii11iIi11i . o0oOOo0O0Ooo . o0oOOo0O0Ooo
 if 58 - 58: I1IiiI
 if 53 - 53: i1IIi
 if 59 - 59: o0oOOo0O0Ooo
def oOoO00O0 ( ) :
 OO = Ii1iI111II1I1 ( 'http://megatorrentshd.theproxy.to/category/filmes-lancamentos/' )
 oOOOOoOO0o = [ ]
 i1II1 = [ ]
 i11i1 = re . compile ( '<a class="last" href="http://megatorrentshd.theproxy.to/category/filmes-lancamentos/(.*)/">.*</a>' ) . findall ( OO ) [ 0 ]
 IiiiiI1i1Iii = int ( i11i1 )
 for oo00oO0o in range ( 1 , IiiiiI1i1Iii + 1 ) :
  i1II1 . append ( '[B]PÁGINA: %s[/B]' % oo00oO0o )
  oOOOOoOO0o . append ( 'http://megatorrentshd.theproxy.to/category/filmes-lancamentos/' + str ( oo00oO0o ) + '/' )
 iiii111II = xbmcgui . Dialog ( ) . select ( '-= [B]Torrent Play[/B] =-' , i1II1 )
 if iiii111II >= 0 :
  pass
def I11iIiI1I1i11 ( url ) :
 OO = Ii1iI111II1I1 ( url )
 OOoooO00o0oo0 = BeautifulSoup ( OO , 'html.parser' )
 O00O = OOoooO00o0oo0 . find ( 'ul' , { 'class' : "sub-menu" } ) . findAll ( 'li' )
 for oo00oO0o in O00O :
  I1i11 = oo00oO0o . text . encode ( 'utf-8' )
  url = oo00oO0o . a [ 'href' ]
  if url . startswith ( 'http' ) :
   url = url
  else :
   url = i11iiII + url
  Ooo0oOooo0 ( I1i11 , url , 112 , iiIIIIi1i1 )
  if 12 - 12: i1IIi + i1IIi - I1ii11iIi11i * Oo0Ooo % Oo0Ooo - II111iiii
def o0O ( item , arquivo = False ) :
 for OOOooo in item :
  if not arquivo :
   return OOOooo
  else :
   return OOOooo . text . encode ( 'utf-8' )
   if 94 - 94: OoooooooOO + Oo0Ooo / OoOoOO00 * OOooOOo
def o0OOo0o0O0O ( url ) :
 OO = Ii1iI111II1I1 ( url )
 o0 = OO
 OO0o0oOOO0O = BeautifulSoup ( o0 , 'html.parser' )
 iII1i11 = OO0o0oOOO0O . findAll ( 'div' , attrs = { "class" : 'ItemN' } )
 for OOOooo in iII1i11 :
  OooIiIIII1i11I = OOOooo . findAll ( 'span' , attrs = { 'class' : 'idi' } ) [ 0 ]
  OOOiII1 = OooIiIIII1i11I . text
  try :
   OOOiII1 = OOOiII1 . decode ( 'utf-8' )
  except :
   pass
  OOo = o0O ( OOOooo . findAll ( 'span' , attrs = { 'class' : 'quality' } ) , True )
  IIii11Ii1i1I = OOo
  try :
   IIii11Ii1i1I = IIii11Ii1i1I . decode ( 'utf-8' )
  except :
   pass
  Oooo0O = OOOooo . findAll ( "div" , { "class" : "peli" } ) [ 0 ]
  I1i11 = Oooo0O . img [ 'alt' ]
  oo00O0oO0O0 = Oooo0O . img [ 'src' ]
  url = Oooo0O . a [ 'href' ]
  url = url . replace ( '/b/?' , '' )
  I1i11 = I1i11 . split ( '– HD' ) [ 0 ] . split ( ') HD' ) [ 0 ] . split ( ' – BluRay' ) [ 0 ] . split ( ' – WEB-DL' ) [ 0 ]
  I1i11 = I1i11 . replace ( '   ' , ' ' ) . replace ( ' Completa ' , ' ' ) . replace ( '   ' , ' ' ) . replace ( '   ' , ' ' )
  Ooo0oOooo0 ( '%s - %s - %s' % ( str ( I1i11 ) , OOOiII1 , IIii11Ii1i1I ) , url . encode ( 'utf-8' ) , 1199 , oo00O0oO0O0 . encode ( 'utf-8' ) )
 iII1i11 = OO0o0oOOO0O . findAll ( 'div' , attrs = { "class" : 'wp-pagenavi' } )
 ooo0OO0O0Oo = len ( iII1i11 )
 for OOOooo in iII1i11 :
  Ooo0O0oooo = o0O ( OOOooo . find ( "span" , { "class" : "pages" } ) )
  iiI = OOOooo . findAll ( attrs = { "class" : "nextpostslink" } ) [ 0 ] . get ( 'href' )
  iiI = iiI . replace ( '/b/?' , '' )
  if 56 - 56: Oo0Ooo . I1ii11iIi11i . I1IiiI
  Ooo0oOooo0 ( '[B][COLOR white]' + str ( Ooo0O0oooo ) + '[/COLOR][/B]' , iiI . encode ( 'utf-8' ) , 112 , OoOooOOOO + 'Proxima.png' , True )
 if ooo0OO0O0Oo == 0 :
  ii111I = re . compile ( '<link rel="next" href="(.*?)".+?/>' ) . findall ( OO )
  for oo00oO0o in ii111I :
   oo00oO0o = oo00oO0o . replace ( '/b/?' , '' )
   Ooo0oOooo0 ( '[COLOR white][B]Proxima Página[/B][/COLOR]' , str ( oo00oO0o ) , 112 , OoOooOOOO + 'Proxima.png' , True )
   if 17 - 17: I1IiiI . O0 + OoO0O00
   if 43 - 43: II111iiii . oO0o / I1ii11iIi11i
   if 20 - 20: I1IiiI
   if 95 - 95: iII111i - I1IiiI
def I1ii1ii11i1I ( ) :
 o0OoOO = xbmc . Keyboard ( '' , '[B]Encontre filmes, atores e diretores[/B]' )
 o0OoOO . doModal ( )
 if ( o0OoOO . isConfirmed ( ) ) :
  O0O0Oo00 = o0OoOO . getText ( )
  oOoO00o = urllib . quote ( O0O0Oo00 )
  oO00O0 = 'http://megatorrentshd.theproxy.to/?s=' + oOoO00o
  o0OOo0o0O0O ( oO00O0 )
 else :
  sys . exit ( )
  if 36 - 36: oO0o - Ii1I . Oo0Ooo - i11iIiiIii - OOooOOo * Oo0Ooo
  if 76 - 76: i11iIiiIii + o0oOOo0O0Ooo / I1ii11iIi11i - OoO0O00 - Ii1I + I1ii11iIi11i
def ooI1i ( url , name , iconimage ) :
 OO = Ii1iI111II1I1 ( url )
 Ooo0oOooo0 ( '[B][COLOR white]Sinopse:%s[/COLOR][/B]' % name . split ( '(' ) [ 0 ] , url , 1120 , iconimage , False )
 OO0o0oOOO0O = BeautifulSoup ( OO , "html.parser" )
 iII1i11 = OO0o0oOOO0O . findAll ( attrs = { "class" : "trailer litebox" } )
 if 32 - 32: OoOoOO00 / OoO0O00 + OOooOOo
 if 32 - 32: iIii1I11I1II1 % iII111i
 if 65 - 65: ooOoO0o . OoooooooOO / I1ii11iIi11i . i1IIi * OoO0O00
 O00O = OO0o0oOOO0O . find ( 'div' , { 'id' : 'categoria' , 'class' : 'box_item center-widget' } )
 IiIiII1 = O00O . findAll ( 'div' )
 for oo00oO0o in IiIiII1 :
  name = oo00oO0o . text . encode ( 'utf-8' )
  try :
   url = oo00oO0o . a [ 'href' ] . encode ( 'utf-8' )
  except :
   url = 'True'
  if name == '' :
   xbmc . log ( '%s' % oo00oO0o )
   Iii1iiIi1II = url . split ( '&dn=' ) [ - 1 ] . split ( '&tr=' ) [ 0 ]
   name = urllib . unquote_plus ( urllib . unquote_plus ( Iii1iiIi1II . split ( '[' ) [ - 0 ] ) )
  Ooo0oOooo0 ( name , url , 1198 , iconimage , False )
  if 60 - 60: I1IiiI - oO0o * I11i % II111iiii
def ooo ( url , name , iconimage ) :
 OO = Ii1iI111II1I1 ( url )
 OO0o0oOOO0O = BeautifulSoup ( OO )
 iII1i11 = OO0o0oOOO0O . findAll ( attrs = { "class" : "trailer litebox" } )
 for Oooo0O in iII1i11 :
  IIiIiI1I = Oooo0O . get ( 'href' )
  OooOoOo ( IIiIiI1I , name , iconimage )
  if 14 - 14: o0oOOo0O0Ooo * OOooOOo + iII111i + O0 + i11iIiiIii
def oOoO0 ( url ) :
 o0 = Ii1iI111II1I1 ( url )
 OO0o0oOOO0O = BeautifulSoup ( o0 , 'html.parser' )
 if 77 - 77: iIii1I11I1II1 . iII111i % iII111i + i11iIiiIii
 iII1i11 = OO0o0oOOO0O . findAll ( attrs = { "class" : 'meta_datos' } )
 for Oooo0O in iII1i11 :
  print ( Oooo0O )
  Oo00o0OO0O00o = Oooo0O . h1 . text
  O0Oooo = Oooo0O . find ( 'div' , { 'class' : 'views' } )
  iiIi1i = O0Oooo . text . replace ( '|' , '\nVotos: ' ) . replace ( '/ 10' , '' ) . replace ( 'votos' , '' )
  I1i11111i1i11 = OO0o0oOOO0O . find ( attrs = { "class" : 'meta_datos' } ) . findAll ( 'p' )
  OOoOOO0 = I1i11111i1i11 [ 1 ] . text . split ( '|' ) [ - 1 ]
  I1I1i ( I1Ii11I1Ii1i , 'Sinopse: %s' % Oo00o0OO0O00o + '\n\n' + iiIi1i + '\n\n' + OOoOOO0 )
  if 1 - 1: I11i % OOooOOo + O0 + i1IIi - OoO0O00
  if 22 - 22: I1IiiI % I1ii11iIi11i
def I1I1i ( heading , text ) :
 id = 10147
 xbmc . executebuiltin ( 'ActivateWindow(%d)' % id )
 xbmc . sleep ( 100 )
 o0oo0O = xbmcgui . Window ( id )
 Ii1i1iI = 50
 while ( Ii1i1iI > 0 ) :
  try :
   xbmc . sleep ( 10 )
   Ii1i1iI -= 1
   o0oo0O . getControl ( 1 ) . setLabel ( heading )
   o0oo0O . getControl ( 5 ) . setText ( text )
   return
  except :
   pass
   if 16 - 16: OOooOOo / Oo0Ooo / OoooooooOO * I1IiiI + i1IIi % OOooOOo
def ooo0o00 ( url , name , iconimage ) :
 ooO = xbmcgui . ListItem ( name , path = url )
 ooO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 ooO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 return ooO
 if 74 - 74: I1IiiI
 if 89 - 89: Ii1I
def ooOoOO0OoO00o ( url , name , iconimage ) :
 url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
 xbmc . Player ( ) . play ( item = url , listitem = ooo0o00 ( url , name , iconimage ) )
 if 11 - 11: Oo0Ooo - I1IiiI * II111iiii . I1ii11iIi11i . oO0o
 if 61 - 61: iII111i % I1IiiI - o0oOOo0O0Ooo - II111iiii % O0
def OoOOO00 ( url , name , iconimage ) :
 if 94 - 94: IiII
 o000ooooo0 = o0oOoO00o . getSetting ( 'torrent' )
 if 'magnet' in url or '.torrent' in url :
  if int ( o000ooooo0 ) == 0 :
   url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
   ooO = xbmcgui . ListItem ( name , path = url )
   ooO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
   ooO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
   if 51 - 51: OoO0O00 - O0 % oO0o - II111iiii
   xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , ooO )
  elif int ( o000ooooo0 ) == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("org.acestream.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    I1iiiiI1iII . ok ( I1Ii11I1Ii1i , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
  elif int ( o000ooooo0 ) == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("tv.bitx.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    I1iiiiI1iII . ok ( I1Ii11I1Ii1i , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
 else :
  ooO = xbmcgui . ListItem ( name , path = url )
  ooO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
  ooO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
  if 31 - 31: iII111i / Oo0Ooo - iII111i - OOooOOo
  xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , ooO )
  if 7 - 7: iII111i % O0 . OoOoOO00 + I1IiiI - I11i
  if 75 - 75: I11i
def OooOoOo ( url , name , iconimage ) :
 url = 'plugin://plugin.video.youtube/play/?video_id={}' . format ( url )
 if 71 - 71: ooOoO0o
 ooO = xbmcgui . ListItem ( name , path = url )
 ooO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 ooO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 if 53 - 53: OoooooooOO % Ii1I . IiII / i11iIiiIii % iII111i
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , ooO )
 if 28 - 28: I11i
 if 58 - 58: OoOoOO00
 if 37 - 37: Oo0Ooo - iIii1I11I1II1 / I1ii11iIi11i
 if 73 - 73: i11iIiiIii - IiII
 if 25 - 25: OoooooooOO + IiII * I1ii11iIi11i
def Ii1iI111II1I1 ( url ) :
 try :
  OoO0ooO = urllib2 . Request ( url )
  OoO0ooO . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
  O000 = urllib2 . urlopen ( OoO0ooO )
  OO = O000 . read ( ) . decode ( 'utf-8' )
  O000 . close ( )
  return OO
 except IOError :
  I1iiiiI1iII . notification ( I1Ii11I1Ii1i , 'Não foi possivel acessar o servidor.' , iiIIIIi1i1 )
  sys . exit ( 0 )
  if 7 - 7: iII111i / I1ii11iIi11i / i11iIiiIii
  if 21 - 21: oO0o / I1ii11iIi11i + Ii1I + OoooooooOO
def Ooo0oOooo0 ( name , url , mode , iconimage , pasta = True , total = 1 , plot = '' ) :
 OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage )
 ooO = xbmcgui . ListItem ( name )
 if pasta :
  ooO . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  ooO . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if mode == 1198 or mode == 11999 :
  ooO . setProperty ( 'IsPlayable' , 'true' )
 if mode == 1199 :
  I1iI11iIiIi1 = [ ]
  I1iI11iIiIi1 . append ( ( '[B][COLOR white]Ver Sinopse[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1120&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  I1iI11iIiIi1 . append ( ( '[B][COLOR white]Play Trailer[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1121&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  ooO . addContextMenuItems ( I1iI11iIiIi1 , replaceItems = False )
 ooO . setProperty ( 'fanart_image' , Iiii )
 ooO . setInfo ( 'video' , { 'title' : name , 'plot' : plot } )
 xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = OoOo , listitem = ooO , isFolder = pasta , totalItems = total )
 if 72 - 72: I1Ii111
 if 90 - 90: Oo0Ooo % O0 * iIii1I11I1II1 . iII111i
 if 8 - 8: ooOoO0o + II111iiii / iII111i / I11i
def ooo0O ( msg ) :
 import startup
 if 16 - 16: OoOoOO00
 if 41 - 41: i1IIi * II111iiii / OoooooooOO . OOooOOo
 if 83 - 83: iII111i . O0 / Oo0Ooo / OOooOOo - II111iiii
 if 100 - 100: OoO0O00
 if 46 - 46: OoOoOO00 / iIii1I11I1II1 % iII111i . iIii1I11I1II1 * iII111i
def IIi1ii1Ii ( url , count ) :
 OoOoO = iiI1 . getSetting ( 'proxy' )
 if OoOoO == 'true' :
  try :
   import requests
   import random
   o0ii1i = { 'User-agent' : IiI1i , 'Matrix' : '19' , 'Add-on' : 'plugin.video.Keltec-MP' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : 'copyright © 2017-2021' , 'Referer' : 'www.keltecmp.net' , 'Team' : 'KelTec-Media-Play' , '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ,
 'Content-Type' : 'text/html' }
   if int ( count ) > 0 :
    oOOoo = int ( count ) - 1
   else :
    oOOoo = 0
    if 14 - 14: o0oOOo0O0Ooo * oO0o
    if 81 - 81: Ii1I * o0oOOo0O0Ooo + I1Ii111 + Oo0Ooo - OoooooooOO
    if 32 - 32: Ii1I * O0
   O00oOo00o0o = O00oO0 ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=no&anonymity=all' , '' )
   O0Oo00OoOo = O00oOo00o0o . splitlines ( )
   ii1ii111 = len ( O0Oo00OoOo )
   i11111I1I = random . randint ( 0 , ii1ii111 - 1 )
   ii1 = 'http://' + O0Oo00OoOo [ i11111I1I ]
   if 80 - 80: OoooooooOO - OOooOOo * Ii1I * I1ii11iIi11i / I1IiiI / OOooOOo
   I1I11iI11iI1i = O00oO0 ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=yes&anonymity=all' , '' )
   oo0o0O0Oooooo = I1I11iI11iI1i . splitlines ( )
   i11IIIiI1I = len ( oo0o0O0Oooooo )
   o0iiiI1I1iIIIi1 = random . randint ( 0 , i11IIIiI1I - 1 )
   Iii = 'https://' + oo0o0O0Oooooo [ o0iiiI1I1iIIIi1 ]
   if 19 - 19: I11i % II111iiii / i11iIiiIii / iII111i - OoooooooOO
   iIIii = { "http" : ii1 , "https" : Iii }
   OoO0ooO = requests . get ( url , headers = o0ii1i , proxies = iIIii )
   OoO0ooO . encoding = 'utf-8'
   if 18 - 18: iII111i . I1IiiI
   O000 = OoO0ooO . text
   return O000
  except :
   iiIi1IIiI = iiI1 . getSetting ( 'proxy_try' )
   if int ( oOOoo ) > 0 :
    i1oO0OO0 = int ( oOOoo )
   elif int ( count ) == 1 and int ( oOOoo ) == 0 :
    i1oO0OO0 = int ( iiIi1IIiI ) + 1 + 1
   if int ( i1oO0OO0 ) > 1 :
    if 82 - 82: IiII - IiII + OoOoOO00
    II111Ii1i1 = IIi1ii1Ii ( url , int ( i1oO0OO0 ) )
    return II111Ii1i1
   else :
    o0OOoo0OO0OOO ( '[COLOR red]Erro ao utilizar o proxy ou servidor![/COLOR]' )
    O000 = ''
    return O000
 else :
  try :
   try :
    import urllib . request as urllib2
   except ImportError :
    import urllib2
   OO0 = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-agent" : IiI1i , "Matrix" : "19" , "Add-on" : "plugin.video.Keltec-MP" , "KelTec Media-Play" : "Direitos Reservados" , "Ref" : "copyright © 2017-2021" , "Referer" : "www.keltecmp.net" , "Team" : "KelTec-Media-Play" , "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
   I1i11iIIi = urllib2 . Request ( url , headers = OO0 )
   O000 = urllib2 . urlopen ( I1i11iIIi ) . read ( ) . decode ( 'utf-8' )
   return O000
  except urllib2 . URLError as i1IIIIiI111I :
   if hasattr ( i1IIIIiI111I , 'code' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( i1IIIIiI111I . code ) + ",10000," + __icon__ + ")" )
   elif hasattr ( i1IIIIiI111I , 'reason' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( i1IIIIiI111I . reason ) + ",10000," + __icon__ + ")" )
   O000 = ''
   return O000
   if 11 - 11: I1IiiI - OoO0O00
   if 39 - 39: i11iIiiIii - iIii1I11I1II1 / oO0o
   if 70 - 70: IiII
def O00oO0 ( url , ref , userargent = False ) :
 try :
  try :
   import cookielib
  except ImportError :
   import http . cookiejar as cookielib
  try :
   import urllib2
  except ImportError :
   import urllib . request as urllib2
  if ref > '' :
   i11i1iiI1i = ref
  else :
   i11i1iiI1i = url
  oO0oOOoo00000 = cookielib . CookieJar ( )
  oOo00 = urllib2 . build_opener ( urllib2 . HTTPCookieProcessor ( oO0oOOoo00000 ) )
  oOo00 . addheaders = [ ( 'Accept-Language' , 'en-US,en;q=0.9;q=0.8' ) , ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' ) , ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ) , ( 'Referer' , i11i1iiI1i ) ]
  II111Ii1i1 = oOo00 . open ( url ) . read ( )
  O000 = II111Ii1i1 . decode ( 'utf-8' )
  return O000
 except :
  if 3 - 3: iII111i % i1IIi
  O000 = ''
  return O000
  if 46 - 46: II111iiii % o0oOOo0O0Ooo % iIii1I11I1II1 - Oo0Ooo . OoooooooOO - IiII
def o00 ( text , start_with , end_with ) :
 ooO00O = re . findall ( "(?i)(" + start_with + "[\S\s]+?" + end_with + ")" , text )
 return ooO00O
 if 68 - 68: i11iIiiIii + Ii1I
 if 77 - 77: I1Ii111
 if 65 - 65: II111iiii . I1IiiI % oO0o * OoO0O00
def iI11I ( data , re_patten ) :
 O00O = ''
 I1IIIiii1 = re . search ( re_patten , data )
 if I1IIIiii1 != None :
  O00O = I1IIIiii1 . group ( 1 )
 else :
  O00O = ''
 return O00O
 if 65 - 65: I11i / II111iiii * Ii1I . iII111i * oO0o % OOooOOo
 if 69 - 69: ooOoO0o - OoO0O00 / i11iIiiIii + I1ii11iIi11i % OoooooooOO
 if 73 - 73: Ii1I - I1Ii111
def O00oooo00o0O ( url ) :
 try :
  II111Ii1i1 = IIi1ii1Ii ( url , 1 )
  import gzip , binascii
  try :
   from StringIO import StringIO as BytesIO
  except ImportError :
   from io import BytesIO
  if '0ccdc' in II111Ii1i1 :
   II111Ii1i1 = II111Ii1i1 . split ( '0ccdc' )
   ii1iii1I1I = BytesIO ( binascii . unhexlify ( II111Ii1i1 [ 0 ] ) )
   oO0Ooo0ooOO0 = gzip . GzipFile ( fileobj = ii1iii1I1I )
   II111Ii1i1 = oO0Ooo0ooOO0 . read ( )
   II111Ii1i1 = II111Ii1i1 . decode ( 'utf-8' )
 except :
  II111Ii1i1 = IIi1ii1Ii ( url , 1 )
 return II111Ii1i1
 if 46 - 46: Ii1I % OoOoOO00
def ooo0o0O0o ( url , fanart ) :
 O0OooO = xbmcaddon . Addon ( ) . getSetting ( "adult" )
 ii1Ii1IiIIi = xbmcaddon . Addon ( ) . getSetting ( "adult2" )
 o0OO0 = iiI1 . getSetting ( 'uhdtv' )
 oOo00Oo0o0Oo = iiI1 . getSetting ( 'fhdtv' )
 I1I1 = iiI1 . getSetting ( 'hdtv' )
 O0iIi1IiII = iiI1 . getSetting ( 'sdtv' )
 I1iooo = iiI1 . getSetting ( 'filtrar' )
 II111Ii1i1 = O00oooo00o0O ( url )
 if isinstance ( II111Ii1i1 , ( int , str , list ) ) :
  ii1iiIi1 = re . compile ( '<channels>(.+?)</channels>' , re . MULTILINE | re . DOTALL ) . findall ( II111Ii1i1 )
  i111iiI1ii = re . compile ( '<channel>(.*?)</channel>' , re . MULTILINE | re . DOTALL ) . findall ( II111Ii1i1 )
  IIiii = re . compile ( '<item>(.*?)</item>' , re . MULTILINE | re . DOTALL ) . findall ( II111Ii1i1 )
  if len ( ii1iiIi1 ) > 0 :
   for i111iiI1ii in i111iiI1ii :
    I1i1i = ''
    OOOO = 0
    try :
     I1i1i = re . compile ( '<externallink>(.*?)</externallink>' ) . findall ( i111iiI1ii ) [ 0 ]
     OOOO = len ( re . compile ( '<externallink>(.*?)</externallink>' ) . findall ( i111iiI1ii ) )
    except : pass
    if 88 - 88: iII111i
    try :
     I1i1i = base64 . b32decode ( I1i1i [ : : - 1 ] ) . decode ( 'utf-8' )
    except :
     pass
     if 19 - 19: II111iiii * IiII + Ii1I
     if 65 - 65: OOooOOo . I1Ii111 . OoO0O00 . iII111i - OOooOOo
    I1i11 = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
    try :
     ii111i = re . compile ( '<thumbnail>(.*?)</thumbnail>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
    except :
     ii111i = ''
    try :
     oooo00 = re . compile ( '<fanart>(.*?)</fanart>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
    except :
     oooo00 = ''
     if 77 - 77: ooOoO0o - I1IiiI % I11i - O0
    if not oooo00 :
     if __addon__ . getSetting ( 'use_thumb' ) == "true" :
      o0O0O0 = ii111i
     else :
      o0O0O0 = fanart
    else :
     o0O0O0 = oooo00
    if o0O0O0 == None :
     if 6 - 6: iII111i . IiII * OoOoOO00 . i1IIi
     o0O0O0 = ''
     if 98 - 98: i1IIi
    try :
     oO0O = re . compile ( '<info>(.*?)</info>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if oO0O == None :
      if 86 - 86: OoOoOO00 . iIii1I11I1II1 - OoO0O00
      oO0O = ''
    except :
     oO0O = ''
     if 56 - 56: O0
    try :
     OOo00 = re . compile ( '<genre>(.*?)</genre>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if OOo00 == None :
      if 37 - 37: i1IIi
      OOo00 = ''
    except :
     OOo00 = ''
     if 46 - 46: OoOoOO00 - I11i - Ii1I . i1IIi
    try :
     IiI1iii11iIi1 = re . compile ( '<date>(.*?)</date>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if IiI1iii11iIi1 == None :
      if 40 - 40: I11i % OoO0O00 . I1Ii111
      IiI1iii11iIi1 = ''
    except :
     IiI1iii11iIi1 = ''
     if 84 - 84: OoOoOO00 % ooOoO0o - OoOoOO00 . o0oOOo0O0Ooo
    try :
     credits = re . compile ( '<credits>(.*?)</credits>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if credits == None :
      if 5 - 5: OoOoOO00 * I1Ii111 - I1ii11iIi11i / iIii1I11I1II1 % oO0o + IiII
      credits = ''
    except :
     credits = ''
     if 51 - 51: I1Ii111 * II111iiii % ooOoO0o
    try :
     oO0 = re . compile ( '<year>(.*?)</year>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if oO0 == None :
      if 75 - 75: IiII % I11i
      oO0 = ''
    except :
     oO0 = ''
     if 94 - 94: oO0o / I1IiiI / ooOoO0o % OOooOOo
    try :
     OooOOO0O00 = re . compile ( '<director>(.*?)</director>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if OooOOO0O00 == None :
      if 29 - 29: o0oOOo0O0Ooo % iIii1I11I1II1 . OoooooooOO % OoooooooOO % II111iiii / iII111i
      OooOOO0O00 = ''
    except :
     OooOOO0O00 = ''
     if 70 - 70: i11iIiiIii % iII111i
    try :
     I11Ii11iI1 = re . compile ( '<writer>(.*?)</writer>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if I11Ii11iI1 == None :
      if 39 - 39: I1IiiI * i11iIiiIii - oO0o / IiII % I1Ii111 % I11i
      I11Ii11iI1 = ''
    except :
     I11Ii11iI1 = ''
     if 65 - 65: oO0o - ooOoO0o % OoooooooOO / OoooooooOO % OoooooooOO
    try :
     oOoOoo0 = re . compile ( '<duration>(.*?)</duration>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if oOoOoo0 == None :
      if 16 - 16: I1IiiI
      oOoOoo0 = ''
    except :
     oOoOoo0 = ''
     if 6 - 6: OOooOOo - I1ii11iIi11i + Ii1I + i1IIi / O0 / o0oOOo0O0Ooo
    try :
     Iiii1I1 = re . compile ( '<premiered>(.*?)</premiered>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if Iiii1I1 == None :
      if 83 - 83: OOooOOo . I1Ii111 + oO0o - OOooOOo * I1Ii111 / I1Ii111
      Iiii1I1 = ''
    except :
     Iiii1I1 = ''
     if 39 - 39: I1Ii111 / Oo0Ooo % OoO0O00 % i11iIiiIii
    try :
     o0o0Ooo0 = re . compile ( '<studio>(.*?)</studio>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if o0o0Ooo0 == None :
      if 78 - 78: iIii1I11I1II1 + I11i - Ii1I * I1Ii111 - OoooooooOO % OoOoOO00
      o0o0Ooo0 = ''
    except :
     o0o0Ooo0 = ''
     if 34 - 34: O0
    try :
     OooOOOo0 = re . compile ( '<rate>(.*?)</rate>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if OooOOOo0 == None :
      if 54 - 54: Ii1I - I11i - I1Ii111 . iIii1I11I1II1
      OooOOOo0 = ''
    except :
     OooOOOo0 = ''
     if 79 - 79: Ii1I . OoO0O00
    try :
     IIiI1I1 = re . compile ( '<originaltitle>(.*?)</originaltitle>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if IIiI1I1 == None :
      if 15 - 15: Ii1I * Oo0Ooo % I1ii11iIi11i * iIii1I11I1II1 - i11iIiiIii
      IIiI1I1 = ''
    except :
     IIiI1I1 = ''
     if 60 - 60: I1IiiI * I1Ii111 % OoO0O00 + oO0o
    try :
     o0oo = re . compile ( '<country>(.*?)</country>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if o0oo == None :
      if 80 - 80: I1Ii111 * OoOoOO00 * II111iiii - O0 . OoOoOO00 % I1IiiI
      o0oo = ''
    except :
     o0oo = ''
     if 13 - 13: oO0o . I1IiiI * oO0o + I1IiiI
    try :
     OoOooo = re . compile ( '<rating>(.*?)</rating>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if OoOooo == None :
      if 74 - 74: iIii1I11I1II1 * IiII % OoOoOO00
      OoOooo = ''
    except :
     OoOooo = ''
     if 36 - 36: OoooooooOO - oO0o
    try :
     OOooo = re . compile ( '<userrating>(.*?)</userrating>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if OOooo == None :
      if 51 - 51: I1ii11iIi11i
      OOooo = ''
    except :
     OOooo = ''
     if 41 - 41: I1ii11iIi11i * ooOoO0o - Ii1I + Oo0Ooo
    try :
     IiIIIII11I = re . compile ( '<votes>(.*?)</votes>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if IiIIIII11I == None :
      if 17 - 17: OoooooooOO + OOooOOo * I11i * OoOoOO00
      IiIIIII11I = ''
    except :
     IiIIIII11I = ''
     if 36 - 36: O0 + Oo0Ooo
    try :
     iIIIi1i1I11i = re . compile ( '<aired>(.*?)</aired>' , re . MULTILINE | re . DOTALL ) . findall ( i111iiI1ii ) [ 0 ]
     if iIIIi1i1I11i == None :
      if 55 - 55: Oo0Ooo - OOooOOo
      iIIIi1i1I11i = ''
    except :
     iIIIi1i1I11i = ''
     if 84 - 84: I1Ii111 + Oo0Ooo - OoOoOO00 * OoOoOO00
    try :
     if I1i1i == '' :
      if 61 - 61: OoooooooOO . oO0o . OoooooooOO / Oo0Ooo
      if 72 - 72: i1IIi
      OOoo0oo ( I1i11 . encode ( 'utf-8' , 'ignore' ) , '' , 1 , ii111i , o0O0O0 , oO0O , OOo00 , IiI1iii11iIi1 , credits , oO0 , OooOOO0O00 , I11Ii11iI1 , oOoOoo0 , Iiii1I1 , o0o0Ooo0 , OooOOOo0 , IIiI1I1 , o0oo , OoOooo , OOooo , IiIIIII11I , iIIIi1i1I11i )
     else :
      if 58 - 58: oO0o
      if 4 - 4: II111iiii . ooOoO0o / I1ii11iIi11i - i11iIiiIii
      if O0OooO == 'false' and re . search ( "ADULTOS" , I1i11 , re . IGNORECASE ) and I1i11 . find ( '(+18)' ) >= 0 :
       pass
      else :
       OOoo0oo ( I1i11 . encode ( 'utf-8' , 'ignore' ) , I1i1i , 1 , ii111i , o0O0O0 , oO0O , OOo00 , IiI1iii11iIi1 , credits , oO0 , OooOOO0O00 , I11Ii11iI1 , oOoOoo0 , Iiii1I1 , o0o0Ooo0 , OooOOOo0 , IIiI1I1 , o0oo , OoOooo , OOooo , IiIIIII11I , iIIIi1i1I11i )
    except :
     o0OOoo0OO0OOO ( '[COLOR red]Erro ao Carregar os dados![/COLOR]' )
  elif re . search ( "#EXTM3U" , II111Ii1i1 ) or re . search ( "#EXTINF" , II111Ii1i1 ) :
   OoO00 = II111Ii1i1 . rstrip ( )
   O00O = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( OoO00 )
   for I11iIi1II , ooo0OO , iIi1IiI in O00O :
    if 'tvg-logo' in I11iIi1II :
     ii111i = iI11I ( I11iIi1II , 'tvg-logo=[\'"](.*?)[\'"]' )
     if ii111i :
      if ii111i . startswith ( 'http' ) :
       ii111i = ii111i
       if 14 - 14: IiII % oO0o % Oo0Ooo - i11iIiiIii
       if 53 - 53: Ii1I % Oo0Ooo
       if 59 - 59: OOooOOo % iIii1I11I1II1 . i1IIi + II111iiii * IiII
       if 41 - 41: Ii1I % I1ii11iIi11i
      else :
       ii111i = ''
     else :
      ii111i = ''
    else :
     ii111i = ''
     if 12 - 12: OOooOOo
    if 'group-title' in I11iIi1II :
     ooOo0O = iI11I ( I11iIi1II , 'group-title=[\'"](.*?)[\'"]' )
    else :
     ooOo0O = ''
     if 37 - 37: Ii1I % OoO0O00
    try :
     if 79 - 79: I1ii11iIi11i + I1IiiI / I1IiiI
     if o0OO0 == 'false' and re . search ( "4K" , ooo0OO ) :
      pass
     elif oOo00Oo0o0Oo == 'false' and re . search ( "FHD" , ooo0OO ) :
      pass
     elif I1I1 == 'false' and re . search ( "HD" , ooo0OO ) and not re . search ( "FHD" , ooo0OO ) :
      pass
     elif O0iIi1IiII == 'false' and re . search ( "SD" , ooo0OO ) :
      pass
     elif O0iIi1IiII == 'false' and not re . search ( "SD" , ooo0OO ) and not re . search ( "HD" , ooo0OO ) and not re . search ( "4K" , ooo0OO ) :
      pass
      if 71 - 71: OOooOOo * OoO0O00 % OoooooooOO % OoO0O00 / I1IiiI
     elif int ( I1iooo ) == 1 and re . search ( "Praia" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 1 and not re . search ( "SPORTV" , ooo0OO , re . IGNORECASE ) and not re . search ( "DAZN" , ooo0OO , re . IGNORECASE ) and not re . search ( "ESPN Brasil" , ooo0OO , re . IGNORECASE ) and not re . search ( "PREMIERE" , ooo0OO , re . IGNORECASE ) and not re . search ( "COPA" , ooo0OO , re . IGNORECASE ) :
      pass
      if 56 - 56: OoooooooOO % i11iIiiIii * iIii1I11I1II1 . OoO0O00 * O0
     elif int ( I1iooo ) == 2 and re . search ( "Praia" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 2 and not re . search ( "Band Sports" , ooo0OO , re . IGNORECASE ) and not re . search ( "Combate" , ooo0OO , re . IGNORECASE ) and not re . search ( "Fox Sports" , ooo0OO , re . IGNORECASE ) and not re . search ( "SPORTV" , ooo0OO , re . IGNORECASE ) and not re . search ( "DAZN" , ooo0OO , re . IGNORECASE ) and not re . search ( "ESPN" , ooo0OO , re . IGNORECASE ) and not re . search ( "PREMIERE" , ooo0OO , re . IGNORECASE ) and not re . search ( "COPA" , ooo0OO , re . IGNORECASE ) :
      pass
      if 23 - 23: i11iIiiIii
     elif int ( I1iooo ) == 3 and re . search ( "Sports" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 3 and re . search ( "XY Max" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 3 and not re . search ( "AMC" , ooo0OO , re . IGNORECASE ) and not re . search ( "Canal Brasil" , ooo0OO , re . IGNORECASE ) and not re . search ( "Cinemax" , ooo0OO , re . IGNORECASE ) and not re . search ( "HBO" , ooo0OO , re . IGNORECASE ) and not re . search ( "Max" , ooo0OO , re . IGNORECASE ) and not re . search ( "Megapix" , ooo0OO , re . IGNORECASE ) and not re . search ( "Paramount" , ooo0OO , re . IGNORECASE ) and not re . search ( "SPACE" , ooo0OO , re . IGNORECASE ) and not re . search ( "TCM" , ooo0OO , re . IGNORECASE ) and not re . search ( "Telecine Action" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Action" , ooo0OO , re . IGNORECASE ) and not re . search ( "Telecine Cult" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Cult" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Cult" , ooo0OO , re . IGNORECASE ) and not re . search ( "Telecine Fun" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Fun" , ooo0OO , re . IGNORECASE ) and not re . search ( "Telecine Pipoca" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Pipoca" , ooo0OO , re . IGNORECASE ) and not re . search ( "Telecine Premium" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Premium" , ooo0OO , re . IGNORECASE ) and not re . search ( "Telecine Touch" , ooo0OO , re . IGNORECASE ) and not re . search ( "TC Touch" , ooo0OO , re . IGNORECASE ) and not re . search ( "TNT" , ooo0OO , re . IGNORECASE ) and not re . search ( "A&E" , ooo0OO , re . IGNORECASE ) and not re . search ( "AXN" , ooo0OO , re . IGNORECASE ) and not re . search ( "AXN" , ooo0OO , re . IGNORECASE ) and not re . search ( "FOX" , ooo0OO , re . IGNORECASE ) and not re . search ( "FX" , ooo0OO , re . IGNORECASE ) and not re . search ( "SONY" , ooo0OO , re . IGNORECASE ) and not re . search ( "Studio Universal" , ooo0OO , re . IGNORECASE ) and not re . search ( "SyFy" , ooo0OO , re . IGNORECASE ) and not re . search ( "Universal Channel" , ooo0OO , re . IGNORECASE ) and not re . search ( "Universal TV" , ooo0OO , re . IGNORECASE ) and not re . search ( "Warner" , ooo0OO , re . IGNORECASE ) :
      pass
      if 39 - 39: o0oOOo0O0Ooo - I1ii11iIi11i % iII111i * OoO0O00 - OOooOOo / iII111i
     elif int ( I1iooo ) == 4 and re . search ( "FM" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 4 and not re . search ( "Baby TV" , ooo0OO , re . IGNORECASE ) and not re . search ( "BOOMERANG" , ooo0OO , re . IGNORECASE ) and not re . search ( "CARTOON NETWORK" , ooo0OO , re . IGNORECASE ) and not re . search ( "DISCOVERY KIDS" , ooo0OO , re . IGNORECASE ) and not re . search ( "DISNEY" , ooo0OO , re . IGNORECASE ) and not re . search ( "GLOOB" , ooo0OO , re . IGNORECASE ) and not re . search ( "NAT GEO KIDS" , ooo0OO , re . IGNORECASE ) and not re . search ( "NICKELODEON" , ooo0OO , re . IGNORECASE ) and not re . search ( "NICK JR" , ooo0OO , re . IGNORECASE ) and not re . search ( "PLAYKIDS" , ooo0OO , re . IGNORECASE ) and not re . search ( "TOONCAST" , ooo0OO , re . IGNORECASE ) and not re . search ( "ZOOMOO" , ooo0OO , re . IGNORECASE ) :
      pass
      if 29 - 29: I1ii11iIi11i
     elif int ( I1iooo ) == 5 and re . search ( "Kids" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 5 and not re . search ( "Discovery" , ooo0OO , re . IGNORECASE ) and not re . search ( "H2 HD" , ooo0OO , re . IGNORECASE ) and not re . search ( "H2 SD" , ooo0OO , re . IGNORECASE ) and not re . search ( "H2 FHD" , ooo0OO , re . IGNORECASE ) and not re . search ( "History" , ooo0OO , re . IGNORECASE ) and not re . search ( "Nat Geo Wild" , ooo0OO , re . IGNORECASE ) and not re . search ( "National Geographic" , ooo0OO , re . IGNORECASE ) :
      pass
      if 52 - 52: i11iIiiIii / i1IIi
     elif int ( I1iooo ) == 6 and re . search ( "Brasileirinhas" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 6 and re . search ( "News" , ooo0OO , re . IGNORECASE ) or int ( I1iooo ) == 6 and re . search ( "Sat" , ooo0OO , re . IGNORECASE ) or int ( I1iooo ) == 6 and re . search ( "FM" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 6 and not re . search ( "Globo" , ooo0OO , re . IGNORECASE ) and not re . search ( "RECORD" , ooo0OO , re . IGNORECASE ) and not re . search ( "RedeTV" , ooo0OO , re . IGNORECASE ) and not re . search ( "Rede Vida" , ooo0OO , re . IGNORECASE ) and not re . search ( "SBT" , ooo0OO , re . IGNORECASE ) and not re . search ( "TV Brasil" , ooo0OO , re . IGNORECASE ) and not re . search ( "TV Cultura" , ooo0OO , re . IGNORECASE ) and not re . search ( "TV Diario" , ooo0OO , re . IGNORECASE ) and not re . search ( "BAND" , ooo0OO , re . IGNORECASE ) :
      pass
      if 1 - 1: ooOoO0o
     elif int ( I1iooo ) == 7 and not re . search ( "BBB" , ooo0OO , re . IGNORECASE ) and not re . search ( "Big Brother Brasil" , ooo0OO , re . IGNORECASE ) and not re . search ( "A Fazenda" , ooo0OO , re . IGNORECASE ) :
      pass
      if 78 - 78: I1ii11iIi11i + I11i - O0
     elif int ( I1iooo ) == 8 and re . search ( "FM" , ooo0OO , re . IGNORECASE ) :
      pass
     elif int ( I1iooo ) == 8 and not re . search ( "CNN" , ooo0OO , re . IGNORECASE ) and not re . search ( "NEWS" , ooo0OO , re . IGNORECASE ) :
      pass
     elif ii1Ii1IiIIi == 'false' and re . search ( "Adult" , ooOo0O , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "ADULT" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Blue Hustler" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "PlayBoy" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Redlight" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Sextreme" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "SexyHot" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Venus" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "AST TV" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "ASTTV" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "AST.TV" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "BRAZZERS" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "CANDY" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "CENTOXCENTO" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "DORCEL" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "EROXX" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "PASSION" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "PENTHOUSE" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "PINK-O" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "PINK O" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "PRIVATE" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "RUSNOCH" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "SCT" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "SEXT6SENSO" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "SHALUN TV" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "VIVID RED" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Porn" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "XY Plus" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "XY Mix" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "XY Mad" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "XXL" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Desire" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Bizarre" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Sexy HOT" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Reality Kings" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'false' and re . search ( "Prive TV" , ooo0OO , re . IGNORECASE ) or ii1Ii1IiIIi == 'f'love = ''god = '2 - 62: i11iIiiIii + OoOoOO00 + i1IIi
  for oOOoO0O in regex :
   if 'page' in oOOoO0O :
    ii111I = re . compile ( '<page>(.*?)</page>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
    if ii111I != [ ] :
     ii111I = ii111I [ 0 ]
    else :
     ii111I = ''
   else :
    ii111I = ''
   if 'expres' in ooO00O :
    OO00o0oOO = re . compile ( '<expres>(.*?)</expres>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
    if OO00o0oOO != [ ] :
     OO00o0oOO = OO00o0oOO [ 0 ]
    else :
     OO00o0oOO = ''
   else :
    OO00o0oOO = ''
   if '$doregex' in ii111I and ii111I != '' and not '$doregex' in OO00o0oOO :
    I1i11 = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
    if I1i11 != [ ] :
     I1i11 = I1i11 [ 0 ]
    else :
     I1i11 = ''
    if ii111I != '' :
     i1IiiiiiIiII = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( ii111I )
     if i1IiiiiiIiII != [ ] :
      for I1IiiIiii1 in i1IiiiiiIiII :
       ii111I = ii111I . replace ( '$doregex[' + I1IiiIiii1 + ']' , O000oO0o000 [ I1IiiIiii1 ] )
       if 26 - 26: o0oOOo0O0Ooo . iIii1I11I1II1
      OoO0ooO = urllib2 . Request ( ii111I )
      if 'referer' in ooO00O :
       ooooO0 = re . compile ( '<referer>(.*?)</referer>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
       if ooooO0 != [ ] :
        OoO0ooO . add_header ( 'Referer' , ooooO0 [ 0 ] )
      if 'accept' in ooO00O :
       Iiii111 = re . compile ( '<accept>(.*?)</accept>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
       if Iiii111 != [ ] :
        OoO0ooO . add_header ( 'Accept' , Iiii111 [ 0 ] )
      if 'agent' in ooO00O :
       Ooooo = re . compile ( '<agent>(.*?)</agent>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
       if Ooooo != [ ] :
        OoO0ooO . add_header ( 'User-agent' , Ooooo [ 0 ] )
       else :
        OoO0ooO . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
      else :
       OoO0ooO . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
       if 67 - 67: Oo0Ooo / O0
      if 'setcookie' in ooO00O :
       OO00o = re . compile ( '<setcookie>(.*?)</setcookie>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
       if OO00o != [ ] :
        OoO0ooO . add_header ( 'Cookie' , OO00o [ 0 ] )
      if 'proxy' in ooO00O :
       try :
        if 'http:' in oO0O0o0o00 :
         IiiI11i1I1ii1i1 = oO0O0o0o00 . split ( 'http://' )
         if 88 - 88: OoOoOO00 - OOooOOo
         oO0O0o0o00 = urllib2 . ProxyHandler ( { "http" : IiiI11i1I1ii1i1 [ 1 ] } )
         Ooi1I11 = urllib2 . HTTPBasicAuthHandler ( )
         oOo00 = urllib2 . build_opener ( oO0O0o0o00 , Ooi1I11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( oOo00 )
        elif 'https:' in oO0O0o0o00 :
         IiiI11i1I1ii1i1 = oO0O0o0o00 . split ( 'https://' )
         oO0O0o0o00 = urllib2 . ProxyHandler ( { "https" : IiiI11i1I1ii1i1 [ 1 ] } )
         Ooi1I11 = urllib2 . HTTPBasicAuthHandler ( )
         oOo00 = urllib2 . build_opener ( oO0O0o0o00 , Ooi1I11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( oOo00 )
       except :
        pass
      if 'post' in ooO00O :
       iII11ii1ii = re . compile ( '<post>(.*?)</post>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( oOOoO0O )
       if iII11ii1ii != [ ] :
        oOO0OOOo000o = iII11ii1ii
        OO00oo = oOO0OOOo000o . split ( ',' )
        iII11ii1ii = { }
        for O0Oo0O0 in OO00oo :
         I1IiiIiii1 = O0Oo0O0 . split ( ':' ) [ 0 ] ;
         i11i = O0Oo0O0 . split ( ':' ) [ 1 ] ;
         iII11ii1ii [ I1IiiIiii1 ] = i11i
        iII11ii1ii = urllib . urlencode ( iII11ii1ii ) . encode ( )
        O000 = urllib2 . urlopen ( OoO0ooO , iII11ii1ii )
      else :
       O000 = urllib2 . urlopen ( OoO0ooO )
      II111Ii1i1 = O000 . read ( ) . decode ( 'utf8' )
    else :
     II111Ii1i1 = ''
    if OO00o0oOO . startswith ( '$pyFunction:' ) :
     try :
      oo0OoOO0o0o = OO00o0oOO . split ( '$pyFunction:' ) [ 1 ]
      OO = i1iiI ( oo0OoOO0o0o )
     except :
      OO = ''
    elif II111Ii1i1 != '' and OO00o0oOO != '' :
     OO0OOO00 = re . compile ( OO00o0oOO ) . findall ( II111Ii1i1 )
     if OO0OOO00 != [ ] :
      OO = OO0OOO00 [ 0 ]
     else :
      OO = ''
    else :
     OO = ''
    if OO != '' :
     O000oO0o000 [ I1i11 ] = OO
     if 63 - 63: IiII * OoooooooOO
     if 19 - 19: IiII - o0oOOo0O0Ooo . iIii1I11I1II1 . OoOoOO00 / OOooOOo
  for OOO0O00Oo in regex :
   if 'page' in OOO0O00Oo :
    ii111I = re . compile ( '<page>(.*?)</page>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
    if ii111I != [ ] :
     ii111I = ii111I [ 0 ]
    else :
     ii111I = ''
   else :
    ii111I = ''
   if 'expres' in ooO00O :
    OO00o0oOO = re . compile ( '<expres>(.*?)</expres>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
    if OO00o0oOO != [ ] :
     OO00o0oOO = OO00o0oOO [ 0 ]
    else :
     OO00o0oOO = ''
   else :
    OO00o0oOO = ''
    if 13 - 13: iIii1I11I1II1
   if not '$doregex' in ii111I and ii111I != '' and '$doregex' in OO00o0oOO :
    I1i11 = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
    if I1i11 != [ ] :
     I1i11 = I1i11 [ 0 ]
    else :
     I1i11 = ''
    if ii111I != '' :
     i1IiiiiiIiII = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( OO00o0oOO )
     if i1IiiiiiIiII != [ ] :
      for I1IiiIiii1 in i1IiiiiiIiII :
       OO00o0oOO = OO00o0oOO . replace ( '$doregex[' + I1IiiIiii1 + ']' , O000oO0o000 [ I1IiiIiii1 ] )
       if 2 - 2: i1IIi * oO0o - oO0o + OoooooooOO % OoOoOO00 / OoOoOO00
      OoO0ooO = urllib2 . Request ( ii111I )
      if 'referer' in ooO00O :
       ooooO0 = re . compile ( '<referer>(.*?)</referer>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
       if ooooO0 != [ ] :
        OoO0ooO . add_header ( 'Referer' , ooooO0 [ 0 ] )
      if 'accept' in ooO00O :
       Iiii111 = re . compile ( '<accept>(.*?)</accept>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
       if Iiii111 != [ ] :
        OoO0ooO . add_header ( 'Accept' , Iiii111 [ 0 ] )
      if 'agent' in ooO00O :
       Ooooo = re . compile ( '<agent>(.*?)</agent>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
       if Ooooo != [ ] :
        OoO0ooO . add_header ( 'User-agent' , Ooooo [ 0 ] )
       else :
        OoO0ooO . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
      else :
       OoO0ooO . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
       if 3 - 3: OoooooooOO
      if 'setcookie' in ooO00O :
       OO00o = re . compile ( '<setcookie>(.*?)</setcookie>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
       if OO00o != [ ] :
        OoO0ooO . add_header ( 'Cookie' , OO00o [ 0 ] )
      if 'proxy' in ooO00O :
       try :
        if 'http:' in oO0O0o0o00 :
         IiiI11i1I1ii1i1 = oO0O0o0o00 . split ( 'http://' )
         if 71 - 71: IiII + i1IIi - iII111i - i11iIiiIii . I11i - ooOoO0o
         oO0O0o0o00 = urllib2 . ProxyHandler ( { "http" : IiiI11i1I1ii1i1 [ 1 ] } )
         Ooi1I11 = urllib2 . HTTPBasicAuthHandler ( )
         oOo00 = urllib2 . build_opener ( oO0O0o0o00 , Ooi1I11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( oOo00 )
        elif 'https:' in oO0O0o0o00 :
         IiiI11i1I1ii1i1 = oO0O0o0o00 . split ( 'https://' )
         oO0O0o0o00 = urllib2 . ProxyHandler ( { "https" : IiiI11i1I1ii1i1 [ 1 ] } )
         Ooi1I11 = urllib2 . HTTPBasicAuthHandler ( )
         oOo00 = urllib2 . build_opener ( oO0O0o0o00 , Ooi1I11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( oOo00 )
       except :
        pass
      if 'post' in ooO00O :
       iII11ii1ii = re . compile ( '<post>(.*?)</post>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OOO0O00Oo )
       if iII11ii1ii != [ ] :
        oOO0OOOo000o = iII11ii1ii
        OO00oo = oOO0OOOo000o . split ( ',' )
        iII11ii1ii = { }
        for O0Oo0O0 in OO00oo :
         I1IiiIiii1 = O0Oo0O0 . split ( ':' ) [ 0 ] ;
         i11i = O0Oo0O0 . split ( ':' ) [ 1 ] ;
         iII11ii1ii [ I1IiiIiii1 ] = i11i
        iII11ii1ii = urllib . urlencode ( iII11ii1ii ) . encode ( )
        O000 = urllib2 . urlopen ( OoO0ooO , iII11ii1ii )
      else :
       O000 = urllib2 . urlopen ( OoO0ooO )
      II111Ii1i1 = O000 . read ( ) . decode ( 'utf8' )
    else :
     II111Ii1i1 = ''
    if OO00o0oOO . startswith ( '$pyFunction:' ) :
     try :
      oo0OoOO0o0o = OO00o0oOO . split ( '$pyFunction:' ) [ 1 ]
      OO = i1iiI ( oo0OoOO0o0o )
     except :
      OO = ''
    elif II111Ii1i1 != '' and OO00o0oOO != '' :
     OO0OOO00 = re . compile ( OO00o0oOO ) . findall ( II111Ii1i1 )
     if OO0OOO00 != [ ] :
      OO = OO0OOO00 [ 0 ]
     else :
      OO = ''
    else :
     OO = ''
    if OO != '' :
     O000oO0o000 [ I1i11 ] = OO
     if 85 - 85: I1ii11iIi11i - OoOoOO00 / I1ii11iIi11i + OOooOOo - iII111i
  for IIii1III in regex :
   if 'page' in IIii1III :
    ii111I = re . compile ( '<page>(.*?)</page>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIii1III )
    if ii111I != [ ] :
     ii111I = ii111I [ 0 ]
    else :
     ii111I = ''
   else :
    ii111I = ''
   if 'expres' in ooO00O :
    OO00o0oOO = re . compile ( '<expres>(.*?)</expres>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIii1III )
    if OO00o0oOO != [ ] :
     OO00o0oOO = OO00o0oOO [ 0 ]
    else :
     OO00o0oOO = ''
   else :
    OO00o0oOO = ''
    if 94 - 94: i11iIiiIii % OoooooooOO / I1IiiI
   if not ii111I != '' and '$doregex' in OO00o0oOO :
    I1i11 = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIii1III )
    if I1i11 != [ ] :
     I1i11 = I1i11 [ 0 ]
    else :
     I1i11 = ''
    i1IiiiiiIiII = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( OO00o0oOO )
    if i1IiiiiiIiII != [ ] :
     for I1IiiIiii1 in i1IiiiiiIiII :
      OO00o0oOO = OO00o0oOO . replace ( '$doregex[' + I1IiiIiii1 + ']' , O000oO0o000 [ I1IiiIiii1 ] )
    if OO00o0oOO . startswith ( '$pyFunction:' ) :
     try :
      oo0OoOO0o0o = OO00o0oOO . split ( '$pyFunction:' ) [ 1 ]
      OO = i1iiI ( oo0OoOO0o0o )
     except :
      OO = ''
    else :
     OO = ''
    if OO != '' :
     O000oO0o000 [ I1i11 ] = OO
  try :
   if '$doregex' in url :
    i1IiiiiiIiII = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( url )
    if i1IiiiiiIiII != [ ] :
     for I1IiiIiii1 in i1IiiiiiIiII :
      url = url . replace ( '$doregex[' + I1IiiIiii1 + ']' , O000oO0o000 [ I1IiiIiii1 ] )
  except :
   pass
 return url
 if 24 - 24: I1IiiI * oO0o
 if 85 - 85: II111iiii . ooOoO0o % OOooOOo % I11i
def Ii1 ( link , regex ) :
 if 80 - 80: oO0o * I11i / iIii1I11I1II1 % oO0o / iIii1I11I1II1
 if not 'false' in str ( regex ) and '$doregex' in link :
  Iiii1 = OO00OoI1iIIiiiI ( link , regex )
 else :
  Iiii1 = link
 try :
  if not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . startswith ( 'https://drive.google.com' ) == True :
   if 36 - 36: iII111i
   O000oO0o000 = Iiii1 . replace ( 'http' , 'plugin://plugin.video.gdrive?mode=streamURL&amp;url=http' )
   if 90 - 90: O0
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . startswith ( 'http://drive.google.com' ) == True :
   if 44 - 44: i1IIi . I1IiiI / i11iIiiIii + IiII
   O000oO0o000 = Iiii1 . replace ( 'http' , 'plugin://plugin.video.gdrive?mode=streamURL&amp;url=http' )
   if 27 - 27: OOooOOo
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'streamtape.com' ) >= 0 :
   link = ooOOooo0ooo00 ( Iiii1 )
   O000oO0o000 = link
   if 52 - 52: I1Ii111 % OoOoOO00 + iIii1I11I1II1 * oO0o . Ii1I
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'ultracine_page' ) >= 0 :
   link = OoO0oO ( Iiii1 )
   O000oO0o000 = link
   if 95 - 95: iIii1I11I1II1 . IiII - OoooooooOO * OoO0O00 / o0oOOo0O0Ooo
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'netcine2_page' ) >= 0 :
   link = O0o0O ( Iiii1 )
   O000oO0o000 = link
   if 74 - 74: oO0o
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'series_canaismax' ) >= 0 :
   iII1i1IIiI1I = Iiii1 . replace ( 'idioma;' , 'idioma' )
   link = iiiii11I1 ( iII1i1IIiI1I )
   O000oO0o000 = link
   if 67 - 67: Ii1I
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'filmes_canaismax' ) >= 0 :
   iII1i1IIiI1I = Iiii1 . replace ( 'idioma;' , 'idioma' )
   link = I1ii11I ( iII1i1IIiI1I )
   O000oO0o000 = link
   if 43 - 43: OoO0O00 % OoO0O00
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'eu-central-1.edge.mycdn.live' ) >= 0 :
   if 46 - 46: Oo0Ooo % iIii1I11I1II1 . iII111i . O0 * ooOoO0o / OoooooooOO
   O000oO0o000 = Iiii1
   if 7 - 7: oO0o - O0 * I11i - o0oOOo0O0Ooo - II111iiii
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( 'canaismax_page' ) >= 0 :
   iiI1Ii11II1I = Oo00oO0oOO ( Iiii1 )
   O000oO0o000 = iiI1Ii11II1I + '|Referer=https://canaismax.com/|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36'
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . startswith ( 'https://youtube.com/' ) == True or Iiii1 . startswith ( 'https://www.youtube.com/' ) == True :
   try :
    Ii11iiI1 = I1iIII1IiiI ( Iiii1 )
    if Ii11iiI1 == None :
     if 71 - 71: o0oOOo0O0Ooo / OOooOOo % OOooOOo
     O000oO0o000 = ''
    else :
     O000oO0o000 = Ii11iiI1
   except :
    O000oO0o000 = ''
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . startswith ( 'https://photos.app' ) == True :
   try :
    II111Ii1i1 = O00oO0 ( Iiii1 , 'https://photos.google.com/' )
    iii11I111 = re . compile ( '<meta property="og:video" content="(.+?)"' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( II111Ii1i1 )
    if iii11I111 != [ ] :
     O000oO0o000 = iii11I111 [ 0 ] . replace ( '-m18' , '-m22' )
    else :
     O000oO0o000 = ''
   except :
    O000oO0o000 = ''
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . startswith ( 'magnet:?xt=' ) == True :
   O000oO0o000 = 'plugin://plugin.video.elementum/play?uri=' + Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = 'plugin://plugin.video.elementum/play?uri=' + Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.mp4' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.mkv' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.wmv' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.wma' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.avi' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.mp3' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.ac3' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) and Iiii1 . find ( '.rmvb' ) >= 0 and not Iiii1 . startswith ( 'magnet:?xt=' ) == True and not Iiii1 . find ( '.torrent' ) >= 0 :
   O000oO0o000 = Iiii1
  elif not Iiii1 . startswith ( "plugin://plugin" ) :
   O000oO0o000 = Iiii1
  elif Iiii1 . startswith ( "plugin://plugin" ) :
   O000oO0o000 = Iiii1
  return O000oO0o000
 except :
  O000oO0o000 = ''
  return O000oO0o000
  if 89 - 89: OoooooooOO + i11iIiiIii / I11i + iIii1I11I1II1 % ooOoO0o
  if 29 - 29: I1ii11iIi11i
  if 53 - 53: i11iIiiIii . I1ii11iIi11i % Ii1I / ooOoO0o % iIii1I11I1II1
  if 6 - 6: Oo0Ooo - OOooOOo . iIii1I11I1II1
  if 30 - 30: ooOoO0o + ooOoO0o % IiII - o0oOOo0O0Ooo - I1ii11iIi11i
def i111IiiI1Ii ( ) :
 try :
  try :
   OOOooo = json . loads ( open ( I1i1I1II ) . read ( ) )
  except :
   OOOooo = ''
  OooOOOOOo = len ( OOOooo )
  if int ( OooOOOOOo ) > 0 :
   for I11Iii1 in OOOooo :
    I1i11 = I11Iii1 [ 0 ]
    oO00O0 = I11Iii1 [ 1 ]
    try :
     i1I11ii = base64 . b64decode ( base64 . b16decode ( oO00O0 ) )
    except :
     i1I11ii = oO00O0
    try :
     I1iI1I1 = i1I11ii . decode ( 'utf-8' )
    except :
     I1iI1I1 = i1I11ii
     if 72 - 72: I11i
    oO00 = I11Iii1 [ 2 ]
    ooo0 = I11Iii1 [ 3 ]
    try :
     IIiIiiI1i = base64 . b64decode ( base64 . b16decode ( ooo0 ) )
    except :
     IIiIiiI1i = ooo0
    try :
     IIi = IIiIiiI1i . decode ( 'utf-8' )
    except :
     IIi = IIiIiiI1i
    OoO0O0oO00 = I11Iii1 [ 4 ]
    try :
     o0O0O0 = I11Iii1 [ 5 ]
     if o0O0O0 == None :
      raise
    except :
     if iiI1 . getSetting ( 'use_thumb' ) == "true" :
      o0O0O0 = OoO0O0oO00
     else :
      o0O0O0 = O0I11i1i11i1I
    I1i11111i1i11 = I11Iii1 [ 6 ]
    if 90 - 90: iII111i / iIii1I11I1II1 + IiII + I1ii11iIi11i + I1Ii111 - Ii1I
    i1iIIIiiiI = I11Iii1 [ 7 ]
    if 48 - 48: Ii1I - OoOoOO00 - OoO0O00 + I1IiiI * Ii1I
    if oO00 == 0 :
     try :
      if 67 - 67: Oo0Ooo / ooOoO0o - IiII
      o0OOoo ( I1i11 . encode ( 'utf-8' , 'ignore' ) , I1iI1I1 , IIi , OoO0O0oO00 , o0O0O0 , I1i11111i1i11 . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
     except :
      pass
    elif oO00 == 11 or oO00 == 16 or oO00 == 17 or oO00 == 18 :
     try :
      i1I1iIi1IiI ( str ( I1i11 ) . encode ( 'utf-8' , 'ignore' ) , I1iI1I1 , oO00 , IIi , OoO0O0oO00 , o0O0O0 , I1i11111i1i11 . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , False , i1iIIIiiiI )
     except :
      pass
    elif oO00 > 0 and oO00 < 7 :
     try :
      OOoo0oo ( I1i11 . encode ( 'utf-8' , 'ignore' ) , I1iI1I1 , oO00 , OoO0O0oO00 , o0O0O0 , I1i11111i1i11 . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
     except :
      pass
    else :
     try :
      i1I1iIi1IiI ( I1i11 . encode ( 'utf-8' , 'ignore' ) , I1iI1I1 , oO00 , IIi , OoO0O0oO00 , o0O0O0 , I1i11111i1i11 . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
     except :
      pass
    xbmcplugin . setContent ( III1i1i , 'movies' )
    xbmcplugin . endOfDirectory ( III1i1i )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Nada Adicionado nos Favoritos' )
 except :
  pass
  if 74 - 74: I11i * Ii1I - I1ii11iIi11i % iIii1I11I1II1
  if 56 - 56: I1ii11iIi11i - O0
def o0o0oo0 ( name , url , fav_mode , subtitle , iconimage , fanart , description , regex ) :
 II1IIi1iII1i = [ ]
 if os . path . exists ( I1i1I1II ) == False :
  O0O = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
  o0oOOoooOOOOo = xbmcvfs . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , O0O ) )
  if os . path . exists ( o0oOOoooOOOOo ) == False :
   os . mkdir ( o0oOOoooOOOOo )
  xbmc . sleep ( 7 )
  II1IIi1iII1i . append ( ( name , url , fav_mode , subtitle , iconimage , fanart , description , regex ) )
  oo00oO0o = open ( I1i1I1II , "w" )
  oo00oO0o . write ( json . dumps ( II1IIi1iII1i ) )
  oo00oO0o . close ( )
  o0OOoo0OO0OOO ( 'Adicionado aos Favoritos do ' + __addonname__ )
  if 26 - 26: O0
 else :
  oo00oO0o = open ( I1i1I1II ) . read ( )
  II111Ii1i1 = json . loads ( oo00oO0o )
  II111Ii1i1 . append ( ( name , url , fav_mode , subtitle , iconimage , fanart , description , regex ) )
  iiiIi = open ( I1i1I1II , "w" )
  iiiIi . write ( json . dumps ( II111Ii1i1 ) )
  iiiIi . close ( )
  o0OOoo0OO0OOO ( 'Adicionado aos Favoritos do ' + __addonname__ )
  if 62 - 62: O0 . Oo0Ooo
  if 33 - 33: Oo0Ooo / iIii1I11I1II1 % i1IIi
  if 76 - 76: Ii1I + iIii1I11I1II1 + OoOoOO00 . OoO0O00
def i1i1 ( name ) :
 II111Ii1i1 = json . loads ( open ( I1i1I1II ) . read ( ) )
 for oOoooO000O in range ( len ( II111Ii1i1 ) ) :
  if II111Ii1i1 [ oOoooO000O ] [ 0 ] == name :
   del II111Ii1i1 [ oOoooO000O ]
   iiiIi = open ( I1i1I1II , "w" )
   iiiIi . write ( json . dumps ( II111Ii1i1 ) )
   iiiIi . close ( )
   break
 o0OOoo0OO0OOO ( 'Removido dos Favoritos do ' + __addonname__ )
 if 68 - 68: Ii1I - I1IiiI
 if 41 - 41: oO0o
def OOoo0oo ( name , url , mode , iconimage , fanart , description , genre , date , credits , year , director , writer , duration , premiered , studio , rate , originaltitle , country , rating , userrating , votes , aired , folder = True ) :
 if mode == 1 :
  if url > '' :
   if 21 - 21: ooOoO0o + o0oOOo0O0Ooo % I1Ii111 + i11iIiiIii + iII111i + II111iiii
   if 98 - 98: I1Ii111
   if 49 - 49: Oo0Ooo * oO0o + o0oOOo0O0Ooo - i11iIiiIii
   if 74 - 74: Oo0Ooo / iIii1I11I1II1 . II111iiii - OoO0O00
   if 62 - 62: OOooOOo / II111iiii + OoOoOO00 % ooOoO0o / OoOoOO00 + I1ii11iIi11i
   OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
  else :
   OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 else :
  OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 ooooOoO0O = xbmcgui . ListItem ( name )
 if folder :
  ooooOoO0O . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  ooooOoO0O . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if date != '' and date != None :
  description += '\n\nDate: %s' % date
 ooooOoO0O . setInfo ( 'video' , { 'title' : name , 'plot' : description } )
 try :
  ooooOoO0O . setInfo ( 'video' , { 'genre' : str ( genre ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'dateadded' : str ( date ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'credits' : str ( credits ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'director' : str ( director ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'writer' : str ( writer ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'duration' : int ( duration ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'premiered' : str ( premiered ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'studio' : str ( studio ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'mpaa' : str ( rate ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'originaltitle' : str ( originaltitle ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'country' : str ( country ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'rating' : float ( rating ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'userrating' : int ( userrating ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'votes' : str ( votes ) } )
 except :
  pass
 try :
  ooooOoO0O . setRating ( "imdb" , float ( rating ) , int ( votes ) , True )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'aired' : str ( aired ) } )
 except :
  pass
  if 2 - 2: i11iIiiIii - I1Ii111 + OoO0O00 % I11i * Ii1I
 if fanart > '' :
  ooooOoO0O . setProperty ( 'fanart_image' , fanart )
 else :
  ooooOoO0O . setProperty ( 'fanart_image' , '' + iIiiI1 + '/fanart.jpg' )
 try :
  Ooo000O00 = name . decode ( 'utf-8' )
 except :
  Ooo000O00 = name
 try :
  i1iI1Iiii1I = json . dumps ( Ooo000O00 )
 except :
  i1iI1Iiii1I = Ooo000O00
 try :
  I1iII = [ ]
  if i1 == 'true' and mode != 4 and mode != 7 and mode != 8 and mode != 9 and mode != 10 and mode != 12 and mode != 15 :
   if i1iI1Iiii1I in I1IIiiIiii :
    I1iII . append ( ( 'Remover dos Favoritos do ' + __addonname__ , 'RunPlugin(%s?mode=14&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    Iii1I1IIII = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=false&fav_mode=%s' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , '' , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) , str ( mode ) ) )
    I1iII . append ( ( 'Adicionar aos Favoritos do ' + __addonname__ , 'RunPlugin(%s)' % Iii1I1IIII ) )
  I1iII . append ( ( 'Informação' , 'RunPlugin(%s?mode=19&name=%s&description=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( description ) ) ) )
  ooooOoO0O . addContextMenuItems ( I1iII )
 except :
  pass
 xbmcplugin . addDirectoryItem ( handle = III1i1i , url = OoOo , listitem = ooooOoO0O , isFolder = folder )
 if 57 - 57: O0 - O0 . I1ii11iIi11i / o0oOOo0O0Ooo / Ii1I
def i1I1iIi1IiI ( name , url , mode , subtitle , iconimage , fanart , description , genre , date , credits , year , director , writer , duration , premiered , studio , rate , originaltitle , country , rating , userrating , votes , aired , folder = True , regex = False ) :
 if mode == 1 :
  if url > '' :
   OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
  else :
   OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 else :
  if regex :
   OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&subtitle=" + urllib . quote_plus ( subtitle ) + "&description=" + urllib . quote_plus ( description ) + "&regex=" + urllib . quote_plus ( regex )
  else :
   OoOo = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&subtitle=" + urllib . quote_plus ( subtitle ) + "&description=" + urllib . quote_plus ( description )
 ooooOoO0O = xbmcgui . ListItem ( name )
 if folder :
  ooooOoO0O . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  ooooOoO0O . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if mode == 16 or mode == 17 :
  ooooOoO0O . setProperty ( 'IsPlayable' , 'true' )
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 ooooOoO0O . setInfo ( 'video' , { 'title' : name , 'plot' : description } )
 try :
  ooooOoO0O . setInfo ( 'video' , { 'genre' : str ( genre ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'dateadded' : str ( date ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'credits' : str ( credits ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'director' : str ( director ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'writer' : str ( writer ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'duration' : int ( duration ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'premiered' : str ( premiered ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'studio' : str ( studio ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'mpaa' : str ( rate ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'originaltitle' : str ( originaltitle ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'country' : str ( country ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'rating' : float ( rating ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'userrating' : int ( userrating ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'votes' : str ( votes ) } )
 except :
  pass
 try :
  ooooOoO0O . setRating ( "imdb" , float ( rating ) , int ( votes ) , True )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'aired' : str ( aired ) } )
 except :
  pass
 if fanart > '' :
  ooooOoO0O . setProperty ( 'fanart_image' , fanart )
 else :
  ooooOoO0O . setProperty ( 'fanart_image' , '' + iIiiI1 + '/fanart.jpg' )
 try :
  Ooo000O00 = name . decode ( 'utf-8' )
 except :
  Ooo000O00 = name
 try :
  i1iI1Iiii1I = json . dumps ( Ooo000O00 )
 except :
  i1iI1Iiii1I = Ooo000O00
 try :
  I1iII = [ ]
  if i1 == 'true' and mode != 4 and mode != 7 and mode != 8 and mode != 9 and mode != 10 and mode != 12 and mode != 15 :
   if i1iI1Iiii1I in I1IIiiIiii :
    I1iII . append ( ( 'Remover dos Favoritos do ' + __addonname__ , 'RunPlugin(%s?mode=14&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    if regex :
     Iii1I1IIII = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=%s&fav_mode=%s' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( subtitle . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) , urllib . quote_plus ( regex ) , str ( mode ) ) )
    else :
     Iii1I1IIII = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=false&fav_mode=%s' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( subtitle . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) , str ( mode ) ) )
    I1iII . append ( ( 'Adicionar aos Favoritos do ' + __addonname__ , 'RunPlugin(%s)' % Iii1I1IIII ) )
  I1iII . append ( ( 'Informação' , 'RunPlugin(%s?mode=19&name=%s&description=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( description ) ) ) )
  ooooOoO0O . addContextMenuItems ( I1iII )
 except :
  pass
 xbmcplugin . addDirectoryItem ( handle = III1i1i , url = OoOo , listitem = ooooOoO0O , isFolder = folder )
 if 20 - 20: OOooOOo * II111iiii - OoOoOO00 - oO0o * I1Ii111
def o0OOoo ( name , url , subtitle , iconimage , fanart , description , genre , date , credits , year , director , writer , duration , premiered , studio , rate , originaltitle , country , rating , userrating , votes , aired , folder = False ) :
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 if iconimage > '' :
  ii111i = iconimage
 else :
  ii111i = 'DefaultVideo.png'
 ooooOoO0O = xbmcgui . ListItem ( name )
 ooooOoO0O . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : ii111i } )
 if url . startswith ( "plugin://plugin.video.f4mTester" ) :
  ooooOoO0O . setProperty ( 'IsPlayable' , 'false' )
 else :
  ooooOoO0O . setProperty ( 'IsPlayable' , 'true' )
 if fanart > '' :
  ooooOoO0O . setProperty ( 'fanart_image' , fanart )
 else :
  ooooOoO0O . setProperty ( 'fanart_image' , '' + iIiiI1 + '/fanart.jpg' )
 try :
  i1iI1Iiii1I = json . dumps ( name )
 except :
  i1iI1Iiii1I = name
 I1i1II1 = name
 oOOooI1 = description
 ooooOoO0O . setInfo ( 'video' , { 'plot' : description } )
 try :
  ooooOoO0O . setInfo ( 'video' , { 'genre' : str ( genre ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'dateadded' : str ( date ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'credits' : str ( credits ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'director' : str ( director ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'writer' : str ( writer ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'duration' : int ( duration ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'premiered' : str ( premiered ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'studio' : str ( studio ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'mpaa' : str ( rate ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'originaltitle' : str ( originaltitle ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'country' : str ( country ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'rating' : float ( rating ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'userrating' : int ( userrating ) } )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'votes' : str ( votes ) } )
 except :
  pass
 try :
  ooooOoO0O . setRating ( "imdb" , float ( rating ) , int ( votes ) , True )
 except :
  pass
 try :
  ooooOoO0O . setInfo ( 'video' , { 'aired' : str ( aired ) } )
 except :
  pass
  if 98 - 98: i1IIi . I1IiiI . oO0o
 if subtitle > '' :
  ooooOoO0O . setSubtitles ( [ subtitle ] )
 try :
  Ooo000O00 = name . decode ( 'utf-8' )
 except :
  Ooo000O00 = name
 try :
  i1iI1Iiii1I = json . dumps ( Ooo000O00 )
 except :
  i1iI1Iiii1I = Ooo000O00
 try :
  I1iII = [ ]
  if i1 == 'true' :
   if i1iI1Iiii1I in I1IIiiIiii :
    I1iII . append ( ( 'Remover dos Favoritos do ' + __addonname__ , 'RunPlugin(%s?mode=14&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    Iii1I1IIII = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=false&fav_mode=0' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( subtitle . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) ) )
    I1iII . append ( ( 'Adicionar aos Favoritos do ' + __addonname__ , 'RunPlugin(%s)' % Iii1I1IIII ) )
  I1iII . append ( ( 'Informação' , 'RunPlugin(%s?mode=19&name=%s&description=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( description ) ) ) )
  ooooOoO0O . addContextMenuItems ( I1iII )
 except :
  pass
 xbmcplugin . addDirectoryItem ( handle = III1i1i , url = url , listitem = ooooOoO0O , isFolder = folder )
 if 10 - 10: I1ii11iIi11i % I1IiiI - II111iiii
def OoiIIIiIi1I1i ( ) :
 try :
  O0O = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
  o0oOOoooOOOOo = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , O0O ) )
  if os . path . exists ( o0oOOoooOOOOo ) == False :
   os . mkdir ( o0oOOoooOOOOo )
  xbmc . sleep ( 7 )
  if 11 - 11: O0 + I1IiiI
  if 80 - 80: oO0o % oO0o % O0 - i11iIiiIii . iII111i / O0
  iiiiI = os . path . join ( o0oOOoooOOOOo , "password.txt" )
  oooOo0OOOoo0 = os . path . isfile ( iiiiI )
  if oooOo0OOOoo0 == False :
   oO00O000oO0 = '0069'
   O0OoOO0o = base64 . b64encode ( oO00O000oO0 . encode ( ) ) . decode ( 'utf-8' )
   iIii1II11 = open ( iiiiI , 'w' )
   iIii1II11 . write ( O0OoOO0o )
   iIii1II11 . close ( )
 except :
  pass
  if 13 - 13: I1IiiI + O0 - I1ii11iIi11i % Oo0Ooo / Ii1I . i1IIi
  if 60 - 60: Oo0Ooo . IiII % I1IiiI - I1Ii111
  if 79 - 79: OoooooooOO / I1ii11iIi11i . O0
  if 79 - 79: oO0o - II111iiii
def Ii1iiI1 ( timestamp ) :
 try :
  if timestamp > '' :
   o0ooOOoO0oO0 = datetime . fromtimestamp ( int ( timestamp ) )
   oo00 = o0ooOOoO0oO0 . strftime ( '%d/%m/%Y às %H:%M:%S' )
   return str ( oo00 )
  else :
   I1IiI1IIiI = ''
   return I1IiI1IIiI
 except :
  I1IiI1IIiI = ''
  return I1IiI1IIiI
  if 79 - 79: i1IIi
def iIi1 ( ) :
 ooo0Oooooo = iiI1 . getSetting ( 'username' )
 Ooi1IIii11i1I1 = iiI1 . getSetting ( 'password' )
 if ooo0Oooooo > '' and Ooi1IIii11i1I1 > '' :
  try :
   Ii1I1 = IIi1I11I1II . replace ( '/get.php' , '' ) + '/player_api.php?username=%s&password=%s' % ( ooo0Oooooo , Ooi1IIii11i1I1 )
   O0oo00oOOO0o = O00oO0 ( Ii1I1 , '' )
   II1i = re . compile ( '"status":"(.+?)".+?"exp_date":"(.+?)".+?"is_trial":"(.+?)".+?"created_at":"(.+?)".+?max_connections":"(.+?)"' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( O0oo00oOOO0o )
   if II1i != [ ] :
    I111iiIIiI1I = str ( II1i [ 0 ] [ 0 ] )
    ooO00Oo = str ( II1i [ 0 ] [ 1 ] )
    Iiii1Ii1I = str ( II1i [ 0 ] [ 2 ] )
    oooOOOOO = str ( II1i [ 0 ] [ 3 ] )
    i1iIii = str ( II1i [ 0 ] [ 4 ] )
    if 65 - 65: iII111i . oO0o - Ii1I
    if I111iiIIiI1I > '' and I111iiIIiI1I == 'Active' :
     ooii11i = 'Ativo'
    else :
     ooii11i = 'Expirado'
     if 71 - 71: Ii1I * I1Ii111 % II111iiii . Ii1I % OoO0O00 + I1ii11iIi11i
    if ooO00Oo > '' :
     o0oOo0OO = Ii1iiI1 ( str ( ooO00Oo ) )
    else :
     o0oOo0OO = ''
     if 79 - 79: OoOoOO00 % I1IiiI % Ii1I / i1IIi % OoO0O00
    if Iiii1Ii1I > '' and Iiii1Ii1I == '0' :
     oo0o00OO = 'Não'
    else :
     oo0o00OO = 'Sim'
     if 69 - 69: o0oOOo0O0Ooo % i11iIiiIii / Ii1I
    if oooOOOOO > '' :
     ooOOO00oOOooO = Ii1iiI1 ( str ( oooOOOOO ) )
    else :
     ooOOO00oOOooO = ''
     if 46 - 46: iIii1I11I1II1 . i11iIiiIii - OoOoOO00 % O0 / II111iiii * i1IIi
    if i1iIii > '' :
     oO = i1iIii
    else :
     oO = ''
     if 18 - 18: OoooooooOO + o0oOOo0O0Ooo . O0 + IiII * i1IIi . OoO0O00
    try :
     xbmcaddon . Addon ( ) . setSetting ( "status_vip" , ooii11i )
     xbmcaddon . Addon ( ) . setSetting ( "created_at" , ooOOO00oOOooO )
     xbmcaddon . Addon ( ) . setSetting ( "exp_date" , o0oOo0OO )
     xbmcaddon . Addon ( ) . setSetting ( "is_trial" , oo0o00OO )
     xbmcaddon . Addon ( ) . setSetting ( "max_connection" , oO )
    except :
     pass
  except :
   try :
    xbmcaddon . Addon ( ) . setSetting ( "status_vip" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "created_at" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "exp_date" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "is_trial" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "max_connection" , '' )
   except :
    pass
    if 71 - 71: I1Ii111 - o0oOOo0O0Ooo - OOooOOo
def iiIO0OO0o0O00oO ( ) :
 ooo0Oooooo = iiI1 . getSetting ( 'username' )
 Ooi1IIii11i1I1 = iiI1 . getSetting ( 'password' )
 if 81 - 81: IiII / I11i
 III1IIi11 = iiI1 . getSetting ( 'exibirvip' )
 o0O0oo0 = iiI1 . getSetting ( 'saida' )
 if ooo0Oooooo > '' and Ooi1IIii11i1I1 > '' :
  iIi1 ( )
 if int ( o0O0oo0 ) == 1 :
  iIIi1 = 'm3u8'
 else :
  iIIi1 = 'ts'
 if III1IIi11 == 'true' :
  if ooo0Oooooo > '' and Ooi1IIii11i1I1 > '' :
   oO00O0 = '' + IIi1I11I1II + '?username=%s&password=%s&type=m3u_plus&output=%s' % ( ooo0Oooooo , Ooi1IIii11i1I1 , iIIi1 )
   if 75 - 75: IiII % i11iIiiIii + iIii1I11I1II1
   OOoo0oo ( oo0O0oO , oO00O0 , 1 , ooooo , II1I , ii , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  else :
   if 92 - 92: OoOoOO00 % O0
   if 55 - 55: iIii1I11I1II1 * iII111i
   OOoo0oo ( oo0O0oO , '' , 9 , __icon__ , '' , ii , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
   if 85 - 85: iIii1I11I1II1 . II111iiii
def o0ooo0o0 ( ) :
 O00Oooo00 = OooO0OoOOOO ( heading = "Digite algo para pesquisar" )
 if ( not O00Oooo00 ) : return False , 0
 ooO0 = urllib . quote_plus ( O00Oooo00 )
 OOoo0oo ( '[COLOR white][B]PESQUISAR NOVAMENTE...[/B][/COLOR]' , '' , 7 , IIIi1I1IIii1II , O0ii1ii1ii , iiIii , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 try :
  ooo0o0O0o ( i1i + '?pesquisar=' + ooO0 , '' )
 except :
  pass
 xbmcplugin . endOfDirectory ( III1i1i )
 if 34 - 34: i1IIi % IiII
def OoOoIiI1 ( name ) :
 if name == 'Wall' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
  except :
   pass
 if name == 'List' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
  except :
   pass
 if name == 'Poster' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(51)' )
  except :
   pass
 if name == 'Shift' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(53)' )
  except :
   pass
 if name == 'InfoWall' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(54)' )
  except :
   pass
 if name == 'WideList' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(55)' )
  except :
   pass
 if name == 'Fanart' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(502)' )
  except :
   pass
   if 13 - 13: OoooooooOO + OoO0O00
   if 32 - 32: O0 + oO0o % Oo0Ooo
def iI1iI ( msg ) :
 import platform
 if platform . system ( ) == 'Linux' :
  O0O0 = 'Android 9; Mobile; rv:68.0'
 elif platform . system ( ) == 'Windows' :
  O0O0 = 'Windows NT 6.1; WOW64; rv:54.0'
 elif platform . system ( ) == 'IOS' :
  O0O0 = 'iPhone; CPU iPhone OS 12_2 like Mac OS X'
 else :
  O0O0 = ''
 OO0 = {
 "Accept-Language" : "en-US,en;q=0.5" ,
 "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : O0O0 ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8" ,
 "Referer" : "Novo-KelTec Media'Play (Torrent TV-1.0.3+Matrix)" ,
 "Connection" : "keep-alive"
 }
 I1i11iIIi = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=4w80f35j2b" , headers = OO0 )
 O000 = urllib2 . urlopen ( I1i11iIIi ) . read ( )
 if 70 - 70: OOooOOo * oO0o / I1IiiI * OoOoOO00 * I1IiiI
 if 61 - 61: oO0o + I1ii11iIi11i / i1IIi * oO0o
 o0OoOoooo0 = 0
 xbmc . sleep ( o0OoOoooo0 * 0 )
 if 60 - 60: I1IiiI % oO0o / o0oOOo0O0Ooo % oO0o * i11iIiiIii / iII111i
 if 34 - 34: I1Ii111 - OOooOOo
def ooo0O ( ) :
 try :
  IIIiIi1iiI = xbmc . translatePath ( iIiiI1 + '/check.txt' )
  oooOo0OOOoo0 = os . path . isfile ( IIIiIi1iiI )
  ooo0O = iiI1 . getSetting ( 'check_addon' )
  if 15 - 15: I1ii11iIi11i . iII111i
  if oooOo0OOOoo0 == True :
   if 94 - 94: I11i . I1IiiI
   oooO = open ( IIIiIi1iiI , 'r+' )
   oo0OoOO0000 = iiI1 . getSetting ( 'elementum' )
   iIiI1iI1i1I = iiI1 . getSetting ( 'youtube' )
   if oooO and oooO . read ( ) == '1' and ooo0O == 'true' :
    if 2 - 2: Ii1I * I1ii11iIi11i * OoooooooOO
    oooO . close ( )
    OO = O00oO0 ( 'https://keltecmp-iptv.directorioforuns.com/h153-elementum' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
    O00O = re . compile ( 'addon_name="(.+?)".+?ddon_id="(.+?)".+?ir="(.+?)".+?rl_zip="(.+?)".+?escription="(.+?)"' ) . findall ( OO )
    for O0oO , Ooo , oOOOooO , iIo00OOOOOo0OOo , I1i11111i1i11 in O00O :
     if Ooo == 'plugin.video.elementum' and oo0OoOO0000 == 'false' :
      pass
     elif Ooo == 'script.module.six' and iIiI1iI1i1I == 'false' :
      pass
     elif Ooo == 'plugin.video.youtube' and iIiI1iI1i1I == 'false' :
      pass
     else :
      i1II11I11ii1 = xbmc . translatePath ( oOOOooO )
      if 64 - 64: oO0o % OoOoOO00 / II111iiii % ooOoO0o - iII111i
      if os . path . exists ( i1II11I11ii1 ) == False :
       I1II1IiI1 ( O0oO , Ooo , iIo00OOOOOo0OOo , oOOOooO , I1i11111i1i11 )
       if Ooo == 'plugin.video.elementum' :
        xbmcgui . Dialog ( ) . ok ( )
      else :
       pass
  elif ooo0O == 'true' :
   if 26 - 26: OOooOOo * Oo0Ooo
   oooO = open ( IIIiIi1iiI , 'w' )
   oooO . write ( '1' )
   oooO . close ( )
   xbmcgui . Dialog ( ) . ok ( )
 except :
  pass
  if 31 - 31: I11i * oO0o . Ii1I
  if 35 - 35: I11i
def I1II1IiI1 ( name , addon_id , url , directory , description ) :
 try :
  import downloader
  import extract
  import ntpath
  o00oo = xbmc . translatePath ( os . path . join ( 'special://' , 'home/' , 'addons' , 'packages' ) )
  O0oO0oo0O = ntpath . basename ( url )
  oooOOO0ooOoOOO = xbmcgui . DialogProgress ( )
  oooOOO0ooOoOOO . create ( "Instalador de Complementos" , "Baixando & Instalando " + name + ",\nPor favor aguarde...." )
  o0IiIiI111IIII1 = os . path . join ( o00oo , O0oO0oo0O )
  try :
   os . remove ( o0IiIiI111IIII1 )
  except :
   pass
  downloader . download ( url , o0IiIiI111IIII1 , oooOOO0ooOoOOO )
  Oooo00OOo000 = xbmc . translatePath ( os . path . join ( 'special://' , 'home/' , 'addons' ) )
  xbmc . sleep ( 100 )
  oooOOO0ooOoOOO . update ( 0 , "Instalando " + name + ", Por Favor Espere" )
  try :
   xbmc . executebuiltin ( "Extract(" + o0IiIiI111IIII1 + "," + Oooo00OOo000 + ")" )
  except :
   extract . all ( o0IiIiI111IIII1 , Oooo00OOo000 , oooOOO0ooOoOOO )
   if 100 - 100: OOooOOo * O0 + I1IiiI + OoOoOO00 . OOooOOo
   if 73 - 73: oO0o . II111iiii * iII111i % oO0o + OoOoOO00 - OoO0O00
  xbmc . sleep ( 100 )
  xbmc . executebuiltin ( "XBMC.UpdateLocalAddons()" )
  o0OOoo0OO0OOO ( name + ' Instalado com Sucesso!' )
  import database
  database . enable_addon ( addon_id )
  if addon_id == 'plugin.video.elementum' :
   database . enable_addon ( 'repository.elementum' )
   if 19 - 19: iII111i * Oo0Ooo . iII111i . OoO0O00 / OoO0O00 - oO0o
  xbmc . executebuiltin ( "XBMC.Container.Update()" )
  xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , '' + name + ' instalado com sucesso!\nObservação;\nÉ necessário Forçar Fechar o KODI para iniciar o Elementum no menu a seguir.\nFeche e abra o Kodi novamente!' )
  i11111iiiII1I ( )
 except :
  o0OOoo0OO0OOO ( 'Erro ao baixar o complemento' )
  if 13 - 13: OOooOOo / IiII - OoO0O00 / OOooOOo . i1IIi
  if 22 - 22: O0 - I11i + I1Ii111 . Ii1I * i1IIi
  if 26 - 26: iIii1I11I1II1 * o0oOOo0O0Ooo . I11i
def i11111iiiII1I ( ) :
 I1iiiiI1iII = xbmcgui . Dialog ( )
 OO = I1iiiiI1iII . select ( '[B][COLOR white]FINALIZANDO INSTALAÇÃO DO ELEMENTUM[/COLOR][/B]' , [ '[COLOR white]SIM POR FAVOR! [/COLOR][COLOR orangered]|[/COLOR] [COLOR lime]FORÇAR FECHAR[/COLOR]' , '[COLOR white]NÃO POR FAVOR! [/COLOR][COLOR orangered]|[/COLOR] [COLOR red]NÃO CANCELAR[/COLOR]' ] )
 if 10 - 10: I1Ii111 * oO0o % Oo0Ooo - I11i % Oo0Ooo
 if OO == 0 :
  xbmcplugin . endOfDirectory ( int ( os . _exit ( 1 ) ) )
  if 65 - 65: iII111i * iIii1I11I1II1 / O0 . I11i
 if OO == 1 :
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 94 - 94: Oo0Ooo . ooOoO0o * i11iIiiIii - o0oOOo0O0Ooo . iII111i
def o00OOo ( msg ) :
 try :
  Ii11III = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/version.txt" ) . read ( )
  I1Ii1i11I1I = str ( Ii11III . decode ( 'utf-8' ) ) . replace ( ' ' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
  if not Oo0o in I1Ii1i11I1I :
   oo0o000o0oOO0 ( )
  elif msg == True :
   if 66 - 66: o0oOOo0O0Ooo * OOooOOo + Ii1I * o0oOOo0O0Ooo + OOooOOo / OoooooooOO
   if 86 - 86: Ii1I . iII111i - iII111i
   oo0i11i ( True )
 except :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR white][B]AVISO[/B][/COLOR]' , "Não foi possível atualizar. Tente novamente mais tarde." )
   if 73 - 73: ooOoO0o % ooOoO0o . iII111i + I1Ii111
def Ii1IOOooO00OO ( msg ) :
 try :
  Ii11III = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/version.txt" ) . read ( )
  I1Ii1i11I1I = str ( Ii11III . decode ( 'utf-8' ) ) . replace ( ' ' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
  if not Oo0o in I1Ii1i11I1I :
   oo0o000o0oOO0 ( )
  elif msg == True :
   xbmcgui . Dialog ( ) . ok ( 'KeTec Media-Play' , "O addon já esta na última versao: " + Oo0o + "\nAs atualizações normalmente são automáticas caso não atualize em\nhttps://www.keltecmp.net/\nUse esse recurso caso nao esteja recebendo automaticamente" )
 except :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR white][B]AVISO[/B][/COLOR]' , "Não foi possível atualizar. Tente novamente mais tarde." )
   if 70 - 70: Ii1I - OOooOOo * OOooOOo / iIii1I11I1II1 + O0
def oo0o000o0oOO0 ( ) :
 iIii1111iII = iIiiI1
 try :
  IiIIi11i = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/default.py" ) . read ( )
  if '' in str ( IiIIi11i . decode ( 'utf-8' ) ) :
   IIii11i = os . path . join ( iIii1111iII , "default.py" )
   file = open ( IIii11i , "w" , encoding = "utf-8" )
   file . write ( IiIIi11i . decode ( 'utf-8' ) )
   file . close ( )
  IiIIi11i = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/resources/settings.xml" ) . read ( )
  if '</settings>' in str ( IiIIi11i . decode ( 'utf-8' ) ) :
   IIii11i = os . path . join ( iIii1111iII , "resources/settings.xml" )
   file = open ( IIii11i , "w" , encoding = "utf-8" )
   file . write ( IiIIi11i . decode ( 'utf-8' ) )
   file . close ( )
  IiIIi11i = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/addon.xml" ) . read ( )
  if '</addon>' in str ( IiIIi11i . decode ( 'utf-8' ) ) :
   IIii11i = os . path . join ( iIii1111iII , "addon.xml" )
   file = open ( IIii11i , "w" , encoding = "utf-8" )
   file . write ( IiIIi11i . decode ( 'utf-8' ) )
   file . close ( )
  xbmcgui . Dialog ( ) . ok ( 'KeTec Media-Play' , "OBS: Add-on desatualizaldo!\nNão se preocupe estamos atualizando o addon.\nAguarde um momento; Caso ocorrer erro,\n Por favor atualize o Add-on no Site Oficial www.keltecmp.net 👍🏻😁" )
 except :
  xbmc . executebuiltin ( "Notification({0}, {1}, 10000, {2})" . format ( __addonname__ , "[B][COLOR whithe]Atualizando o addon. Por favor aguarde 5 segundos e entre novamente![/COLOR][/B]" , __icon__ ) )
  if 82 - 82: I1ii11iIi11i
Ii1IOOooO00OO ( False )
if 54 - 54: o0oOOo0O0Ooo + I11i - iIii1I11I1II1 % ooOoO0o % IiII
def iIi1 ( ) :
 ooo0Oooooo = iiI1 . getSetting ( 'username' )
 Ooi1IIii11i1I1 = iiI1 . getSetting ( 'password' )
 if ooo0Oooooo > '' and Ooi1IIii11i1I1 > '' :
  try :
   Ii1I1 = IIi1I11I1II . replace ( '/get.php' , '' ) + '/player_api.php?username=%s&password=%s' % ( ooo0Oooooo , Ooi1IIii11i1I1 )
   O0oo00oOOO0o = O00oO0 ( Ii1I1 , '' )
   II1i = re . compile ( '"status":"(.+?)".+?"exp_date":"(.+?)".+?"is_trial":"(.+?)".+?"created_at":"(.+?)".+?max_connections":"(.+?)"' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( O0oo00oOOO0o )
   if II1i != [ ] :
    I111iiIIiI1I = str ( II1i [ 0 ] [ 0 ] )
    ooO00Oo = str ( II1i [ 0 ] [ 1 ] )
    Iiii1Ii1I = str ( II1i [ 0 ] [ 2 ] )
    oooOOOOO = str ( II1i [ 0 ] [ 3 ] )
    i1iIii = str ( II1i [ 0 ] [ 4 ] )
    if 19 - 19: I1ii11iIi11i / iIii1I11I1II1 % i1IIi . OoooooooOO
    if I111iiIIiI1I > '' and I111iiIIiI1I == 'Active' :
     ooii11i = 'Ativo'
    else :
     ooii11i = 'Expirado'
     if 57 - 57: ooOoO0o . Oo0Ooo - OoO0O00 - i11iIiiIii * I1Ii111 / o0oOOo0O0Ooo
    if ooO00Oo > '' :
     o0oOo0OO = Ii1iiI1 ( str ( ooO00Oo ) )
    else :
     o0oOo0OO = ''
     if 79 - 79: I1ii11iIi11i + o0oOOo0O0Ooo % Oo0Ooo * o0oOOo0O0Ooo
    if Iiii1Ii1I > '' and Iiii1Ii1I == '0' :
     oo0o00OO = 'Não'
    else :
     oo0o00OO = 'Sim'
     if 21 - 21: iII111i
    if oooOOOOO > '' :
     ooOOO00oOOooO = Ii1iiI1 ( str ( oooOOOOO ) )
    else :
     ooOOO00oOOooO = ''
     if 24 - 24: iII111i / ooOoO0o
    if i1iIii > '' :
     oO = i1iIii
    else :
     oO = ''
     if 61 - 61: iIii1I11I1II1 + oO0o
    try :
     xbmcaddon . Addon ( ) . setSetting ( "status_vip" , ooii11i )
     xbmcaddon . Addon ( ) . setSetting ( "created_at" , ooOOO00oOOooO )
     xbmcaddon . Addon ( ) . setSetting ( "exp_date" , o0oOo0OO )
     xbmcaddon . Addon ( ) . setSetting ( "is_trial" , oo0o00OO )
     xbmcaddon . Addon ( ) . setSetting ( "max_connection" , oO )
    except :
     pass
  except :
   try :
    xbmcaddon . Addon ( ) . setSetting ( "status_vip" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "created_at" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "exp_date" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "is_trial" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "max_connection" , '' )
   except :
    pass
    if 8 - 8: I1Ii111 + OoO0O00
    if 9 - 9: OOooOOo + o0oOOo0O0Ooo
def I1iII1IIi1IiI ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 oOo00 = urllib2 . build_opener ( )
 oOo00 . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ) ]
 if 8 - 8: iIii1I11I1II1
 O000 = oOo00 . open ( url )
 II111Ii1i1 = O000 . read ( ) . decode ( 'utf-8' )
 oOOo0ooO0 = II111Ii1i1
 return oOOo0ooO0
 if 38 - 38: I1Ii111
 if 18 - 18: iII111i / o0oOOo0O0Ooo + IiII % oO0o - IiII
 if 18 - 18: I1IiiI + ooOoO0o % I1ii11iIi11i - OoOoOO00 * i11iIiiIii . o0oOOo0O0Ooo
 if 16 - 16: Oo0Ooo
def oo0i11i ( msg ) :
 o00oO0o00O = iiI1 . getSetting ( 'mensagem1' )
 if o00oO0o00O == 'true' :
  I1iiiiI1iII = xbmcgui . Dialog ( )
  OO = I1iiiiI1iII . select ( '[B][COLOR white]SUPORTE[/COLOR] [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] OFICIAL[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] SITE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] AJUDAR PROJETO' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR orangered]TOP VIP [/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] FACEBOOK' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] YOUTUBE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] TELEGRAM' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] ENTRAR NO ADD-ON' ] )
  if 28 - 28: IiII * I1IiiI % IiII
  if OO == 0 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/site-keltec' ) )
   else :
    ooo00 = webbrowser . open ( 'https://urlredir.ml/site-keltec' )
    if 17 - 17: I11i
  if OO == 1 :
   o0OO0OO000OO ( True )
   if 92 - 92: I11i % i1IIi % ooOoO0o % IiII % o0oOOo0O0Ooo
  if OO == 2 :
   O00Ooo0O0OOOo ( True )
   if 92 - 92: Ii1I - iIii1I11I1II1
  if OO == 3 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/fbkeltec' ) )
   else :
    ooo00 = webbrowser . open ( 'https://urlredir.ml/fbkeltec' )
    if 30 - 30: I11i / I1ii11iIi11i
  if OO == 4 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    ooo00 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/inscrever-se-keltec-media-play' ) )
   else :
    webbrowser . open ( 'https://urlredir.ml/inscrever-se-keltec-media-play' )
    if 22 - 22: oO0o * iII111i
  if OO == 5 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    ooo00 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/telegram' ) )
   else :
    ooo00 = webbrowser . open ( 'https://urlredir.ml/telegram' )
    if 4 - 4: OoOoOO00 - oO0o + I1IiiI
  if OO == 7 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin 'destiny = ''joy = '\x72\x6f\x74\x31\x33'trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))