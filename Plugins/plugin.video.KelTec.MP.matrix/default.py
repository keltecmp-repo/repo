# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = '# -*- coding: utf-8 -*-
if 64 - 64: i11iIiiIii
try :
 import urllib . parse as urllib
except ImportError :
 import urllib
try :
 import urllib2
except ImportError :
 import urllib . request as urllib2
import re
import os
import sys
try :
 import cookielib
except ImportError :
 import http . cookiejar as cookielib
from urllib import request as urllib2 , parse as urllib
import requests
import uuid as random
import base64
import codecs
import xbmc
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import time
import webbrowser
import datetime
from datetime import datetime , date , timedelta
import hashlib
import check_start
from bs4 import BeautifulSoup
from check_start . start import OO0o
from requests . utils import quote , unquote
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
import resources . lib . common as common
if 73 - 73: II111iiii
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
try :
 import json
except :
 import simplejson as json
 if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
 if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * Ii1I
i1I1ii1II1iII = "11.07.21"
if 86 - 86: ooOoO0o
i1ii1iIII = 'plugin.video.KelTec.MP.matrix'
Oo0oO0oo0oO00 = xbmcaddon . Addon ( i1ii1iIII )
i111I = '[COLOR white][B]KelTec Media Play Tv[/B][/COLOR]'
II1Ii1iI1i = 'plugin.video.KelTec.MP.matrix'
iiI1iIiI = xbmcaddon . Addon ( id = II1Ii1iI1i )
if 91 - 91: OoO0O00 . i11iIiiIii / oO0o % I11i / OoO0O00 - i11iIiiIii
II1Iiii1111i = Oo0oO0oo0oO00 . getAddonInfo ( "name" )
i1IIi11111i = Oo0oO0oo0oO00 . getAddonInfo ( 'icon' )
o000o0o00o0Oo = Oo0oO0oo0oO00 . getAddonInfo ( 'path' )
oo = o000o0o00o0Oo + '/fanart.jpg'
IiII1I1i1i1ii = o000o0o00o0Oo + '/fanart2.jpg'
if 44 - 44: oO0o / Oo0Ooo - II111iiii - i11iIiiIii % I1Ii111
O0OoOoo00o = o000o0o00o0Oo + '/icon.gif'
if 31 - 31: II111iiii + OoO0O00 . I1Ii111
OoOooOOOO = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) )
i11iiII = o000o0o00o0Oo + '/resources/img/'
I1iiiiI1iII = 'https://player.keltec.ml/base-torrent/'
IiIi11i = xbmcgui . Dialog ( )
iIii1I111I11I = OO0o ( )
if 72 - 72: o0oOOo0O0Ooo % I11i * II111iiii + i1IIi
OOoooooO = Oo0oO0oo0oO00 . getAddonInfo ( 'path' )
i1iIIIiI1I = os . path . join ( OOoooooO , "resources" , "images" )
if 70 - 70: Oo0Ooo % Oo0Ooo . IiII % OoO0O00 * o0oOOo0O0Ooo % oO0o
iiI1IiI = os . path . join ( OOoooooO , 'resources' , 'lib' )
sys . path . insert ( 0 , iiI1IiI )
import common
if 13 - 13: Oo0Ooo . i11iIiiIii - iIii1I11I1II1 - OoOoOO00
ii1I = xbmcvfs . translatePath ( Oo0oO0oo0oO00 . getAddonInfo ( "profile" ) )
OooO0 = os . path . join ( ii1I , "cache" )
if not os . path . exists ( OooO0 ) :
 os . makedirs ( OooO0 )
 if 35 - 35: OOooOOo % I1Ii111 % i11iIiiIii / OoooooooOO
Ii11iI1i = os . path . join ( OOoooooO , "resources" , "common" , "init.py" )
Ooo = os . path . join ( ii1I , "virtual_directoriesLists.txt" )
O0o0Oo = os . path . join ( ii1I , 'tempList.txt' )
Oo00OOOOO = os . path . join ( ii1I , 'favorites.txt' )
if 85 - 85: ooOoO0o . iII111i - OoO0O00 % ooOoO0o % II111iiii
if not ( os . path . isfile ( Oo00OOOOO ) ) :
 common . SaveList ( Oo00OOOOO , [ ] )
 if 81 - 81: OoO0O00 + II111iiii % iII111i * O0
if not ( os . path . isfile ( Ooo ) ) :
 common . SaveList ( Ooo , [ ] )
 if 89 - 89: oO0o + Oo0Ooo
Ii1IOo0o0 = Oo0oO0oo0oO00 . getSetting ( "makeGroups" ) == "true"
if 49 - 49: oO0o % Ii1I + i1IIi . I1IiiI % I1ii11iIi11i
if 48 - 48: I11i + I11i / II111iiii / iIii1I11I1II1
def i1iiI11I ( id ) :
 return Oo0oO0oo0oO00 . getLocalizedString ( id )
 if 29 - 29: OoooooooOO
 if 23 - 23: o0oOOo0O0Ooo . II111iiii
 if 98 - 98: iIii1I11I1II1 % OoOoOO00 * I1ii11iIi11i * OoOoOO00
i1 = int ( sys . argv [ 1 ] )
__addon__ = xbmcaddon . Addon ( )
IiIiiI = __addon__
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
I1I = __addon__ . getAddonInfo ( 'version' )
try :
 oOO00oOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
except :
 oOO00oOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) )
try :
 OoOooOOOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
except :
 OoOooOOOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) )
OoOo = os . path . join ( oOO00oOO , 'favorites.dat' )
iI = xbmcaddon . Addon ( ) . getSetting ( "favoritos" )
if 60 - 60: I11i / I11i
if 46 - 46: Ii1I * OOooOOo - OoO0O00 * oO0o - I1Ii111
if 83 - 83: OoooooooOO
if os . path . exists ( OoOo ) == True :
 Iii111II = open ( OoOo ) . read ( )
else :
 Iii111II = [ ]
 if 9 - 9: OoO0O00
 if 33 - 33: ooOoO0o . iII111i
def O0oo0OO0oOOOo ( message , timeShown = 5000 ) :
 xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , message , timeShown , __icon__ ) )
 if 35 - 35: IiII % I1IiiI
def o0OOoo0OO0OOO ( text , encoding = 'utf-8' , errors = 'strict' ) :
 if isinstance ( text , bytes ) :
  if 19 - 19: oO0o % i1IIi % o0oOOo0O0Ooo
  return text . decode ( encoding , errors = errors )
 return text
 if 93 - 93: iIii1I11I1II1 % oO0o * i1IIi
def Ii11Ii1I ( heading = '' , message = '' ) :
 O00oO = None
 if 39 - 39: IiII - II111iiii * OoO0O00 % o0oOOo0O0Ooo * II111iiii % II111iiii
 OoOOOOO = xbmc . Keyboard ( message , heading )
 OoOOOOO . doModal ( )
 if OoOOOOO . isConfirmed ( ) :
  O00oO = o0OOoo0OO0OOO ( OoOOOOO . getText ( ) )
 return O00oO
 if 33 - 33: I1ii11iIi11i % i1IIi
 if 78 - 78: I11i
 if 71 - 71: OOooOOo + ooOoO0o % i11iIiiIii + I1ii11iIi11i - IiII
 if 88 - 88: OoOoOO00 - OoO0O00 % OOooOOo
iI1I111Ii111i = '[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]'
if 7 - 7: ooOoO0o * OoO0O00 % oO0o . IiII
Ii1iIiII1ii1 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] BEM VINDOS[/B]\n[COLOR orangered]|[/COLOR] Tv ao Vivo [COLOR orangered]|[/COLOR] Filmes [COLOR orangered]|[/COLOR] Séries [COLOR orangered]|[/COLOR] Desenhos [COLOR orangered]|[/COLOR] Animes [COLOR orangered]|[/COLOR] Melhores Lançamentos Dual Audio[COLOR orangered]|[/COLOR]'
if 62 - 62: iIii1I11I1II1 * OoOoOO00
if 26 - 26: iII111i . I1Ii111
if 68 - 68: OoO0O00
IIi1iIIiI = ''
O0OoO = base64 . b64decode ( IIi1iIIiI ) . decode ( 'utf-8' )
O0OoO = ''
if 69 - 69: oO0o . I1Ii111 + Ii1I / Oo0Ooo - oO0o
if 63 - 63: OOooOOo % oO0o * oO0o * OoO0O00 / I1ii11iIi11i
if 74 - 74: II111iiii
if 75 - 75: o0oOOo0O0Ooo . ooOoO0o
if 54 - 54: II111iiii % OoOoOO00 % I11i % iIii1I11I1II1 + iIii1I11I1II1 * ooOoO0o
O00O0oOO00O00 = 'http://teste.com/get.php'
i1Oo00 = '[COLOR white][B]PESQUISAR...[/B][/COLOR]'
i1i = 'https://png.pngtree.com/png-vector/20190115/ourlarge/pngtree-vector-search-icon-png-image_320926.jpg'
iiI111I1iIiI = ''
if 41 - 41: Oo0Ooo . ooOoO0o + O0 * o0oOOo0O0Ooo % Oo0Ooo * Oo0Ooo
iIIIIi1iiIi1 = 'Pesquise por filme'
if 21 - 21: I1IiiI * iIii1I11I1II1
oooooOoo0ooo = '[B][COLOR silver]Configurações Ativar & Desativar Mensagens[/COLOR][/B]'
I1I1IiI1 = 'https://i.imgur.com/8KUL2Rt.png'
III1iII1I1ii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]CONFIGURAÇÕES!\n[/B][COLOR orangered]|[/COLOR] Ajustes  gerais do Add-on.'
if 61 - 61: II111iiii
O0OOO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] FAVORITOS[/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
II11iIiIIIiI = 'https://i.imgur.com/q09OJRb.png'
o0o = 'Adicione Itens aos Favoritos, pressionando OK do controle ou clicando o direito e selecionando Adicionar aos favoritos do KelTec Media Play'
if 84 - 84: O0
if 74 - 74: I1ii11iIi11i - I1IiiI - Oo0Ooo . Ii1I - IiII
OOOoOoo0O = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] SUPORTE [COLOR crimson]|[/COLOR][/COLOR][COLOR orangered] TOP VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
O000OOo00oo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]TOP[/COLOR] [COLOR orangered](VIP)[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
oo0OOo = 'https://i.imgur.com/5rgqF8K.png'
ooOOO00Ooo = 'https://i.imgur.com/nTIPRcu.png'
if 16 - 16: II111iiii % OoOoOO00 - II111iiii + Ii1I
i1I1i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR red] AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] O acesso [COLOR orangered]Top Vip[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo e fique por dentro do melhor conteúdo familiar.\nA Team KelTec Media-Play deseja um ótimo entretenimento a todos!'
if 40 - 40: I1IiiI . iIii1I11I1II1 / I1IiiI / i11iIiiIii
o0O00o = 'No Kodi só canais; Pelo vip canais e VOD, use o app exclusivo.'
if 87 - 87: i11iIiiIii
OO0Oooo0 = 'http://lista.lorddark.club:80/get.php'
if 62 - 62: O0 * i1IIi * o0oOOo0O0Ooo - I1IiiI + I1IiiI
if 34 - 34: iIii1I11I1II1 - o0oOOo0O0Ooo
o00oooO0Oo = "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Torrent Play"
if 78 - 78: Ii1I % I1Ii111 + I1ii11iIi11i
if 64 - 64: oO0o * O0 . I1IiiI + II111iiii
IIi1i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 87 - 87: o0oOOo0O0Ooo - I1ii11iIi11i + IiII % iII111i + I1IiiI - OoOoOO00
if 16 - 16: iIii1I11I1II1
if 90 - 90: o0oOOo0O0Ooo % i1IIi / OoO0O00
IIi = "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Media'Play Principal"
if 41 - 41: Ii1I - O0 - O0
if 68 - 68: OOooOOo % I1Ii111
ooO00OO0 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 31 - 31: iII111i % iII111i % I11i
if 69 - 69: OoO0O00 - Oo0Ooo + i1IIi / I1Ii111
if 49 - 49: O0 . iII111i
if 11 - 11: IiII * I1IiiI . iIii1I11I1II1 % OoooooooOO + iII111i
OOO = "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Play TV"
if 68 - 68: II111iiii + I11i
if 45 - 45: iII111i / iII111i + I1Ii111 + ooOoO0o
iI111i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 26 - 26: I1ii11iIi11i * iII111i . II111iiii * Ii1I
if 28 - 28: OoO0O00 . i1IIi * I1IiiI + O0 . i1IIi - ooOoO0o
if 38 - 38: I1Ii111
Ooo00o0Oooo = '[B][COLOR white]KelTec [COLOR crimson]Media Play [/B][COLOR orange]|[/COLOR] [COLOR silver]Pesquisa[/COLOR]'
if 84 - 84: o0oOOo0O0Ooo % II111iiii . i11iIiiIii / OoO0O00
if 80 - 80: I1Ii111 . i11iIiiIii - o0oOOo0O0Ooo
iIiIIi1 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 7 - 7: ooOoO0o - Oo0Ooo - oO0o + ooOoO0o
if 26 - 26: Ii1I
if 35 - 35: Ii1I - I1IiiI % o0oOOo0O0Ooo . OoooooooOO % Ii1I
I1i1Iiiii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR crimson]|[/COLOR] ADD-ON [COLOR crimson]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 94 - 94: o0oOOo0O0Ooo * Ii1I / Oo0Ooo / Ii1I
if 87 - 87: Oo0Ooo . IiII
O0OO0O = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 81 - 81: oO0o . o0oOOo0O0Ooo % O0 / I1IiiI - oO0o
if 43 - 43: i11iIiiIii + Oo0Ooo * II111iiii * I1Ii111 * O0
if 64 - 64: OOooOOo % iIii1I11I1II1 * oO0o
if 79 - 79: O0
oOO00O = 'nome'
OOOoo0OO = '[COLOR orangered]KelTec Play Escolha uma opção:[/COLOR]'
if 57 - 57: OoO0O00 / ooOoO0o
if 29 - 29: iIii1I11I1II1 + OoOoOO00 * OoO0O00 * OOooOOo . I1IiiI * I1IiiI
I111I1Iiii1i = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'
if 56 - 56: I1ii11iIi11i % O0 - I1IiiI
if 100 - 100: Ii1I - O0 % oO0o * OOooOOo + I1IiiI
Oo0O0oooo = 'aHR0cHM6Ly91cmxyZWRpci5tbC9iYXNlMS1tYXRyaXg='
try :
 I111iI = base64 . b64decode ( Oo0O0oooo ) . decode ( 'utf-8' )
except :
 I111iI = Oo0O0oooo
 if 56 - 56: I1IiiI
O0oO = 'aHR0cHM6Ly91cmxyZWRpci5tbC9ob21lLXR2'
try :
 OO0ooOOO0OOO = base64 . b64decode ( O0oO ) . decode ( 'utf-8' )
except :
 OO0ooOOO0OOO = O0oO
 if 63 - 63: OoOoOO00 * iII111i
 if 69 - 69: O0 . OoO0O00
 if 49 - 49: I1IiiI - I11i
OoOOoOooooOOo = xbmcaddon . Addon ( ) . getAddonInfo ( 'name' )
if 87 - 87: I1IiiI
if 58 - 58: OoOoOO00 % o0oOOo0O0Ooo
if sys . argv [ 1 ] == 'limparFavoritos' :
 i1OOoO = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'profile' ) ) . decode ( "utf-8" )
 OO0O000 = os . path . join ( i1OOoO , "favorites.dat" )
 iiIiI1i1 = os . path . isfile ( OO0O000 )
 if iiIiI1i1 :
  try :
   os . remove ( OO0O000 )
  except :
   pass
 xbmcgui . Dialog ( ) . ok ( 'Sucesso' , '[B][COLOR red]Favoritos limpo com sucesso![/COLOR][/B]' )
 xbmc . sleep ( 2000 )
 exit ( )
 if 69 - 69: ooOoO0o
 if 40 - 40: I1Ii111 + OoooooooOO % o0oOOo0O0Ooo - iIii1I11I1II1 . I1IiiI
if sys . argv [ 1 ] == 'SetPassword' :
 iIiIi11iI = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
 Oo0O00O000 = xbmcvfs . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , iIiIi11iI ) )
 if os . path . exists ( Oo0O00O000 ) == False :
  os . mkdir ( Oo0O00O000 )
 xbmc . sleep ( 4 )
 if 3 - 3: Ii1I * I1ii11iIi11i % I11i
 if 59 - 59: oO0o - iII111i
 OO0O000 = os . path . join ( Oo0O00O000 , "password.txt" )
 iiIiI1i1 = os . path . isfile ( OO0O000 )
 OoOOOOO = xbmcaddon . Addon ( ) . getSetting ( "keyboard" )
 if iiIiI1i1 == False :
  I1 = '0069'
  ii1I1 = base64 . b64encode ( I1 . encode ( ) ) . decode ( 'utf-8' )
  OooooOOoo0 = open ( OO0O000 , 'w' )
  OooooOOoo0 . write ( ii1I1 )
  OooooOOoo0 . close ( )
  xbmc . sleep ( 4 )
  i1I1IiiIi1i = open ( OO0O000 , 'r+' )
  iiI11ii1I1 = i1I1IiiIi1i . read ( )
  Ooo0OOoOoO0 = base64 . b64decode ( iiI11ii1I1 ) . decode ( 'utf-8' )
  IiIi11i = xbmcgui . Dialog ( )
  if int ( OoOOOOO ) == 0 :
   oOo0OOoO0 = IiIi11i . numeric ( 0 , 'Insira a senha atual:' )
  else :
   oOo0OOoO0 = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if oOo0OOoO0 == Ooo0OOoOoO0 :
   if int ( OoOOOOO ) == 0 :
    II = IiIi11i . numeric ( 0 , 'Insira a nova senha:' )
   else :
    II = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if II != '' :
    o0Oo0oO0oOO00 = base64 . b64encode ( II . encode ( ) ) . decode ( 'utf-8' )
    i1I1IiiIi1i = open ( OO0O000 , 'w' )
    i1I1IiiIi1i . write ( o0Oo0oO0oOO00 )
    i1I1IiiIi1i . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 else :
  i1I1IiiIi1i = open ( OO0O000 , 'r+' )
  iiI11ii1I1 = i1I1IiiIi1i . read ( )
  Ooo0OOoOoO0 = base64 . b64decode ( iiI11ii1I1 ) . decode ( 'utf-8' )
  IiIi11i = xbmcgui . Dialog ( )
  if int ( OoOOOOO ) == 0 :
   oOo0OOoO0 = IiIi11i . numeric ( 0 , 'Insira a senha atual:' )
  else :
   oOo0OOoO0 = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if oOo0OOoO0 == Ooo0OOoOoO0 :
   if int ( OoOOOOO ) == 0 :
    II = IiIi11i . numeric ( 0 , 'Insira a nova senha:' )
   else :
    II = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if II != '' :
    o0Oo0oO0oOO00 = base64 . b64encode ( II . encode ( ) ) . decode ( 'utf-8' )
    i1I1IiiIi1i = open ( OO0O000 , 'w' )
    i1I1IiiIi1i . write ( o0Oo0oO0oOO00 )
    i1I1IiiIi1i . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 exit ( )
 if 92 - 92: OoooooooOO * I1Ii111
 if 100 - 100: I1Ii111 + I1Ii111 * IiII
 if 1 - 1: ooOoO0o . ooOoO0o / OoOoOO00 - I1Ii111
 if 86 - 86: iIii1I11I1II1 / OoOoOO00 . II111iiii
 if 19 - 19: I1ii11iIi11i % OoooooooOO % IiII * o0oOOo0O0Ooo % O0
 if 67 - 67: I1IiiI . i1IIi
 if 27 - 27: ooOoO0o % I1IiiI
def o0oooOO00 ( msg ) :
 iiIiii1IIIII ( '[B][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]' , '-' , 20 , i11iiII + 'icon.gif' )
 if 67 - 67: Ii1I / IiII
 iiIiii1IIIII ( '[B][COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR darkgreen]|[/COLOR] ADD-ON [COLOR darkgreen]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]' , '-' , 21 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]PESQUISA[/COLOR]' , '-' , 115 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]DESTAQUES[/COLOR]' , 'https://player.keltec.ml/destaque-torrent/' , 112 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]LANÇAMENTOS[/COLOR]' , 'https://player.keltec.ml/filmes-lancamentos' , 112 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]SÉRIES[/COLOR]' , 'https://player.keltec.ml/category-series' , 112 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]CATEGORIAS[/COLOR]' , 'https://player.keltec.ml/base-torrent' , 114 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR silver]Torrent Play Check & Update[/COLOR][/B]' , '-' , 12 , i11iiII + 'icon.gif' )
 if 9 - 9: O0 % O0 - o0oOOo0O0Ooo
 if 51 - 51: I1IiiI . iIii1I11I1II1 - I1ii11iIi11i / O0
 if 52 - 52: o0oOOo0O0Ooo + O0 + iII111i + Oo0Ooo % iII111i
 if 75 - 75: I1IiiI . ooOoO0o . O0 * I1Ii111
def i11II1I11I1 ( ) :
 OOoOO0ooo = II1iIi11 ( 'https://player.keltec.ml/filmes-lancamentos/' )
 I11iiii = [ ]
 O0i1iI = [ ]
 IiI1iiiIii = re . compile ( '<a class="last" href="https://player.keltec.ml/filmes-lancamentos/(.*)/">.*</a>' ) . findall ( OOoOO0ooo ) [ 0 ]
 I1III1111iIi = int ( IiI1iiiIii )
 for I1i111I in range ( 1 , I1III1111iIi + 1 ) :
  O0i1iI . append ( '[B]PÁGINA: %s[/B]' % I1i111I )
  I11iiii . append ( 'https://player.keltec.ml/filmes-lancamentos/' + str ( I1i111I ) + '/' )
 OooOo0oo0O0o00O = xbmcgui . Dialog ( ) . select ( '-= [B]Torrent Play[/B] =-' , O0i1iI )
 if OooOo0oo0O0o00O >= 0 :
  pass
def I1i11 ( url ) :
 OOoOO0ooo = II1iIi11 ( url )
 IiIi1I1 = BeautifulSoup ( OOoOO0ooo , 'html.parser' )
 IiIIi1 = IiIi1I1 . find ( 'ul' , { 'class' : "sub-menu" } ) . findAll ( 'li' )
 for I1i111I in IiIIi1 :
  IIIIiii1IIii = I1i111I . text . encode ( 'utf-8' )
  url = I1i111I . a [ 'href' ]
  if url . startswith ( 'http' ) :
   url = url
  else :
   url = I1iiiiI1iII + url
  iiIiii1IIIII ( IIIIiii1IIii , url , 112 , O0OoOoo00o )
  if 38 - 38: OOooOOo + II111iiii % ooOoO0o % OoOoOO00 - Ii1I / OoooooooOO
def oOOoo0000O0o0 ( item , arquivo = False ) :
 for II1III in item :
  if not arquivo :
   return II1III
  else :
   return II1III . text . encode ( 'utf-8' )
   if 1 - 1: o0oOOo0O0Ooo . ooOoO0o / iII111i . OOooOOo
def OooIiIIII1i11I ( url ) :
 OOoOO0ooo = II1iIi11 ( url )
 OOOiII1 = OOoOO0ooo
 OOo = BeautifulSoup ( OOOiII1 , 'html.parser' )
 IIii11Ii1i1I = OOo . findAll ( 'div' , attrs = { "class" : 'ItemN' } )
 for II1III in IIii11Ii1i1I :
  Oooo0O = II1III . findAll ( 'span' , attrs = { 'class' : 'idi' } ) [ 0 ]
  oo00O0oO0O0 = Oooo0O . text
  try :
   oo00O0oO0O0 = oo00O0oO0O0 . decode ( 'utf-8' )
  except :
   pass
  ooo0OO0O0Oo = oOOoo0000O0o0 ( II1III . findAll ( 'span' , attrs = { 'class' : 'quality' } ) , True )
  Ooo0O0oooo = ooo0OO0O0Oo
  try :
   Ooo0O0oooo = Ooo0O0oooo . decode ( 'utf-8' )
  except :
   pass
  iiI = II1III . findAll ( "div" , { "class" : "peli" } ) [ 0 ]
  IIIIiii1IIii = iiI . img [ 'alt' ]
  oO = iiI . img [ 'src' ]
  url = iiI . a [ 'href' ]
  url = url . replace ( '/b/?' , '' )
  IIIIiii1IIii = IIIIiii1IIii . split ( '– HD' ) [ 0 ] . split ( ') HD' ) [ 0 ] . split ( ' – BluRay' ) [ 0 ] . split ( ' – WEB-DL' ) [ 0 ]
  IIIIiii1IIii = IIIIiii1IIii . replace ( '   ' , ' ' ) . replace ( ' Completa ' , ' ' ) . replace ( '   ' , ' ' ) . replace ( '   ' , ' ' )
  iiIiii1IIIII ( '%s - %s - %s' % ( str ( IIIIiii1IIii ) , oo00O0oO0O0 , Ooo0O0oooo ) , url . encode ( 'utf-8' ) , 1199 , oO . encode ( 'utf-8' ) )
 IIii11Ii1i1I = OOo . findAll ( 'div' , attrs = { "class" : 'wp-pagenavi' } )
 IIiIi = len ( IIii11Ii1i1I )
 for II1III in IIii11Ii1i1I :
  OOoOooOoOOOoo = oOOoo0000O0o0 ( II1III . find ( "span" , { "class" : "pages" } ) )
  Iiii1iI1i = II1III . findAll ( attrs = { "class" : "nextpostslink" } ) [ 0 ] . get ( 'href' )
  Iiii1iI1i = Iiii1iI1i . replace ( '/b/?' , '' )
  if 34 - 34: ooOoO0o * I1IiiI . i1IIi * ooOoO0o / ooOoO0o
  iiIiii1IIIII ( '[B][COLOR white]' + str ( OOoOooOoOOOoo ) + '[/COLOR][/B]' , Iiii1iI1i . encode ( 'utf-8' ) , 112 , i11iiII + 'Proxima.png' , True )
 if IIiIi == 0 :
  IIiI1Ii = re . compile ( '<link rel="next" href="(.*?)".+?/>' ) . findall ( OOoOO0ooo )
  for I1i111I in IIiI1Ii :
   I1i111I = I1i111I . replace ( '/b/?' , '' )
   iiIiii1IIIII ( '[COLOR white][B]Proxima Página[/B][/COLOR]' , str ( I1i111I ) , 112 , i11iiII + 'Proxima.png' , True )
   if 57 - 57: OOooOOo - ooOoO0o - I11i + OoO0O00
   if 30 - 30: Ii1I % OoOoOO00 + i1IIi - I11i - Ii1I
   if 8 - 8: OoO0O00 + I1Ii111 - o0oOOo0O0Ooo % Oo0Ooo % o0oOOo0O0Ooo * oO0o
   if 9 - 9: Oo0Ooo - i11iIiiIii - OOooOOo * Ii1I + ooOoO0o
def iIIII ( ) :
 iIIIiiI1i1i = xbmc . Keyboard ( '' , '[B]Encontre filmes, atores e diretores[/B]' )
 iIIIiiI1i1i . doModal ( )
 if ( iIIIiiI1i1i . isConfirmed ( ) ) :
  iIII = iIIIiiI1i1i . getText ( )
  o0o0O = urllib . quote ( iIII )
  ooooO0oOoOOoO = 'https://player.keltec.ml/base-torrent?s=' + o0o0O
  OooIiIIII1i11I ( ooooO0oOoOOoO )
 else :
  sys . exit ( )
  if 20 - 20: I11i + Ii1I / O0 % iIii1I11I1II1
  if 88 - 88: OoOoOO00 / II111iiii
def OOOOO0O00 ( url , name , iconimage ) :
 OOoOO0ooo = II1iIi11 ( url )
 iiIiii1IIIII ( '[B][COLOR white]Sinopse:%s[/COLOR][/B]' % name . split ( '(' ) [ 0 ] , url , 1120 , iconimage , False )
 OOo = BeautifulSoup ( OOoOO0ooo , "html.parser" )
 IIii11Ii1i1I = OOo . findAll ( attrs = { "class" : "trailer litebox" } )
 if 30 - 30: iIii1I11I1II1 . I1IiiI . OOooOOo / o0oOOo0O0Ooo
 if 42 - 42: Oo0Ooo
 if 19 - 19: oO0o % I1ii11iIi11i * iIii1I11I1II1 + I1IiiI
 IiIIi1 = OOo . find ( 'div' , { 'id' : 'categoria' , 'class' : 'box_item center-widget' } )
 iii11I = IiIIi1 . findAll ( 'div' )
 for I1i111I in iii11I :
  name = I1i111I . text . encode ( 'utf-8' )
  try :
   url = I1i111I . a [ 'href' ] . encode ( 'utf-8' )
  except :
   url = 'True'
  if name == '' :
   xbmc . log ( '%s' % I1i111I )
   I1Iii1 = url . split ( '&dn=' ) [ - 1 ] . split ( '&tr=' ) [ 0 ]
   name = urllib . unquote_plus ( urllib . unquote_plus ( I1Iii1 . split ( '[' ) [ - 0 ] ) )
  iiIiii1IIIII ( name , url , 1198 , iconimage , False )
  if 30 - 30: OoooooooOO - OoOoOO00
def Ooo00O0o ( url , name , iconimage ) :
 OOoOO0ooo = II1iIi11 ( url )
 OOo = BeautifulSoup ( OOoOO0ooo )
 IIii11Ii1i1I = OOo . findAll ( attrs = { "class" : "trailer litebox" } )
 for iiI in IIii11Ii1i1I :
  Oo00o0OO0O00o = iiI . get ( 'href' )
  O0Oooo ( Oo00o0OO0O00o , name , iconimage )
  if 21 - 21: Oo0Ooo
def I1ii1 ( url ) :
 OOOiII1 = II1iIi11 ( url )
 OOo = BeautifulSoup ( OOOiII1 , 'html.parser' )
 if 99 - 99: ooOoO0o . I1Ii111 % IiII * IiII . i1IIi
 IIii11Ii1i1I = OOo . findAll ( attrs = { "class" : 'meta_datos' } )
 for iiI in IIii11Ii1i1I :
  print ( iiI )
  O0OOoOOO0oO = iiI . h1 . text
  I1ii11 = iiI . find ( 'div' , { 'class' : 'views' } )
  oOoOoOoo0 = I1ii11 . text . replace ( '|' , '\nVotos: ' ) . replace ( '/ 10' , '' ) . replace ( 'votos' , '' )
  III1ii1I = OOo . find ( attrs = { "class" : 'meta_datos' } ) . findAll ( 'p' )
  Ii1i1iI = III1ii1I [ 1 ] . text . split ( '|' ) [ - 1 ]
  IIiI1 ( i111I , 'Sinopse: %s' % O0OOoOOO0oO + '\n\n' + oOoOoOoo0 + '\n\n' + Ii1i1iI )
  if 17 - 17: OOooOOo / OOooOOo / I11i
  if 1 - 1: i1IIi . i11iIiiIii % OOooOOo
def IIiI1 ( heading , text ) :
 id = 10147
 xbmc . executebuiltin ( 'ActivateWindow(%d)' % id )
 xbmc . sleep ( 100 )
 OooO0oo = xbmcgui . Window ( id )
 o0o0oOoOO0O = 50
 while ( o0o0oOoOO0O > 0 ) :
  try :
   xbmc . sleep ( 10 )
   o0o0oOoOO0O -= 1
   OooO0oo . getControl ( 1 ) . setLabel ( heading )
   OooO0oo . getControl ( 5 ) . setText ( text )
   return
  except :
   pass
   if 16 - 16: IiII % iIii1I11I1II1 . Ii1I
def oooooOOO000Oo ( url , name , iconimage ) :
 Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
 Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 return Ooo00OoOOO
 if 98 - 98: iIii1I11I1II1 * I1ii11iIi11i * OOooOOo + ooOoO0o % i11iIiiIii % O0
 if 27 - 27: O0
def OOO0oOOoo ( url , name , iconimage ) :
 url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
 xbmc . Player ( ) . play ( item = url , listitem = oooooOOO000Oo ( url , name , iconimage ) )
 if 52 - 52: o0oOOo0O0Ooo % Oo0Ooo
 if 64 - 64: O0 % I11i % O0 * OoO0O00 . oO0o + I1IiiI
def O00 ( url , name , iconimage ) :
 if 17 - 17: Ii1I - OoooooooOO % Ii1I . IiII / i11iIiiIii % iII111i
 iIiIIIIIii = iiI1iIiI . getSetting ( 'torrent' )
 if 'magnet' in url or '.torrent' in url :
  if int ( iIiIIIIIii ) == 0 :
   url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
   Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
   Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
   Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
   if 58 - 58: o0oOOo0O0Ooo / IiII . OoOoOO00 / OoooooooOO + I1Ii111
   xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , Ooo00OoOOO )
  elif int ( iIiIIIIIii ) == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("org.acestream.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    IiIi11i . ok ( i111I , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
  elif int ( iIiIIIIIii ) == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("tv.bitx.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    IiIi11i . ok ( i111I , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
 else :
  Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
  Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
  Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
  if 86 - 86: I11i * I1IiiI + I11i + II111iiii
  xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , Ooo00OoOOO )
  if 8 - 8: I1Ii111 - iII111i / ooOoO0o
  if 96 - 96: OoOoOO00
def O0Oooo ( url , name , iconimage ) :
 url = 'plugin://plugin.video.youtube/play/?video_id={}' . format ( url )
 if 29 - 29: I1ii11iIi11i / i1IIi . I1IiiI - OoOoOO00 - OoOoOO00 - Ii1I
 Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
 Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 if 20 - 20: i1IIi % OoO0O00 . I1IiiI / IiII * i11iIiiIii * OOooOOo
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , Ooo00OoOOO )
 if 85 - 85: o0oOOo0O0Ooo . OoOoOO00 / ooOoO0o . O0 % I1Ii111
 if 90 - 90: Oo0Ooo % O0 * iIii1I11I1II1 . iII111i
 if 8 - 8: ooOoO0o + II111iiii / iII111i / I11i
 if 74 - 74: O0 / i1IIi
 if 78 - 78: OoooooooOO . OoO0O00 + ooOoO0o - i1IIi
def II1iIi11 ( url ) :
 try :
  ii1 = urllib2 . Request ( url )
  ii1 . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
  O0iII1 = urllib2 . urlopen ( ii1 )
  OOoOO0ooo = O0iII1 . read ( ) . decode ( 'utf-8' )
  O0iII1 . close ( )
  return OOoOO0ooo
 except IOError :
  IiIi11i . notification ( i111I , 'Não foi possivel acessar o servidor.' , O0OoOoo00o )
  sys . exit ( 0 )
  if 27 - 27: OoO0O00 . I11i + OoOoOO00 / iIii1I11I1II1 % iII111i . ooOoO0o
  if 14 - 14: oO0o + I1ii11iIi11i - iII111i / O0 . I1Ii111
def iiIiii1IIIII ( name , url , mode , iconimage , pasta = True , total = 1 , plot = '' ) :
 i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage )
 Ooo00OoOOO = xbmcgui . ListItem ( name )
 if pasta :
  Ooo00OoOOO . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  Ooo00OoOOO . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if mode == 1198 or mode == 11999 :
  Ooo00OoOOO . setProperty ( 'IsPlayable' , 'true' )
 if mode == 1199 :
  i1iIi = [ ]
  i1iIi . append ( ( '[B][COLOR white]Ver Sinopse[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1120&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  i1iIi . append ( ( '[B][COLOR white]Play Trailer[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1121&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  Ooo00OoOOO . addContextMenuItems ( i1iIi , replaceItems = False )
 Ooo00OoOOO . setProperty ( 'fanart_image' , IiII1I1i1i1ii )
 Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : plot } )
 xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = i1iiIiI1Ii1i , listitem = Ooo00OoOOO , isFolder = pasta , totalItems = total )
 if 30 - 30: O0 - iIii1I11I1II1 / OoooooooOO
 if 89 - 89: iII111i - ooOoO0o % Oo0Ooo % o0oOOo0O0Ooo
 if 49 - 49: Oo0Ooo - I1IiiI / IiII / O0 % o0oOOo0O0Ooo * Ii1I
def OOoO0 ( msg ) :
 import startup
 if 22 - 22: Oo0Ooo % iII111i * I1ii11iIi11i / OOooOOo % i11iIiiIii * I11i
 if 95 - 95: OoooooooOO - IiII * I1IiiI + OoOoOO00
 if 10 - 10: o0oOOo0O0Ooo / i11iIiiIii
 if 92 - 92: I11i . I1Ii111
 if 85 - 85: I1ii11iIi11i . I1Ii111
 if 78 - 78: ooOoO0o * I1Ii111 + iIii1I11I1II1 + iIii1I11I1II1 / I1Ii111 . Ii1I
 if 97 - 97: ooOoO0o / I1Ii111 % i1IIi % I1ii11iIi11i
 if 18 - 18: iIii1I11I1II1 % I11i
def O00oO0 ( url , count ) :
 o0o0o0o0 = IiIiiI . getSetting ( 'proxy' )
 if o0o0o0o0 == 'true' :
  try :
   import requests
   import random
   I1Iiiiiii = { 'User-agent' : I111I1Iiii1i , 'Matrix' : '19' , 'Add-on' : 'plugin.video.Keltec-MP' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : 'copyright © 2017-2021' , 'Referer' : 'www.keltecmp.net' , 'Team' : 'KelTec-Media-Play' , '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ,
 'Content-Type' : 'text/html' }
   if int ( count ) > 0 :
    I1IIIiI1I1ii1 = int ( count ) - 1
   else :
    I1IIIiI1I1ii1 = 0
    if 30 - 30: O0 * OoooooooOO
    if 38 - 38: IiII - I1ii11iIi11i . OoOoOO00 - I1Ii111 . OoooooooOO
    if 89 - 89: iIii1I11I1II1
   i11iiiiI1i = iIIii ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=no&anonymity=all' , '' )
   i1iIiIi1I = i11iiiiI1i . splitlines ( )
   iiii11i = len ( i1iIiIi1I )
   III11II1I1Ii1 = random . randint ( 0 , iiii11i - 1 )
   O00Oo0o000oO = 'http://' + i1iIiIi1I [ III11II1I1Ii1 ]
   if 99 - 99: oO0o * II111iiii * I1Ii111
   oOooO0 = iIIii ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=yes&anonymity=all' , '' )
   OOOoO000 = oOooO0 . splitlines ( )
   oOOOO = len ( OOOoO000 )
   Ii = random . randint ( 0 , oOOOO - 1 )
   Ii1ii111i1 = 'https://' + OOOoO000 [ Ii ]
   if 31 - 31: OOooOOo + O0
   oO0oOOoo00000 = { "http" : O00Oo0o000oO , "https" : Ii1ii111i1 }
   ii1 = requests . get ( url , headers = I1Iiiiiii , proxies = oO0oOOoo00000 )
   ii1 . encoding = 'utf-8'
   if 52 - 52: I1IiiI
   O0iII1 = ii1 . text
   return O0iII1
  except :
   o0oo00oO00o0 = IiIiiI . getSetting ( 'proxy_try' )
   if int ( I1IIIiI1I1ii1 ) > 0 :
    OoO = int ( I1IIIiI1I1ii1 )
   elif int ( count ) == 1 and int ( I1IIIiI1I1ii1 ) == 0 :
    OoO = int ( o0oo00oO00o0 ) + 1 + 1
   if int ( OoO ) > 1 :
    if 60 - 60: I1ii11iIi11i * I1IiiI
    I1iIiI11I1 = O00oO0 ( url , int ( OoO ) )
    return I1iIiI11I1
   else :
    O0oo0OO0oOOOo ( '[COLOR red]Erro ao utilizar o proxy ou servidor![/COLOR]' )
    O0iII1 = ''
    return O0iII1
 else :
  try :
   try :
    import urllib . request as urllib2
   except ImportError :
    import urllib2
   i1oOOoo0o0OOOO = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-agent" : I111I1Iiii1i , "Matrix" : "19" , "Add-on" : "plugin.video.Keltec-MP" , "KelTec Media-Play" : "Direitos Reservados" , "Ref" : "copyright © 2017-2021" , "Referer" : "www.keltecmp.net" , "Team" : "KelTec-Media-Play" , "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
   i1IiII1III = urllib2 . Request ( url , headers = i1oOOoo0o0OOOO )
   O0iII1 = urllib2 . urlopen ( i1IiII1III ) . read ( ) . decode ( 'utf-8' )
   return O0iII1
  except urllib2 . URLError as i1O00oo :
   if hasattr ( i1O00oo , 'code' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( i1O00oo . code ) + ",10000," + __icon__ + ")" )
   elif hasattr ( i1O00oo , 'reason' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( i1O00oo . reason ) + ",10000," + __icon__ + ")" )
   O0iII1 = ''
   return O0iII1
   if 77 - 77: iII111i % OOooOOo - I11i % ooOoO0o - OoO0O00 / Oo0Ooo
   if 4 - 4: OoooooooOO - i1IIi % Ii1I - OOooOOo * o0oOOo0O0Ooo
   if 85 - 85: OoooooooOO * iIii1I11I1II1 . iII111i / OoooooooOO % I1IiiI % O0
def iIIii ( url , ref , userargent = False ) :
 try :
  try :
   import cookielib
  except ImportError :
   import http . cookiejar as cookielib
  try :
   import urllib2
  except ImportError :
   import urllib . request as urllib2
  if ref > '' :
   I1iii = ref
  else :
   I1iii = url
  oO0o0O0Ooo0o = cookielib . CookieJar ( )
  i1Ii11II = urllib2 . build_opener ( urllib2 . HTTPCookieProcessor ( oO0o0O0Ooo0o ) )
  i1Ii11II . addheaders = [ ( 'Accept-Language' , 'en-US,en;q=0.9;q=0.8' ) , ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' ) , ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ) , ( 'Referer' , I1iii ) ]
  I1iIiI11I1 = i1Ii11II . open ( url ) . read ( )
  O0iII1 = I1iIiI11I1 . decode ( 'utf-8' )
  return O0iII1
 except :
  if 18 - 18: II111iiii . OoooooooOO % OoOoOO00 % Ii1I
  O0iII1 = ''
  return O0iII1
  if 9 - 9: OoO0O00 - Oo0Ooo * OoooooooOO . Oo0Ooo
def ii1Ii1IiIIi ( text , start_with , end_with ) :
 o0OO0 = re . findall ( "(?i)(" + start_with + "[\S\s]+?" + end_with + ")" , text )
 return o0OO0
 if 100 - 100: Oo0Ooo * I1Ii111 / I1Ii111
 if 41 - 41: iIii1I11I1II1 % I11i
 if 59 - 59: OOooOOo + i11iIiiIii
def oo0OOo0O ( data , re_patten ) :
 IiIIi1 = ''
 Ii1IiII = re . search ( re_patten , data )
 if Ii1IiII != None :
  IiIIi1 = Ii1IiII . group ( 1 )
 else :
  IiIIi1 = ''
 return IiIIi1
 if 27 - 27: iII111i . I11i . iIii1I11I1II1 . iIii1I11I1II1
 if 20 - 20: o0oOOo0O0Ooo / i1IIi
 if 71 - 71: OoOoOO00 . i1IIi
def o0 ( url ) :
 try :
  I1iIiI11I1 = O00oO0 ( url , 1 )
  import gzip , binascii
  try :
   from StringIO import StringIO as BytesIO
  except ImportError :
   from io import BytesIO
  if '0ccdc' in I1iIiI11I1 :
   I1iIiI11I1 = I1iIiI11I1 . split ( '0ccdc' )
   OooO0ooo0o = BytesIO ( binascii . unhexlify ( I1iIiI11I1 [ 0 ] ) )
   iii1 = gzip . GzipFile ( fileobj = OooO0ooo0o )
   I1iIiI11I1 = iii1 . read ( )
   I1iIiI11I1 = I1iIiI11I1 . decode ( 'utf-8' )
 except :
  I1iIiI11I1 = O00oO0 ( url , 1 )
 return I1iIiI11I1
 if 32 - 32: Ii1I . IiII . OoooooooOO - OoO0O00 + oO0o
def ooO0oO00O0o ( url , fanart ) :
 ooOO00oOOo000 = xbmcaddon . Addon ( ) . getSetting ( "adult" )
 IIii11II11II1 = xbmcaddon . Addon ( ) . getSetting ( "adult2" )
 II1I = IiIiiI . getSetting ( 'uhdtv' )
 OoOo000oOo0oo = IiIiiI . getSetting ( 'fhdtv' )
 oO0O = IiIiiI . getSetting ( 'hdtv' )
 oOO = IiIiiI . getSetting ( 'sdtv' )
 iiiIIiIi = IiIiiI . getSetting ( 'filtrar' )
 I1iIiI11I1 = o0 ( url )
 if isinstance ( I1iIiI11I1 , ( int , str , list ) ) :
  OooOOO = re . compile ( '<channels>(.+?)</channels>' , re . MULTILINE | re . DOTALL ) . findall ( I1iIiI11I1 )
  Ii1iI11iI1 = re . compile ( '<channel>(.*?)</channel>' , re . MULTILINE | re . DOTALL ) . findall ( I1iIiI11I1 )
  i11 = re . compile ( '<item>(.*?)</item>' , re . MULTILINE | re . DOTALL ) . findall ( I1iIiI11I1 )
  if len ( OooOOO ) > 0 :
   for Ii1iI11iI1 in Ii1iI11iI1 :
    I1II = ''
    OO0 = 0
    try :
     I1II = re . compile ( '<externallink>(.*?)</externallink>' ) . findall ( Ii1iI11iI1 ) [ 0 ]
     OO0 = len ( re . compile ( '<externallink>(.*?)</externallink>' ) . findall ( Ii1iI11iI1 ) )
    except : pass
    if 84 - 84: OoOoOO00 % ooOoO0o - OoOoOO00 . o0oOOo0O0Ooo
    try :
     I1II = base64 . b32decode ( I1II [ : : - 1 ] ) . decode ( 'utf-8' )
    except :
     pass
     if 5 - 5: OoOoOO00 * I1Ii111 - I1ii11iIi11i / iIii1I11I1II1 % oO0o + IiII
     if 51 - 51: I1Ii111 * II111iiii % ooOoO0o
    IIIIiii1IIii = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
    try :
     oO0 = re . compile ( '<thumbnail>(.*?)</thumbnail>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
    except :
     oO0 = ''
    try :
     o000OoOoO0 = re . compile ( '<fanart>(.*?)</fanart>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
    except :
     o000OoOoO0 = ''
     if 99 - 99: o0oOOo0O0Ooo * I1IiiI % Oo0Ooo . OoOoOO00
    if not o000OoOoO0 :
     if __addon__ . getSetting ( 'use_thumb' ) == "true" :
      O00o00O = oO0
     else :
      O00o00O = fanart
    else :
     O00o00O = o000OoOoO0
    if O00o00O == None :
     if 3 - 3: OOooOOo
     O00o00O = ''
     if 20 - 20: II111iiii . iII111i / II111iiii % i11iIiiIii % iII111i
    try :
     I11Ii11iI1 = re . compile ( '<info>(.*?)</info>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I11Ii11iI1 == None :
      if 39 - 39: I1IiiI * i11iIiiIii - oO0o / IiII % I1Ii111 % I11i
      I11Ii11iI1 = ''
    except :
     I11Ii11iI1 = ''
     if 65 - 65: oO0o - ooOoO0o % OoooooooOO / OoooooooOO % OoooooooOO
    try :
     oOoOoo0 = re . compile ( '<genre>(.*?)</genre>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if oOoOoo0 == None :
      if 16 - 16: I1IiiI
      oOoOoo0 = ''
    except :
     oOoOoo0 = ''
     if 6 - 6: OOooOOo - I1ii11iIi11i + Ii1I + i1IIi / O0 / o0oOOo0O0Ooo
    try :
     Iii = re . compile ( '<date>(.*?)</date>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if Iii == None :
      if 34 - 34: Ii1I / ooOoO0o - iII111i
      Iii = ''
    except :
     Iii = ''
     if 99 - 99: OOooOOo
    try :
     credits = re . compile ( '<credits>(.*?)</credits>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if credits == None :
      if 45 - 45: oO0o - OOooOOo * I1Ii111 / Oo0Ooo * II111iiii - I1Ii111
      credits = ''
    except :
     credits = ''
     if 83 - 83: OoO0O00 % IiII . OoooooooOO
    try :
     O0Oo = re . compile ( '<year>(.*?)</year>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if O0Oo == None :
      if 7 - 7: IiII % iIii1I11I1II1 + I11i - Ii1I * oO0o
      O0Oo = ''
    except :
     O0Oo = ''
     if 94 - 94: OoOoOO00 . O0 / Ii1I . I1ii11iIi11i - i1IIi
    try :
     iIi1III1I = re . compile ( '<director>(.*?)</director>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if iIi1III1I == None :
      if 71 - 71: I1Ii111
      iIi1III1I = ''
    except :
     iIi1III1I = ''
     if 11 - 11: O0 / OoO0O00 % OOooOOo + o0oOOo0O0Ooo + iIii1I11I1II1
    try :
     I1i1111I = re . compile ( '<writer>(.*?)</writer>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I1i1111I == None :
      if 95 - 95: iIii1I11I1II1 - I1ii11iIi11i . I1Ii111 - I1IiiI
      I1i1111I = ''
    except :
     I1i1111I = ''
     if 75 - 75: OoO0O00 + o0oOOo0O0Ooo - i1IIi . OoooooooOO * Ii1I / IiII
    try :
     OOOooo0OooOoO = re . compile ( '<duration>(.*?)</duration>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if OOOooo0OooOoO == None :
      if 91 - 91: oO0o + I1IiiI
      OOOooo0OooOoO = ''
    except :
     OOOooo0OooOoO = ''
     if 59 - 59: I1IiiI + i11iIiiIii + i1IIi / I11i
    try :
     I11 = re . compile ( '<premiered>(.*?)</premiered>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I11 == None :
      if 47 - 47: I1ii11iIi11i / oO0o / iII111i
      I11 = ''
    except :
     I11 = ''
     if 86 - 86: o0oOOo0O0Ooo
    try :
     IiIIIII1I1Ii11iI = re . compile ( '<studio>(.*?)</studio>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if IiIIIII1I1Ii11iI == None :
      if 52 - 52: OOooOOo - iII111i * oO0o
      IiIIIII1I1Ii11iI = ''
    except :
     IiIIIII1I1Ii11iI = ''
     if 17 - 17: OoooooooOO + OOooOOo * I11i * OoOoOO00
    try :
     iiIii1I = re . compile ( '<rate>(.*?)</rate>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if iiIii1I == None :
      if 47 - 47: ooOoO0o . I11i / o0oOOo0O0Ooo
      iiIii1I = ''
    except :
     iiIii1I = ''
     if 83 - 83: o0oOOo0O0Ooo / OOooOOo / OOooOOo + o0oOOo0O0Ooo * I1Ii111 + o0oOOo0O0Ooo
    try :
     IIIIiii = re . compile ( '<originaltitle>(.*?)</originaltitle>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if IIIIiii == None :
      if 65 - 65: Oo0Ooo / I11i
      IIIIiii = ''
    except :
     IIIIiii = ''
     if 12 - 12: I11i % OoOoOO00
    try :
     i1iIIi = re . compile ( '<country>(.*?)</country>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if i1iIIi == None :
      if 58 - 58: II111iiii
      i1iIIi = ''
    except :
     i1iIIi = ''
     if 19 - 19: I1ii11iIi11i - I11i . II111iiii - OoO0O00 . IiII * OoooooooOO
    try :
     O0oOo0OOOoO = re . compile ( '<rating>(.*?)</rating>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if O0oOo0OOOoO == None :
      if 11 - 11: o0oOOo0O0Ooo * OoO0O00
      O0oOo0OOOoO = ''
    except :
     O0oOo0OOOoO = ''
     if 15 - 15: OoOoOO00
    try :
     oOoOoO000OO = re . compile ( '<userrating>(.*?)</userrating>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if oOoOoO000OO == None :
      if 38 - 38: o0oOOo0O0Ooo
      oOoOoO000OO = ''
    except :
     oOoOoO000OO = ''
     if 23 - 23: Oo0Ooo % I11i - OOooOOo % iIii1I11I1II1 . OoOoOO00
    try :
     I1Ii1 = re . compile ( '<votes>(.*?)</votes>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I1Ii1 == None :
      if 79 - 79: i11iIiiIii . OOooOOo - Oo0Ooo / OoooooooOO
      I1Ii1 = ''
    except :
     I1Ii1 = ''
     if 66 - 66: OoO0O00 * Oo0Ooo
    try :
     II1IIIiiI11 = re . compile ( '<aired>(.*?)</aired>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if II1IIIiiI11 == None :
      if 86 - 86: OoO0O00 % OoooooooOO % OoO0O00 / I1IiiI
      II1IIIiiI11 = ''
    except :
     II1IIIiiI11 = ''
     if 56 - 56: OoooooooOO % i11iIiiIii * iIii1I11I1II1 . OoO0O00 * O0
    try :
     if I1II == '' :
      if 23 - 23: i11iIiiIii
      if 39 - 39: o0oOOo0O0Ooo - I1ii11iIi11i % iII111i * OoO0O00 - OOooOOo / iII111i
      iIiiiiii1 ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , '' , 1 , oO0 , O00o00O , I11Ii11iI1 , oOoOoo0 , Iii , credits , O0Oo , iIi1III1I , I1i1111I , OOOooo0OooOoO , I11 , IiIIIII1I1Ii11iI , iiIii1I , IIIIiii , i1iIIi , O0oOo0OOOoO , oOoOoO000OO , I1Ii1 , II1IIIiiI11 )
     else :
      if 78 - 78: I1ii11iIi11i + I11i - O0
      if 10 - 10: I1Ii111 % I1IiiI
      if ooOO00oOOo000 == 'false' and re . search ( "ADULTOS" , IIIIiii1IIii , re . IGNORECASE ) and IIIIiii1IIii . find ( '(+18)' ) >= 0 :
       pass
      else :
       iIiiiiii1 ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , I1II , 1 , oO0 , O00o00O , I11Ii11iI1 , oOoOoo0 , Iii , credits , O0Oo , iIi1III1I , I1i1111I , OOOooo0OooOoO , I11 , IiIIIII1I1Ii11iI , iiIii1I , IIIIiii , i1iIIi , O0oOo0OOOoO , oOoOoO000OO , I1Ii1 , II1IIIiiI11 )
    except :
     O0oo0OO0oOOOo ( '[COLOR red]Erro ao Carregar os dados![/COLOR]' )
  elif re . search ( "#EXTM3U" , I1iIiI11I1 ) or re . search ( "#EXTINF" , I1iIiI11I1 ) :
   oo0OoOooo = I1iIiI11I1 . rstrip ( )
   IiIIi1 = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( oo0OoOooo )
   for O00O00O000OOO , iIOo0O , Ii11 in IiIIi1 :
    if 'tvg-logo' in O00O00O000OOO :
     oO0 = oo0OOo0O ( O00O00O000OOO , 'tvg-logo=[\'"](.*?)[\'"]' )
     if oO0 :
      if oO0 . startswith ( 'http' ) :
       oO0 = oO0
       if 8 - 8: Oo0Ooo + II111iiii * OOooOOo * OoOoOO00 * I11i / IiII
       if 21 - 21: oO0o / OoooooooOO
       if 11 - 11: OOooOOo % Ii1I - i11iIiiIii - oO0o + ooOoO0o + IiII
       if 87 - 87: I1Ii111 * i1IIi / I1ii11iIi11i
      else :
       oO0 = ''
     else :
      oO0 = ''
    else :
     oO0 = ''
     if 6 - 6: o0oOOo0O0Ooo + Oo0Ooo - OoooooooOO % OOooOOo * OoOoOO00
    if 'group-title' in O00O00O000OOO :
     oOoO = oo0OOo0O ( O00O00O000OOO , 'group-title=[\'"](.*?)[\'"]' )
    else :
     oOoO = ''
     if 26 - 26: OoOoOO00 / Oo0Ooo - i1IIi + I11i
    try :
     if 38 - 38: OoooooooOO / I1ii11iIi11i . O0 / i1IIi / Oo0Ooo + iIii1I11I1II1
     if II1I == 'false' and re . search ( "4K" , iIOo0O ) :
      pass
     elif OoOo000oOo0oo == 'false' and re . search ( "FHD" , iIOo0O ) :
      pass
     elif oO0O == 'false' and re . search ( "HD" , iIOo0O ) and not re . search ( "FHD" , iIOo0O ) :
      pass
     elif oOO == 'false' and re . search ( "SD" , iIOo0O ) :
      pass
     elif oOO == 'false' and not re . search ( "SD" , iIOo0O ) and not re . search ( "HD" , iIOo0O ) and not re . search ( "4K" , iIOo0O ) :
      pass
      if 96 - 96: iII111i
     elif int ( iiiIIiIi ) == 1 and re . search ( "Praia" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 1 and not re . search ( "SPORTV" , iIOo0O , re . IGNORECASE ) and not re . search ( "DAZN" , iIOo0O , re . IGNORECASE ) and not re . search ( "ESPN Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "PREMIERE" , iIOo0O , re . IGNORECASE ) and not re . search ( "COPA" , iIOo0O , re . IGNORECASE ) :
      pass
      if 18 - 18: iII111i * I11i - Ii1I
     elif int ( iiiIIiIi ) == 2 and re . search ( "Praia" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 2 and not re . search ( "Band Sports" , iIOo0O , re . IGNORECASE ) and not re . search ( "Combate" , iIOo0O , re . IGNORECASE ) and not re . search ( "Fox Sports" , iIOo0O , re . IGNORECASE ) and not re . search ( "SPORTV" , iIOo0O , re . IGNORECASE ) and not re . search ( "DAZN" , iIOo0O , re . IGNORECASE ) and not re . search ( "ESPN" , iIOo0O , re . IGNORECASE ) and not re . search ( "PREMIERE" , iIOo0O , re . IGNORECASE ) and not re . search ( "COPA" , iIOo0O , re . IGNORECASE ) :
      pass
      if 31 - 31: Oo0Ooo - O0 % OoOoOO00 % oO0o
     elif int ( iiiIIiIi ) == 3 and re . search ( "Sports" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 3 and re . search ( "XY Max" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 3 and not re . search ( "AMC" , iIOo0O , re . IGNORECASE ) and not re . search ( "Canal Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "Cinemax" , iIOo0O , re . IGNORECASE ) and not re . search ( "HBO" , iIOo0O , re . IGNORECASE ) and not re . search ( "Max" , iIOo0O , re . IGNORECASE ) and not re . search ( "Megapix" , iIOo0O , re . IGNORECASE ) and not re . search ( "Paramount" , iIOo0O , re . IGNORECASE ) and not re . search ( "SPACE" , iIOo0O , re . IGNORECASE ) and not re . search ( "TCM" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Action" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Action" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Cult" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Cult" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Cult" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Fun" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Fun" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Pipoca" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Pipoca" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Premium" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Premium" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Touch" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Touch" , iIOo0O , re . IGNORECASE ) and not re . search ( "TNT" , iIOo0O , re . IGNORECASE ) and not re . search ( "A&E" , iIOo0O , re . IGNORECASE ) and not re . search ( "AXN" , iIOo0O , re . IGNORECASE ) and not re . search ( "AXN" , iIOo0O , re . IGNORECASE ) and not re . search ( "FOX" , iIOo0O , re . IGNORECASE ) and not re . search ( "FX" , iIOo0O , re . IGNORECASE ) and not re . search ( "SONY" , iIOo0O , re . IGNORECASE ) and not re . search ( "Studio Universal" , iIOo0O , re . IGNORECASE ) and not re . search ( "SyFy" , iIOo0O , re . IGNORECASE ) and not re . search ( "Universal Channel" , iIOo0O , re . IGNORECASE ) and not re . search ( "Universal TV" , iIOo0O , re . IGNORECASE ) and not re . search ( "Warner" , iIOo0O , re . IGNORECASE ) :
      pass
      if 45 - 45: I1ii11iIi11i + II111iiii * i11iIiiIii
     elif int ( iiiIIiIi ) == 4 and re . search ( "FM" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 4 and not re . search ( "Baby TV" , iIOo0O , re . IGNORECASE ) and not re . search ( "BOOMERANG" , iIOo0O , re . IGNORECASE ) and not re . search ( "CARTOON NETWORK" , iIOo0O , re . IGNORECASE ) and not re . search ( "DISCOVERY KIDS" , iIOo0O , re . IGNORECASE ) and not re . search ( "DISNEY" , iIOo0O , re . IGNORECASE ) and not re . search ( "GLOOB" , iIOo0O , re . IGNORECASE ) and not re . search ( "NAT GEO KIDS" , iIOo0O , re . IGNORECASE ) and not re . search ( "NICKELODEON" , iIOo0O , re . IGNORECASE ) and not re . search ( "NICK JR" , iIOo0O , re . IGNORECASE ) and not re . search ( "PLAYKIDS" , iIOo0O , re . IGNORECASE ) and not re . search ( "TOONCAST" , iIOo0O , re . IGNORECASE ) and not re . search ( "ZOOMOO" , iIOo0O , re . IGNORECASE ) :
      pass
      if 13 - 13: OoooooooOO * oO0o - Ii1I / OOooOOo + I11i + IiII
     elif int ( iiiIIiIi ) == 5 and re . search ( "Kids" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 5 and not re . search ( "Discovery" , iIOo0O , re . IGNORECASE ) and not re . search ( "H2 HD" , iIOo0O , re . IGNORECASE ) and not re . search ( "H2 SD" , iIOo0O , re . IGNORECASE ) and not re . search ( "H2 FHD" , iIOo0O , re . IGNORECASE ) and not re . search ( "History" , iIOo0O , re . IGNORECASE ) and not re . search ( "Nat Geo Wild" , iIOo0O , re . IGNORECASE ) and not re . search ( "National Geographic" , iIOo0O , re . IGNORECASE ) :
      pass
      if 39 - 39: iIii1I11I1II1 - OoooooooOO
     elif int ( iiiIIiIi ) == 6 and re . search ( "Brasileirinhas" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 6 and re . search ( "News" , iIOo0O , re . IGNORECASE ) or int ( iiiIIiIi ) == 6 and re . search ( "Sat" , iIOo0O , re . IGNORECASE ) or int ( iiiIIiIi ) == 6 and re . search ( "FM" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 6 and not re . search ( "Globo" , iIOo0O , re . IGNORECASE ) and not re . search ( "RECORD" , iIOo0O , re . IGNORECASE ) and not re . search ( "RedeTV" , iIOo0O , re . IGNORECASE ) and not re . search ( "Rede Vida" , iIOo0O , re . IGNORECASE ) and not re . search ( "SBT" , iIOo0O , re . IGNORECASE ) and not re . search ( "TV Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "TV Cultura" , iIOo0O , re . IGNORECASE ) and not re . search ( "TV Diario" , iIOo0O , re . IGNORECASE ) and not re . search ( "BAND" , iIOo0O , re . IGNORECASE ) :
      pass
      if 81 - 81: I1ii11iIi11i - O0 * OoooooooOO
     elif int ( iiiIIiIi ) == 7 and not re . search ( "BBB" , iIOo0O , re . IGNORECASE ) and not re . search ( "Big Brother Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "A Fazenda" , iIOo0O , re . IGNORECASE ) :
      pass
      if 23 - 23: II111iiii / oO0o
     elif int ( iiiIIiIi ) == 8 and re . search ( "FM" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 8 and not re . search ( "CNN" , iIOo0O , re . IGNORECASE ) and not re . search ( "NEWS" , iIOo0O , re . IGNORECASE ) :
      pass
     elif IIii11II11II1 == 'false' and re . search ( "Adult" , oOoO , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "ADULT" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Blue Hustler" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PlayBoy" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Redlight" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Sextreme" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SexyHot" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Venus" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "AST TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "ASTTV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "AST.TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "BRAZZERS" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "CANDY" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "CENTOXCENTO" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "DORCEL" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "EROXX" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PASSION" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PENTHOUSE" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PINK-O" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PINK O" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PRIVATE" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "RUSNOCH" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SCT" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SEXT6SENSO" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SHALUN TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "VIVID RED" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Porn" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XY Plus" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XY Mix" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XY Mad" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XXL" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Desire" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Bizarre" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Sexy HOT" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Reality Kings" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Prive TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Hustler TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Extasy" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Evil Angel" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "E'
love = ''
god = '1i1iI != [ ] :
     IiII1i1iI = IiII1i1iI [ 0 ]
    else :
     IiII1i1iI = ''
   else :
    IiII1i1iI = ''
   if '$doregex' in IIiI1Ii and IIiI1Ii != '' and not '$doregex' in IiII1i1iI :
    IIIIiii1IIii = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( ooOO )
    if IIIIiii1IIii != [ ] :
     IIIIiii1IIii = IIIIiii1IIii [ 0 ]
    else :
     IIIIiii1IIii = ''
    if IIiI1Ii != '' :
     Ii1I1 = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( IIiI1Ii )
     if Ii1I1 != [ ] :
      for O0000Oo00o in Ii1I1 :
       IIiI1Ii = IIiI1Ii . replace ( '$doregex[' + O0000Oo00o + ']' , i11i [ O0000Oo00o ] )
       if 71 - 71: OoOoOO00 + iIii1I11I1II1 * oO0o . I1Ii111 % i11iIiiIii % iIii1I11I1II1
      ii1 = urllib2 . Request ( IIiI1Ii )
      if 'referer' in o0OO0 :
       oOOoO0O = re . compile ( '<referer>(.*?)</referer>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( ooOO )
       if oOOoO0O != [ ] :
        ii1 . add_header ( 'Referer' , oOOoO0O [ 0 ] )
      if 'accept' in o0OO0 :
       i1IiiiiiIiII = re . compile ( '<accept>(.*?)</accept>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( ooOO )
       if i1IiiiiiIiII != [ ] :
        ii1 . add_header ( 'Accept' , i1IiiiiiIiII [ 0 ] )
      if 'agent' in o0OO0 :
       iIIiIi = re . compile ( '<agent>(.*?)</agent>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( ooOO )
       if iIIiIi != [ ] :
        ii1 . add_header ( 'User-agent' , iIIiIi [ 0 ] )
       else :
        ii1 . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
      else :
       ii1 . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
       if 63 - 63: OoooooooOO * OoO0O00 / I11i - oO0o . iIii1I11I1II1 + iII111i
      if 'setcookie' in o0OO0 :
       o0oo0O0oOoooO = re . compile ( '<setcookie>(.*?)</setcookie>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( ooOO )
       if o0oo0O0oOoooO != [ ] :
        ii1 . add_header ( 'Cookie' , o0oo0O0oOoooO [ 0 ] )
      if 'proxy' in o0OO0 :
       try :
        if 'http:' in iIii1I111I11I :
         OOOO0O00Ooooo = iIii1I111I11I . split ( 'http://' )
         if 44 - 44: i1IIi % I1IiiI % o0oOOo0O0Ooo
         iIii1I111I11I = urllib2 . ProxyHandler ( { "http" : OOOO0O00Ooooo [ 1 ] } )
         i11IiI1iiI11 = urllib2 . HTTPBasicAuthHandler ( )
         i1Ii11II = urllib2 . build_opener ( iIii1I111I11I , i11IiI1iiI11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( i1Ii11II )
        elif 'https:' in iIii1I111I11I :
         OOOO0O00Ooooo = iIii1I111I11I . split ( 'https://' )
         iIii1I111I11I = urllib2 . ProxyHandler ( { "https" : OOOO0O00Ooooo [ 1 ] } )
         i11IiI1iiI11 = urllib2 . HTTPBasicAuthHandler ( )
         i1Ii11II = urllib2 . build_opener ( iIii1I111I11I , i11IiI1iiI11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( i1Ii11II )
       except :
        pass
      if 'post' in o0OO0 :
       OOoOOOO00 = re . compile ( '<post>(.*?)</post>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( ooOO )
       if OOoOOOO00 != [ ] :
        IIii1III = OOoOOOO00
        ooooOoo0OO = IIii1III . split ( ',' )
        OOoOOOO00 = { }
        for Oo0 in ooooOoo0OO :
         O0000Oo00o = Oo0 . split ( ':' ) [ 0 ] ;
         II1 = Oo0 . split ( ':' ) [ 1 ] ;
         OOoOOOO00 [ O0000Oo00o ] = II1
        OOoOOOO00 = urllib . urlencode ( OOoOOOO00 ) . encode ( )
        O0iII1 = urllib2 . urlopen ( ii1 , OOoOOOO00 )
      else :
       O0iII1 = urllib2 . urlopen ( ii1 )
      I1iIiI11I1 = O0iII1 . read ( ) . decode ( 'utf8' )
    else :
     I1iIiI11I1 = ''
    if IiII1i1iI . startswith ( '$pyFunction:' ) :
     try :
      ii = IiII1i1iI . split ( '$pyFunction:' ) [ 1 ]
      OOoOO0ooo = O0OOo ( ii )
     except :
      OOoOO0ooo = ''
    elif I1iIiI11I1 != '' and IiII1i1iI != '' :
     o00 = re . compile ( IiII1i1iI ) . findall ( I1iIiI11I1 )
     if o00 != [ ] :
      OOoOO0ooo = o00 [ 0 ]
     else :
      OOoOO0ooo = ''
    else :
     OOoOO0ooo = ''
    if OOoOO0ooo != '' :
     i11i [ IIIIiii1IIii ] = OOoOO0ooo
     if 9 - 9: Oo0Ooo % OoooooooOO - Ii1I
     if 43 - 43: OoO0O00 % OoO0O00
  for IIiii11ii1i in regex :
   if 'page' in IIiii11ii1i :
    IIiI1Ii = re . compile ( '<page>(.*?)</page>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
    if IIiI1Ii != [ ] :
     IIiI1Ii = IIiI1Ii [ 0 ]
    else :
     IIiI1Ii = ''
   else :
    IIiI1Ii = ''
   if 'expres' in o0OO0 :
    IiII1i1iI = re . compile ( '<expres>(.*?)</expres>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
    if IiII1i1iI != [ ] :
     IiII1i1iI = IiII1i1iI [ 0 ]
    else :
     IiII1i1iI = ''
   else :
    IiII1i1iI = ''
    if 7 - 7: oO0o - O0 * I11i - o0oOOo0O0Ooo - II111iiii
   if not '$doregex' in IIiI1Ii and IIiI1Ii != '' and '$doregex' in IiII1i1iI :
    IIIIiii1IIii = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
    if IIIIiii1IIii != [ ] :
     IIIIiii1IIii = IIIIiii1IIii [ 0 ]
    else :
     IIIIiii1IIii = ''
    if IIiI1Ii != '' :
     Ii1I1 = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( IiII1i1iI )
     if Ii1I1 != [ ] :
      for O0000Oo00o in Ii1I1 :
       IiII1i1iI = IiII1i1iI . replace ( '$doregex[' + O0000Oo00o + ']' , i11i [ O0000Oo00o ] )
       if 41 - 41: I1IiiI - I1Ii111 % II111iiii . I1Ii111 - I11i
      ii1 = urllib2 . Request ( IIiI1Ii )
      if 'referer' in o0OO0 :
       oOOoO0O = re . compile ( '<referer>(.*?)</referer>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
       if oOOoO0O != [ ] :
        ii1 . add_header ( 'Referer' , oOOoO0O [ 0 ] )
      if 'accept' in o0OO0 :
       i1IiiiiiIiII = re . compile ( '<accept>(.*?)</accept>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
       if i1IiiiiiIiII != [ ] :
        ii1 . add_header ( 'Accept' , i1IiiiiiIiII [ 0 ] )
      if 'agent' in o0OO0 :
       iIIiIi = re . compile ( '<agent>(.*?)</agent>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
       if iIIiIi != [ ] :
        ii1 . add_header ( 'User-agent' , iIIiIi [ 0 ] )
       else :
        ii1 . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
      else :
       ii1 . add_header ( 'User-agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
       if 45 - 45: Ii1I - OOooOOo
      if 'setcookie' in o0OO0 :
       o0oo0O0oOoooO = re . compile ( '<setcookie>(.*?)</setcookie>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
       if o0oo0O0oOoooO != [ ] :
        ii1 . add_header ( 'Cookie' , o0oo0O0oOoooO [ 0 ] )
      if 'proxy' in o0OO0 :
       try :
        if 'http:' in iIii1I111I11I :
         OOOO0O00Ooooo = iIii1I111I11I . split ( 'http://' )
         if 70 - 70: OoO0O00 % I1IiiI / I1IiiI . I11i % ooOoO0o . II111iiii
         iIii1I111I11I = urllib2 . ProxyHandler ( { "http" : OOOO0O00Ooooo [ 1 ] } )
         i11IiI1iiI11 = urllib2 . HTTPBasicAuthHandler ( )
         i1Ii11II = urllib2 . build_opener ( iIii1I111I11I , i11IiI1iiI11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( i1Ii11II )
        elif 'https:' in iIii1I111I11I :
         OOOO0O00Ooooo = iIii1I111I11I . split ( 'https://' )
         iIii1I111I11I = urllib2 . ProxyHandler ( { "https" : OOOO0O00Ooooo [ 1 ] } )
         i11IiI1iiI11 = urllib2 . HTTPBasicAuthHandler ( )
         i1Ii11II = urllib2 . build_opener ( iIii1I111I11I , i11IiI1iiI11 , urllib2 . HTTPHandler )
         urllib2 . install_opener ( i1Ii11II )
       except :
        pass
      if 'post' in o0OO0 :
       OOoOOOO00 = re . compile ( '<post>(.*?)</post>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( IIiii11ii1i )
       if OOoOOOO00 != [ ] :
        IIii1III = OOoOOOO00
        ooooOoo0OO = IIii1III . split ( ',' )
        OOoOOOO00 = { }
        for Oo0 in ooooOoo0OO :
         O0000Oo00o = Oo0 . split ( ':' ) [ 0 ] ;
         II1 = Oo0 . split ( ':' ) [ 1 ] ;
         OOoOOOO00 [ O0000Oo00o ] = II1
        OOoOOOO00 = urllib . urlencode ( OOoOOOO00 ) . encode ( )
        O0iII1 = urllib2 . urlopen ( ii1 , OOoOOOO00 )
      else :
       O0iII1 = urllib2 . urlopen ( ii1 )
      I1iIiI11I1 = O0iII1 . read ( ) . decode ( 'utf8' )
    else :
     I1iIiI11I1 = ''
    if IiII1i1iI . startswith ( '$pyFunction:' ) :
     try :
      ii = IiII1i1iI . split ( '$pyFunction:' ) [ 1 ]
      OOoOO0ooo = O0OOo ( ii )
     except :
      OOoOO0ooo = ''
    elif I1iIiI11I1 != '' and IiII1i1iI != '' :
     o00 = re . compile ( IiII1i1iI ) . findall ( I1iIiI11I1 )
     if o00 != [ ] :
      OOoOO0ooo = o00 [ 0 ]
     else :
      OOoOO0ooo = ''
    else :
     OOoOO0ooo = ''
    if OOoOO0ooo != '' :
     i11i [ IIIIiii1IIii ] = OOoOO0ooo
     if 10 - 10: Ii1I - i11iIiiIii . I1ii11iIi11i % i1IIi
  for OooOOOoOoo0O0 in regex :
   if 'page' in OooOOOoOoo0O0 :
    IIiI1Ii = re . compile ( '<page>(.*?)</page>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OooOOOoOoo0O0 )
    if IIiI1Ii != [ ] :
     IIiI1Ii = IIiI1Ii [ 0 ]
    else :
     IIiI1Ii = ''
   else :
    IIiI1Ii = ''
   if 'expres' in o0OO0 :
    IiII1i1iI = re . compile ( '<expres>(.*?)</expres>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OooOOOoOoo0O0 )
    if IiII1i1iI != [ ] :
     IiII1i1iI = IiII1i1iI [ 0 ]
    else :
     IiII1i1iI = ''
   else :
    IiII1i1iI = ''
    if 81 - 81: IiII - o0oOOo0O0Ooo - Oo0Ooo - Ii1I / OOooOOo % I11i
   if not IIiI1Ii != '' and '$doregex' in IiII1i1iI :
    IIIIiii1IIii = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OooOOOoOoo0O0 )
    if IIIIiii1IIii != [ ] :
     IIIIiii1IIii = IIIIiii1IIii [ 0 ]
    else :
     IIIIiii1IIii = ''
    Ii1I1 = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( IiII1i1iI )
    if Ii1I1 != [ ] :
     for O0000Oo00o in Ii1I1 :
      IiII1i1iI = IiII1i1iI . replace ( '$doregex[' + O0000Oo00o + ']' , i11i [ O0000Oo00o ] )
    if IiII1i1iI . startswith ( '$pyFunction:' ) :
     try :
      ii = IiII1i1iI . split ( '$pyFunction:' ) [ 1 ]
      OOoOO0ooo = O0OOo ( ii )
     except :
      OOoOO0ooo = ''
    else :
     OOoOO0ooo = ''
    if OOoOO0ooo != '' :
     i11i [ IIIIiii1IIii ] = OOoOO0ooo
  try :
   if '$doregex' in url :
    Ii1I1 = re . compile ( '\$doregex\[([^\]]*)\]' ) . findall ( url )
    if Ii1I1 != [ ] :
     for O0000Oo00o in Ii1I1 :
      url = url . replace ( '$doregex[' + O0000Oo00o + ']' , i11i [ O0000Oo00o ] )
  except :
   pass
 return url
 if 52 - 52: I1ii11iIi11i / iII111i
 if 37 - 37: I11i
def I1iiIi111I ( link , regex ) :
 if 83 - 83: O0
 if not 'false' in str ( regex ) and '$doregex' in link :
  oOOOOOo = I1IiiIiii1 ( link , regex )
 else :
  oOOOOOo = link
 try :
  if not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . startswith ( 'https://drive.google.com' ) == True :
   if 50 - 50: I1Ii111 + ooOoO0o + iII111i
   i11i = oOOOOOo . replace ( 'http' , 'plugin://plugin.video.gdrive?mode=streamURL&amp;url=http' )
   if 15 - 15: I11i
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . startswith ( 'http://drive.google.com' ) == True :
   if 13 - 13: iIii1I11I1II1 * OoOoOO00 / I1Ii111 % ooOoO0o + oO0o
   i11i = oOOOOOo . replace ( 'http' , 'plugin://plugin.video.gdrive?mode=streamURL&amp;url=http' )
   if 41 - 41: I1ii11iIi11i
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'streamtape.com' ) >= 0 :
   link = iIi1i1iIi1Ii1 ( oOOOOOo )
   i11i = link
   if 5 - 5: Oo0Ooo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'ultracine_page' ) >= 0 :
   link = OooOooO0O0o0 ( oOOOOOo )
   i11i = link
   if 100 - 100: Ii1I + iIii1I11I1II1
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'netcine2_page' ) >= 0 :
   link = III1II1i ( oOOOOOo )
   i11i = link
   if 59 - 59: IiII
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'series_canaismax' ) >= 0 :
   oOoO0OOO00O = oOOOOOo . replace ( 'idioma;' , 'idioma' )
   link = Oo0oO00 ( oOoO0OOO00O )
   i11i = link
   if 73 - 73: o0oOOo0O0Ooo % OoO0O00 + IiII + I1IiiI
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'filmes_canaismax' ) >= 0 :
   oOoO0OOO00O = oOOOOOo . replace ( 'idioma;' , 'idioma' )
   link = III11i1iIIiiI ( oOoO0OOO00O )
   i11i = link
   if 80 - 80: i1IIi + o0oOOo0O0Ooo + IiII * I11i
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'eu-central-1.edge.mycdn.live' ) >= 0 :
   if 65 - 65: I1ii11iIi11i % I11i % iIii1I11I1II1 - OoooooooOO - I1ii11iIi11i - O0
   i11i = oOOOOOo
   if 58 - 58: IiII + iIii1I11I1II1
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( 'canaismax_page' ) >= 0 :
   oO0OOo00o0O0O = O0oOoo ( oOOOOOo )
   i11i = oO0OOo00o0O0O + '|Referer=https://canaismax.com/|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36'
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . startswith ( 'https://youtube.com/' ) == True or oOOOOOo . startswith ( 'https://www.youtube.com/' ) == True :
   try :
    o0II1IIi1iII1i = Ii1i1 ( oOOOOOo )
    if o0II1IIi1iII1i == None :
     if 26 - 26: O0
     i11i = ''
    else :
     i11i = o0II1IIi1iII1i
   except :
    i11i = ''
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . startswith ( 'https://photos.app' ) == True :
   try :
    I1iIiI11I1 = iIIii ( oOOOOOo , 'https://photos.google.com/' )
    iiiIi = re . compile ( '<meta property="og:video" content="(.+?)"' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( I1iIiI11I1 )
    if iiiIi != [ ] :
     i11i = iiiIi [ 0 ] . replace ( '-m18' , '-m22' )
    else :
     i11i = ''
   except :
    i11i = ''
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . startswith ( 'magnet:?xt=' ) == True :
   i11i = 'plugin://plugin.video.elementum/play?uri=' + oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = 'plugin://plugin.video.elementum/play?uri=' + oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.mp4' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.mkv' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.wmv' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.wma' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.avi' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.mp3' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.ac3' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) and oOOOOOo . find ( '.rmvb' ) >= 0 and not oOOOOOo . startswith ( 'magnet:?xt=' ) == True and not oOOOOOo . find ( '.torrent' ) >= 0 :
   i11i = oOOOOOo
  elif not oOOOOOo . startswith ( "plugin://plugin" ) :
   i11i = oOOOOOo
  elif oOOOOOo . startswith ( "plugin://plugin" ) :
   i11i = oOOOOOo
  return i11i
 except :
  i11i = ''
  return i11i
  if 62 - 62: O0 . Oo0Ooo
  if 33 - 33: Oo0Ooo / iIii1I11I1II1 % i1IIi
  if 76 - 76: Ii1I + iIii1I11I1II1 + OoOoOO00 . OoO0O00
  if 49 - 49: IiII / ooOoO0o / OOooOOo
  if 25 - 25: I1IiiI % O0 + i1IIi - ooOoO0o
def III1IiI1i1i ( ) :
 try :
  try :
   II1III = json . loads ( open ( OoOo ) . read ( ) )
  except :
   II1III = ''
  o0OOOOOo0 = len ( II1III )
  if int ( o0OOOOOo0 ) > 0 :
   for I1i1iii in II1III :
    IIIIiii1IIii = I1i1iii [ 0 ]
    ooooO0oOoOOoO = I1i1iii [ 1 ]
    try :
     oooOoO = base64 . b64decode ( base64 . b16decode ( ooooO0oOoOOoO ) )
    except :
     oooOoO = ooooO0oOoOOoO
    try :
     iI1I11iIIi1 = oooOoO . decode ( 'utf-8' )
    except :
     iI1I11iIIi1 = oooOoO
     if 62 - 62: OOooOOo / II111iiii + OoOoOO00 % ooOoO0o / OoOoOO00 + I1ii11iIi11i
    IiI11I111 = I1i1iii [ 2 ]
    iIiII = I1i1iii [ 3 ]
    try :
     Ooo000O00 = base64 . b64decode ( base64 . b16decode ( iIiII ) )
    except :
     Ooo000O00 = iIiII
    try :
     i1iI1Iiii1I = Ooo000O00 . decode ( 'utf-8' )
    except :
     i1iI1Iiii1I = Ooo000O00
    iiIiII11i1 = I1i1iii [ 4 ]
    try :
     O00o00O = I1i1iii [ 5 ]
     if O00o00O == None :
      raise
    except :
     if IiIiiI . getSetting ( 'use_thumb' ) == "true" :
      O00o00O = iiIiII11i1
     else :
      O00o00O = oo
    III1ii1I = I1i1iii [ 6 ]
    if 9 - 9: I11i / OoOoOO00 / II111iiii + I1Ii111
    ooO0oo0o0 = I1i1iii [ 7 ]
    if 71 - 71: iII111i / Oo0Ooo
    if IiI11I111 == 0 :
     try :
      if 87 - 87: I1ii11iIi11i + I1ii11iIi11i - I1ii11iIi11i % O0
      I1I1iII1i ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , iI1I11iIIi1 , i1iI1Iiii1I , iiIiII11i1 , O00o00O , III1ii1I . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
     except :
      pass
    elif IiI11I111 == 11 or IiI11I111 == 16 or IiI11I111 == 17 or IiI11I111 == 18 :
     try :
      iII1Iii1I11i ( str ( IIIIiii1IIii ) . encode ( 'utf-8' , 'ignore' ) , iI1I11iIIi1 , IiI11I111 , i1iI1Iiii1I , iiIiII11i1 , O00o00O , III1ii1I . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , False , ooO0oo0o0 )
     except :
      pass
    elif IiI11I111 > 0 and IiI11I111 < 7 :
     try :
      iIiiiiii1 ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , iI1I11iIIi1 , IiI11I111 , iiIiII11i1 , O00o00O , III1ii1I . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
     except :
      pass
    else :
     try :
      iII1Iii1I11i ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , iI1I11iIIi1 , IiI11I111 , i1iI1Iiii1I , iiIiII11i1 , O00o00O , III1ii1I . encode ( 'utf-8' ) , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
     except :
      pass
    xbmcplugin . setContent ( i1 , 'movies' )
    xbmcplugin . endOfDirectory ( i1 )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Nada Adicionado nos Favoritos' )
 except :
  pass
  if 13 - 13: II111iiii
  if 57 - 57: Ii1I - OoooooooOO
def OOoOO0O0o0 ( name , url , fav_mode , subtitle , iconimage , fanart , description , regex ) :
 I1II1 = [ ]
 if os . path . exists ( OoOo ) == False :
  iIiIi11iI = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
  Oo0O00O000 = xbmcvfs . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , iIiIi11iI ) )
  if os . path . exists ( Oo0O00O000 ) == False :
   os . mkdir ( Oo0O00O000 )
  xbmc . sleep ( 7 )
  I1II1 . append ( ( name , url , fav_mode , subtitle , iconimage , fanart , description , regex ) )
  I1i111I = open ( OoOo , "w" )
  I1i111I . write ( json . dumps ( I1II1 ) )
  I1i111I . close ( )
  O0oo0OO0oOOOo ( 'Adicionado aos Favoritos do ' + __addonname__ )
  if 89 - 89: OoO0O00 / OoO0O00
 else :
  I1i111I = open ( OoOo ) . read ( )
  I1iIiI11I1 = json . loads ( I1i111I )
  I1iIiI11I1 . append ( ( name , url , fav_mode , subtitle , iconimage , fanart , description , regex ) )
  iIIIiiiiIiI1III = open ( OoOo , "w" )
  iIIIiiiiIiI1III . write ( json . dumps ( I1iIiI11I1 ) )
  iIIIiiiiIiI1III . close ( )
  O0oo0OO0oOOOo ( 'Adicionado aos Favoritos do ' + __addonname__ )
  if 26 - 26: i1IIi
  if 35 - 35: I1IiiI
  if 80 - 80: oO0o % oO0o % O0 - i11iIiiIii . iII111i / O0
def IiIi1Ii ( name ) :
 I1iIiI11I1 = json . loads ( open ( OoOo ) . read ( ) )
 for oOo000O in range ( len ( I1iIiI11I1 ) ) :
  if I1iIiI11I1 [ oOo000O ] [ 0 ] == name :
   del I1iIiI11I1 [ oOo000O ]
   iIIIiiiiIiI1III = open ( OoOo , "w" )
   iIIIiiiiIiI1III . write ( json . dumps ( I1iIiI11I1 ) )
   iIIIiiiiIiI1III . close ( )
   break
 O0oo0OO0oOOOo ( 'Removido dos Favoritos do ' + __addonname__ )
 if 39 - 39: Ii1I
 if 24 - 24: i11iIiiIii - Ii1I + oO0o * I1IiiI
def iIiiiiii1 ( name , url , mode , iconimage , fanart , description , genre , date , credits , year , director , writer , duration , premiered , studio , rate , originaltitle , country , rating , userrating , votes , aired , folder = True ) :
 if mode == 1 :
  if url > '' :
   if 94 - 94: I1IiiI + iIii1I11I1II1 / O0 - OoooooooOO % I1ii11iIi11i
   if 64 - 64: I11i + OoO0O00
   if 25 - 25: I1IiiI . ooOoO0o + I1IiiI % Ii1I * iIii1I11I1II1
   if 31 - 31: i11iIiiIii + OOooOOo - O0
   if 51 - 51: OoO0O00 * i1IIi / Ii1I * OOooOOo + ooOoO0o % I1ii11iIi11i
   i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
  else :
   i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 else :
  i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 IiIii1ii = xbmcgui . ListItem ( name )
 if folder :
  IiIii1ii . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  IiIii1ii . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if date != '' and date != None :
  description += '\n\nDate: %s' % date
 IiIii1ii . setInfo ( 'video' , { 'title' : name , 'plot' : description } )
 try :
  IiIii1ii . setInfo ( 'video' , { 'genre' : str ( genre ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'dateadded' : str ( date ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'credits' : str ( credits ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'director' : str ( director ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'writer' : str ( writer ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'duration' : int ( duration ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'premiered' : str ( premiered ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'studio' : str ( studio ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'mpaa' : str ( rate ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'originaltitle' : str ( originaltitle ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'country' : str ( country ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'rating' : float ( rating ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'userrating' : int ( userrating ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'votes' : str ( votes ) } )
 except :
  pass
 try :
  IiIii1ii . setRating ( "imdb" , float ( rating ) , int ( votes ) , True )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'aired' : str ( aired ) } )
 except :
  pass
  if 34 - 34: oO0o * OoooooooOO + Ii1I + i11iIiiIii
 if fanart > '' :
  IiIii1ii . setProperty ( 'fanart_image' , fanart )
 else :
  IiIii1ii . setProperty ( 'fanart_image' , '' + OoOooOOOO + '/fanart.jpg' )
 try :
  iiIi = name . decode ( 'utf-8' )
 except :
  iiIi = name
 try :
  O0oo0 = json . dumps ( iiIi )
 except :
  O0oo0 = iiIi
 try :
  iii1iiii11I = [ ]
  if iI == 'true' and mode != 4 and mode != 7 and mode != 8 and mode != 9 and mode != 10 and mode != 12 and mode != 15 :
   if O0oo0 in Iii111II :
    iii1iiii11I . append ( ( 'Remover dos Favoritos do ' + __addonname__ , 'RunPlugin(%s?mode=14&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    o0oO0o0oo0O0 = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=false&fav_mode=%s' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , '' , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) , str ( mode ) ) )
    iii1iiii11I . append ( ( 'Adicionar aos Favoritos do ' + __addonname__ , 'RunPlugin(%s)' % o0oO0o0oo0O0 ) )
  iii1iiii11I . append ( ( 'Informação' , 'RunPlugin(%s?mode=19&name=%s&description=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( description ) ) ) )
  IiIii1ii . addContextMenuItems ( iii1iiii11I )
 except :
  pass
 xbmcplugin . addDirectoryItem ( handle = i1 , url = i1iiIiI1Ii1i , listitem = IiIii1ii , isFolder = folder )
 if 98 - 98: IiII * iIii1I11I1II1 . Ii1I * Oo0Ooo / I1ii11iIi11i + ooOoO0o
def iII1Iii1I11i ( name , url , mode , subtitle , iconimage , fanart , description , genre , date , credits , year , director , writer , duration , premiered , studio , rate , originaltitle , country , rating , userrating , votes , aired , folder = True , regex = False ) :
 if mode == 1 :
  if url > '' :
   i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
  else :
   i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 else :
  if regex :
   i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&subtitle=" + urllib . quote_plus ( subtitle ) + "&description=" + urllib . quote_plus ( description ) + "&regex=" + urllib . quote_plus ( regex )
  else :
   i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&subtitle=" + urllib . quote_plus ( subtitle ) + "&description=" + urllib . quote_plus ( description )
 IiIii1ii = xbmcgui . ListItem ( name )
 if folder :
  IiIii1ii . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  IiIii1ii . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if mode == 16 or mode == 17 :
  IiIii1ii . setProperty ( 'IsPlayable' , 'true' )
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 IiIii1ii . setInfo ( 'video' , { 'title' : name , 'plot' : description } )
 try :
  IiIii1ii . setInfo ( 'video' , { 'genre' : str ( genre ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'dateadded' : str ( date ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'credits' : str ( credits ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'director' : str ( director ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'writer' : str ( writer ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'duration' : int ( duration ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'premiered' : str ( premiered ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'studio' : str ( studio ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'mpaa' : str ( rate ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'originaltitle' : str ( originaltitle ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'country' : str ( country ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'rating' : float ( rating ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'userrating' : int ( userrating ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'votes' : str ( votes ) } )
 except :
  pass
 try :
  IiIii1ii . setRating ( "imdb" , float ( rating ) , int ( votes ) , True )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'aired' : str ( aired ) } )
 except :
  pass
 if fanart > '' :
  IiIii1ii . setProperty ( 'fanart_image' , fanart )
 else :
  IiIii1ii . setProperty ( 'fanart_image' , '' + OoOooOOOO + '/fanart.jpg' )
 try :
  iiIi = name . decode ( 'utf-8' )
 except :
  iiIi = name
 try :
  O0oo0 = json . dumps ( iiIi )
 except :
  O0oo0 = iiIi
 try :
  iii1iiii11I = [ ]
  if iI == 'true' and mode != 4 and mode != 7 and mode != 8 and mode != 9 and mode != 10 and mode != 12 and mode != 15 :
   if O0oo0 in Iii111II :
    iii1iiii11I . append ( ( 'Remover dos Favoritos do ' + __addonname__ , 'RunPlugin(%s?mode=14&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    if regex :
     o0oO0o0oo0O0 = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=%s&fav_mode=%s' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( subtitle . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) , urllib . quote_plus ( regex ) , str ( mode ) ) )
    else :
     o0oO0o0oo0O0 = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=false&fav_mode=%s' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( subtitle . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) , str ( mode ) ) )
    iii1iiii11I . append ( ( 'Adicionar aos Favoritos do ' + __addonname__ , 'RunPlugin(%s)' % o0oO0o0oo0O0 ) )
  iii1iiii11I . append ( ( 'Informação' , 'RunPlugin(%s?mode=19&name=%s&description=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( description ) ) ) )
  IiIii1ii . addContextMenuItems ( iii1iiii11I )
 except :
  pass
 xbmcplugin . addDirectoryItem ( handle = i1 , url = i1iiIiI1Ii1i , listitem = IiIii1ii , isFolder = folder )
 if 25 - 25: oO0o
def I1I1iII1i ( name , url , subtitle , iconimage , fanart , description , genre , date , credits , year , director , writer , duration , premiered , studio , rate , originaltitle , country , rating , userrating , votes , aired , folder = False ) :
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 if iconimage > '' :
  oO0 = iconimage
 else :
  oO0 = 'DefaultVideo.png'
 IiIii1ii = xbmcgui . ListItem ( name )
 IiIii1ii . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : oO0 } )
 if url . startswith ( "plugin://plugin.video.f4mTester" ) :
  IiIii1ii . setProperty ( 'IsPlayable' , 'false' )
 else :
  IiIii1ii . setProperty ( 'IsPlayable' , 'true' )
 if fanart > '' :
  IiIii1ii . setProperty ( 'fanart_image' , fanart )
 else :
  IiIii1ii . setProperty ( 'fanart_image' , '' + OoOooOOOO + '/fanart.jpg' )
 try :
  O0oo0 = json . dumps ( name )
 except :
  O0oo0 = name
 Iii11111iiI = name
 o0OOOOoO = description
 IiIii1ii . setInfo ( 'video' , { 'plot' : description } )
 try :
  IiIii1ii . setInfo ( 'video' , { 'genre' : str ( genre ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'dateadded' : str ( date ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'credits' : str ( credits ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'year' : int ( year ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'director' : str ( director ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'writer' : str ( writer ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'duration' : int ( duration ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'premiered' : str ( premiered ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'studio' : str ( studio ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'mpaa' : str ( rate ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'originaltitle' : str ( originaltitle ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'country' : str ( country ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'rating' : float ( rating ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'userrating' : int ( userrating ) } )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'votes' : str ( votes ) } )
 except :
  pass
 try :
  IiIii1ii . setRating ( "imdb" , float ( rating ) , int ( votes ) , True )
 except :
  pass
 try :
  IiIii1ii . setInfo ( 'video' , { 'aired' : str ( aired ) } )
 except :
  pass
  if 70 - 70: II111iiii + I1Ii111 + i11iIiiIii - i1IIi / IiII
 if subtitle > '' :
  IiIii1ii . setSubtitles ( [ subtitle ] )
 try :
  iiIi = name . decode ( 'utf-8' )
 except :
  iiIi = name
 try :
  O0oo0 = json . dumps ( iiIi )
 except :
  O0oo0 = iiIi
 try :
  iii1iiii11I = [ ]
  if iI == 'true' :
   if O0oo0 in Iii111II :
    iii1iiii11I . append ( ( 'Remover dos Favoritos do ' + __addonname__ , 'RunPlugin(%s?mode=14&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    o0oO0o0oo0O0 = ( '%s?mode=13&name=%s&url=%s&subtitle=%s&iconimage=%s&fanart=%s&description=%s&regex=false&fav_mode=0' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( url . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( base64 . b16encode ( base64 . b64encode ( subtitle . encode ( 'utf-8' ) ) ) ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) , urllib . quote_plus ( description ) ) )
    iii1iiii11I . append ( ( 'Adicionar aos Favoritos do ' + __addonname__ , 'RunPlugin(%s)' % o0oO0o0oo0O0 ) )
  iii1iiii11I . append ( ( 'Informação' , 'RunPlugin(%s?mode=19&name=%s&description=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( description ) ) ) )
  IiIii1ii . addContextMenuItems ( iii1iiii11I )
 except :
  pass
 xbmcplugin . addDirectoryItem ( handle = i1 , url = url , listitem = IiIii1ii , isFolder = folder )
 if 40 - 40: I1ii11iIi11i * I1Ii111
def iiii111IiIIi1 ( ) :
 try :
  iIiIi11iI = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
  Oo0O00O000 = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , iIiIi11iI ) )
  if os . path . exists ( Oo0O00O000 ) == False :
   os . mkdir ( Oo0O00O000 )
  xbmc . sleep ( 7 )
  if 38 - 38: O0 . Oo0Ooo + OoOoOO00 - oO0o
  if 43 - 43: iII111i + Oo0Ooo / OoooooooOO
  OO0O000 = os . path . join ( Oo0O00O000 , "password.txt" )
  iiIiI1i1 = os . path . isfile ( OO0O000 )
  if iiIiI1i1 == False :
   I1 = '0069'
   ii1I1 = base64 . b64encode ( I1 . encode ( ) ) . decode ( 'utf-8' )
   i1I1IiiIi1i = open ( OO0O000 , 'w' )
   i1I1IiiIi1i . write ( ii1I1 )
   i1I1IiiIi1i . close ( )
 except :
  pass
  if 24 - 24: O0 + o0oOOo0O0Ooo * Ii1I - I1Ii111
  if 10 - 10: i11iIiiIii
  if 21 - 21: I1IiiI / iII111i
  if 69 - 69: ooOoO0o % ooOoO0o
def Ooo00OOOOOO0 ( timestamp ) :
 try :
  if timestamp > '' :
   i1II = datetime . fromtimestamp ( int ( timestamp ) )
   OO0oo00oOO = i1II . strftime ( '%d/%m/%Y às %H:%M:%S' )
   return str ( OO0oo00oOO )
  else :
   I1i = ''
   return I1i
 except :
  I1i = ''
  return I1i
  if 82 - 82: OoO0O00 + OoO0O00 % o0oOOo0O0Ooo % i11iIiiIii / I1Ii111 % OoooooooOO
def oOO00oOOo ( ) :
 I1iiIi1 = IiIiiI . getSetting ( 'username' )
 i1iiiIi1Iii = IiIiiI . getSetting ( 'password' )
 if I1iiIi1 > '' and i1iiiIi1Iii > '' :
  try :
   o0oO0O = OO0Oooo0 . replace ( '/get.php' , '' ) + '/player_api.php?username=%s&password=%s' % ( I1iiIi1 , i1iiiIi1Iii )
   OO0ooooO0 = iIIii ( o0oO0O , '' )
   OOO0o0O00oO0 = re . compile ( '"status":"(.+?)".+?"exp_date":"(.+?)".+?"is_trial":"(.+?)".+?"created_at":"(.+?)".+?max_connections":"(.+?)"' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OO0ooooO0 )
   if OOO0o0O00oO0 != [ ] :
    i1I1iII1i1iI = str ( OOO0o0O00oO0 [ 0 ] [ 0 ] )
    I1iI1I1ii1 = str ( OOO0o0O00oO0 [ 0 ] [ 1 ] )
    iIIi1 = str ( OOO0o0O00oO0 [ 0 ] [ 2 ] )
    o0Ooo0o0Oo = str ( OOO0o0O00oO0 [ 0 ] [ 3 ] )
    oo00ooooOOo00 = str ( OOO0o0O00oO0 [ 0 ] [ 4 ] )
    if 16 - 16: i11iIiiIii / i1IIi % OOooOOo
    if i1I1iII1i1iI > '' and i1I1iII1i1iI == 'Active' :
     O00Oooo00 = 'Ativo'
    else :
     O00Oooo00 = 'Expirado'
     if 93 - 93: O0 / ooOoO0o + I1IiiI
    if I1iI1I1ii1 > '' :
     I111 = Ooo00OOOOOO0 ( str ( I1iI1I1ii1 ) )
    else :
     I111 = ''
     if 17 - 17: iIii1I11I1II1 + I1IiiI
    if iIIi1 > '' and iIIi1 == '0' :
     oO0oiIiI = 'Não'
    else :
     oO0oiIiI = 'Sim'
     if 46 - 46: iII111i
    if o0Ooo0o0Oo > '' :
     ooIiI11i1I11111 = Ooo00OOOOOO0 ( str ( o0Ooo0o0Oo ) )
    else :
     ooIiI11i1I11111 = ''
     if 34 - 34: I1IiiI * OoOoOO00 * oO0o + I1ii11iIi11i
    if oo00ooooOOo00 > '' :
     II1i = oo00ooooOOo00
    else :
     II1i = ''
     if 62 - 62: I11i / oO0o % Oo0Ooo . OoooooooOO / i11iIiiIii / I1Ii111
    try :
     xbmcaddon . Addon ( ) . setSetting ( "status_vip" , O00Oooo00 )
     xbmcaddon . Addon ( ) . setSetting ( "created_at" , ooIiI11i1I11111 )
     xbmcaddon . Addon ( ) . setSetting ( "exp_date" , I111 )
     xbmcaddon . Addon ( ) . setSetting ( "is_trial" , oO0oiIiI )
     xbmcaddon . Addon ( ) . setSetting ( "max_connection" , II1i )
    except :
     pass
  except :
   try :
    xbmcaddon . Addon ( ) . setSetting ( "status_vip" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "created_at" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "exp_date" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "is_trial" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "max_connection" , '' )
   except :
    pass
    if 60 - 60: I1IiiI % oO0o / o0oOOo0O0Ooo % oO0o * i11iIiiIii / iII111i
def i1Ii11IIi1 ( ) :
 I1iiIi1 = IiIiiI . getSetting ( 'username' )
 i1iiiIi1Iii = IiIiiI . getSetting ( 'password' )
 if 7 - 7: iIii1I11I1II1 - i1IIi
 I1ii1i1iiii = IiIiiI . getSetting ( 'exibirvip' )
 I1i1I = IiIiiI . getSetting ( 'saida' )
 if I1iiIi1 > '' and i1iiiIi1Iii > '' :
  oOO00oOOo ( )
 if int ( I1i1I ) == 1 :
  i1111iI1 = 'm3u8'
 else :
  i1111iI1 = 'ts'
 if I1ii1i1iiii == 'true' :
  if I1iiIi1 > '' and i1iiiIi1Iii > '' :
   ooooO0oOoOOoO = '' + OO0Oooo0 + '?username=%s&password=%s&type=m3u_plus&output=%s' % ( I1iiIi1 , i1iiiIi1Iii , i1111iI1 )
   if 76 - 76: OoooooooOO - II111iiii % OoOoOO00 + oO0o + iIii1I11I1II1 . OoOoOO00
   iIiiiiii1 ( O000OOo00oo , ooooO0oOoOOoO , 1 , oo0OOo , ooOOO00Ooo , i1I1i , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  else :
   if 16 - 16: o0oOOo0O0Ooo . I11i
   if 50 - 50: ooOoO0o * OoOoOO00 + I1ii11iIi11i - i11iIiiIii + Oo0Ooo * I1ii11iIi11i
   iIiiiiii1 ( O000OOo00oo , '' , 9 , __icon__ , '' , i1I1i , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
   if 20 - 20: I1Ii111 / o0oOOo0O0Ooo % OoOoOO00
def O00oo0O00 ( ) :
 o0oO00o = Ii11Ii1I ( heading = "Digite algo para pesquisar" )
 if ( not o0oO00o ) : return False , 0
 OOO0OoO0oo0OO = urllib . quote_plus ( o0oO00o )
 iIiiiiii1 ( '[COLOR white][B]PESQUISAR NOVAMENTE...[/B][/COLOR]' , '' , 7 , i1i , iiI111I1iIiI , iIIIIi1iiIi1 , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 try :
  ooO0oO00O0o ( O00O0oOO00O00 + '?pesquisar=' + OOO0OoO0oo0OO , '' )
 except :
  pass
 xbmcplugin . endOfDirectory ( i1 )
 if 31 - 31: I11i * oO0o . Ii1I
def i1Ii11ii1I ( name ) :
 if name == 'Wall' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
  except :
   pass
 if name == 'List' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
  except :
   pass
 if name == 'Poster' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(51)' )
  except :
   pass
 if name == 'Shift' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(53)' )
  except :
   pass
 if name == 'InfoWall' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(54)' )
  except :
   pass
 if name == 'WideList' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(55)' )
  except :
   pass
 if name == 'Fanart' :
  try :
   xbmc . executebuiltin ( 'Container.SetViewMode(502)' )
  except :
   pass
   if 66 - 66: Oo0Ooo / OoooooooOO % I1Ii111 / iII111i + OoooooooOO
   if 6 - 6: II111iiii % I1Ii111
def I1iiIiIII ( msg ) :
 import platform
 if platform . system ( ) == 'Linux' :
  o0IiIiI111IIII1 = 'Android 9; Mobile; rv:68.0'
 elif platform . system ( ) == 'Windows' :
  o0IiIiI111IIII1 = 'Windows NT 6.1; WOW64; rv:54.0'
 elif platform . system ( ) == 'IOS' :
  o0IiIiI111IIII1 = 'iPhone; CPU iPhone OS 12_2 like Mac OS X'
 else :
  o0IiIiI111IIII1 = ''
 i1oOOoo0o0OOOO = {
 "Accept-Language" : "en-US,en;q=0.5" ,
 "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : o0IiIiI111IIII1 ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8" ,
 "Referer" : "ADD-ON KelTec Media'Play (Torrent TV-1.1.0+Matrix)+SSL2" ,
 "Connection" : "keep-alive"
 }
 i1IiII1III = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=4w80f35j2b" , headers = i1oOOoo0o0OOOO )
 O0iII1 = urllib2 . urlopen ( i1IiII1III ) . read ( )
 if 100 - 100: OOooOOo * O0 + I1IiiI + OoOoOO00 . OOooOOo
 if 73 - 73: oO0o . II111iiii * iII111i % oO0o + OoOoOO00 - OoO0O00
 I1iIi1iIIIIiI = 0
 xbmc . sleep ( I1iIi1iIIIIiI * 0 )
 if 94 - 94: IiII * I11i * OoooooooOO / o0oOOo0O0Ooo . IiII - o0oOOo0O0Ooo
 if 13 - 13: OOooOOo / IiII - OoO0O00 / OOooOOo . i1IIi
def OOoO0 ( ) :
 try :
  IiI1i111i = xbmc . translatePath ( OoOooOOOO + '/check.txt' )
  iiIiI1i1 = os . path . isfile ( IiI1i111i )
  OOoO0 = IiIiiI . getSetting ( 'check_addon' )
  if 26 - 26: iIii1I11I1II1 * o0oOOo0O0Ooo . I11i
  if iiIiI1i1 == True :
   if 10 - 10: I1Ii111 * oO0o % Oo0Ooo - I11i % Oo0Ooo
   O0oooo000oO0 = open ( IiI1i111i , 'r+' )
   Oo = IiIiiI . getSetting ( 'elementum' )
   i1I1i1i = IiIiiI . getSetting ( 'youtube' )
   if O0oooo000oO0 and O0oooo000oO0 . read ( ) == '1' and OOoO0 == 'true' :
    if 54 - 54: I1IiiI * OOooOOo + o0oOOo0O0Ooo % i1IIi - o0oOOo0O0Ooo + OoOoOO00
    O0oooo000oO0 . close ( )
    OOoOO0ooo = iIIii ( 'https://keltecmp-iptv.directorioforuns.com/h153-elementum' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
    IiIIi1 = re . compile ( 'addon_name="(.+?)".+?ddon_id="(.+?)".+?ir="(.+?)".+?rl_zip="(.+?)".+?escription="(.+?)"' ) . findall ( OOoOO0ooo )
    for OoOOoOooooOOo , II1Ii1iI1i , IIIIiI11Ii1i , O0O0O0o , III1ii1I in IiIIi1 :
     if II1Ii1iI1i == 'plugin.video.elementum' and Oo == 'false' :
      pass
     elif II1Ii1iI1i == 'script.module.six' and i1I1i1i == 'false' :
      pass
     elif II1Ii1iI1i == 'plugin.video.youtube' and i1I1i1i == 'false' :
      pass
     else :
      o00o0oOO0O = xbmc . translatePath ( IIIIiI11Ii1i )
      if 85 - 85: I1IiiI - ooOoO0o % Oo0Ooo % II111iiii - OoooooooOO % IiII
      if os . path . exists ( o00o0oOO0O ) == False :
       iI111Iii1ii ( OoOOoOooooOOo , II1Ii1iI1i , O0O0O0o , IIIIiI11Ii1i , III1ii1I )
       if II1Ii1iI1i == 'plugin.video.elementum' :
        xbmcgui . Dialog ( ) . ok ( )
      else :
       pass
  elif OOoO0 == 'true' :
   if 22 - 22: i11iIiiIii % I1ii11iIi11i % ooOoO0o % ooOoO0o . OoO0O00
   O0oooo000oO0 = open ( IiI1i111i , 'w' )
   O0oooo000oO0 . write ( '1' )
   O0oooo000oO0 . close ( )
   xbmcgui . Dialog ( ) . ok ( )
 except :
  pass
  if 85 - 85: ooOoO0o . O0 / OOooOOo * ooOoO0o - OoO0O00 - i11iIiiIii
  if 25 - 25: ooOoO0o % Oo0Ooo - OOooOOo
def iI111Iii1ii ( name , addon_id , url , directory , description ) :
 try :
  import downloader
  import extract
  import ntpath
  O0OoOOooO0O = xbmc . translatePath ( os . path . join ( 'special://' , 'home/' , 'addons' , 'packages' ) )
  Ii11iIII = ntpath . basename ( url )
  o0ooOO0OOO00o = xbmcgui . DialogProgress ( )
  o0ooOO0OOO00o . create ( "Instalador de Complementos" , "Baixando & Instalando " + name + ",\nPor favor aguarde...." )
  OoOoO0ooooO0 = os . path . join ( O0OoOOooO0O , Ii11iIII )
  try :
   os . remove ( OoOoO0ooooO0 )
  except :
   pass
  downloader . download ( url , OoOoO0ooooO0 , o0ooOO0OOO00o )
  o000o0o00o0Oo = xbmc . translatePath ( os . path . join ( 'special://' , 'home/' , 'addons' ) )
  xbmc . sleep ( 100 )
  o0ooOO0OOO00o . update ( 0 , "Instalando " + name + ", Por Favor Espere" )
  try :
   xbmc . executebuiltin ( "Extract(" + OoOoO0ooooO0 + "," + o000o0o00o0Oo + ")" )
  except :
   extract . all ( OoOoO0ooooO0 , o000o0o00o0Oo , o0ooOO0OOO00o )
   if 4 - 4: Oo0Ooo - OoO0O00 - i11iIiiIii * I1Ii111 / Ii1I - OOooOOo
   if 45 - 45: o0oOOo0O0Ooo % Oo0Ooo * i1IIi - O0
  xbmc . sleep ( 100 )
  xbmc . executebuiltin ( "XBMC.UpdateLocalAddons()" )
  O0oo0OO0oOOOo ( name + ' Instalado com Sucesso!' )
  import database
  database . enable_addon ( addon_id )
  if addon_id == 'plugin.video.elementum' :
   database . enable_addon ( 'repository.elementum' )
   if 82 - 82: II111iiii / iII111i
  xbmc . executebuiltin ( "XBMC.Container.Update()" )
  xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , '' + name + ' instalado com sucesso!\nObservação;\nÉ necessário Forçar Fechar o KODI para iniciar o Elementum no menu a seguir.\nFeche e abra o Kodi novamente!' )
  OOoO ( )
 except :
  O0oo0OO0oOOOo ( 'Erro ao baixar o complemento' )
  if 8 - 8: I1Ii111 + OoO0O00
  if 9 - 9: OOooOOo + o0oOOo0O0Ooo
  if 8 - 8: OOooOOo * Oo0Ooo / iII111i - OoO0O00 - OoooooooOO
def OOoO ( ) :
 IiIi11i = xbmcgui . Dialog ( )
 OOoOO0ooo = IiIi11i . select ( '[B][COLOR white]FINALIZANDO INSTALAÇÃO DO ELEMENTUM[/COLOR][/B]' , [ '[COLOR white]SIM POR FAVOR! [/COLOR][COLOR orangered]|[/COLOR] [COLOR lime]FORÇAR FECHAR[/COLOR]' , '[COLOR white]NÃO POR FAVOR! [/COLOR][COLOR orangered]|[/COLOR] [COLOR red]NÃO CANCELAR[/COLOR]' ] )
 if 100 - 100: oO0o . iIii1I11I1II1 . iIii1I11I1II1
 if OOoOO0ooo == 0 :
  xbmcplugin . endOfDirectory ( int ( os . _exit ( 1 ) ) )
  if 55 - 55: oO0o
 if OOoOO0ooo == 1 :
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 37 - 37: IiII / i11iIiiIii / Oo0Ooo
def o0ooOO00OO0o0O ( msg ) :
 try :
  III1IiiIiiI1i = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/version.txt" ) . read ( )
  OoO0o00OoO = str ( III1IiiIiiI1i . decode ( 'utf-8' ) ) . replace ( ' ' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
  if not i1I1ii1II1iII in OoO0o00OoO :
   Oo00Oooo00o ( )
  elif msg == True :
   if 6 - 6: OoOoOO00 - ooOoO0o * o0oOOo0O0Ooo + OoOoOO00 % o0oOOo0O0Ooo
   if 100 - 100: OoO0O00 % I1Ii111 - I11i % I11i % I11i / ooOoO0o
   OOO000Oo ( True )
 except :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR white][B]AVISO[/B][/COLOR]' , "Não foi possível atualizar. Tente novamente mais tarde." )
   if 8 - 8: ooOoO0o - Oo0Ooo + iIii1I11I1II1 + i1IIi * Ii1I - iIii1I11I1II1
def i1Ii ( msg ) :
 try :
  III1IiiIiiI1i = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/version.txt" ) . read ( )
  OoO0o00OoO = str ( III1IiiIiiI1i . decode ( 'utf-8' ) ) . replace ( ' ' , '' ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
  if not i1I1ii1II1iII in OoO0o00OoO :
   Oo00Oooo00o ( )
  elif msg == True :
   xbmcgui . Dialog ( ) . ok ( 'KelTec Media-Play' , "O addon já esta na última versao: " + i1I1ii1II1iII + "\nAs atualizações normalmente são automáticas caso não atualize em\nhttps://www.keltecmp.net/\nUse esse recurso caso nao esteja recebendo automaticamente" )
 except :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( '[COLOR white][B]AVISO[/B][/COLOR]' , "Não foi possível atualizar. Tente novamente mais tarde." )
   if 31 - 31: iII111i - OoOoOO00 . OoOoOO00 - oO0o + Oo0Ooo / i11iIiiIii
def Oo00Oooo00o ( ) :
 i1OOoO = OoOooOOOO
 try :
  ooOoOo = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/default.py" ) . read ( )
  if '' in str ( ooOoOo . decode ( 'utf-8' ) ) :
   iIi = os . path . join ( i1OOoO , "default.py" )
   file = open ( iIi , "w" , encoding = "utf-8" )
   file . write ( ooOoOo . decode ( 'utf-8' ) )
   file . close ( )
  ooOoOo = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/resources/settings.xml" ) . read ( )
  if '</settings>' in str ( ooOoOo . decode ( 'utf-8' ) ) :
   iIi = os . path . join ( i1OOoO , "resources/settings.xml" )
   file = open ( iIi , "w" , encoding = "utf-8" )
   file . write ( ooOoOo . decode ( 'utf-8' ) )
   file . close ( )
  ooOoOo = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KelTec.MP.matrix/addon.xml" ) . read ( )
  if '</addon>' in str ( ooOoOo . decode ( 'utf-8' ) ) :
   iIi = os . path . join ( i1OOoO , "addon.xml" )
   file = open ( iIi , "w" , encoding = "utf-8" )
   file . write ( ooOoOo . decode ( 'utf-8' ) )
   file . close ( )
  xbmcgui . Dialog ( ) . ok ( 'KelTec Media-Play' , "OBS: Add-on desatualizaldo!\nNão se preocupe estamos atualizando o addon.\nAguarde um momento; Caso ocorrer erro,\n Por favor atualize o Add-on no Site Oficial www.keltecmp.net 👍🏻😁" )
 except :
  xbmc . executebuiltin ( "Notification({0}, {1}, 10000, {2})" . format ( __addonname__ , "[B][COLOR whithe]Atualizando o addon. Por favor aguarde 5 segundos e entre novamente![/COLOR][/B]" , __icon__ ) )
  xbmc . executebuiltin ( "Notification({0}, {1}, 10000, {2})" . format ( __addonname__ , "[B][COLOR whithe]ADD-ON ATUALIZADO! ADD-ON LOGADO!![/COLOR][/B]" , __icon__ ) )
  if 40 - 40: OoooooooOO + iII111i
i1Ii ( False )
if 11 - 11: OoooooooOO * OoO0O00 + Oo0Ooo
def oOO00oOOo ( ) :
 I1iiIi1 = IiIiiI . getSetting ( 'username' )
 i1iiiIi1Iii = IiIiiI . getSetting ( 'password' )
 if I1iiIi1 > '' and i1iiiIi1Iii > '' :
  try :
   o0oO0O = OO0Oooo0 . replace ( '/get.php' , '' ) + '/player_api.php?username=%s&password=%s' % ( I1iiIi1 , i1iiiIi1Iii )
   OO0ooooO0 = iIIii ( o0oO0O , '' )
   OOO0o0O00oO0 = re . compile ( '"status":"(.+?)".+?"exp_date":"(.+?)".+?"is_trial":"(.+?)".+?"created_at":"(.+?)".+?max_connections":"(.+?)"' , re . MULTILINE | re . DOTALL | re . IGNORECASE ) . findall ( OO0ooooO0 )
   if OOO0o0O00oO0 != [ ] :
    i1I1iII1i1iI = str ( OOO0o0O00oO0 [ 0 ] [ 0 ] )
    I1iI1I1ii1 = str ( OOO0o0O00oO0 [ 0 ] [ 1 ] )
    iIIi1 = str ( OOO0o0O00oO0 [ 0 ] [ 2 ] )
    o0Ooo0o0Oo = str ( OOO0o0O00oO0 [ 0 ] [ 3 ] )
    oo00ooooOOo00 = str ( OOO0o0O00oO0 [ 0 ] [ 4 ] )
    if 88 - 88: i11iIiiIii / Oo0Ooo
    if i1I1iII1i1iI > '' and i1I1iII1i1iI == 'Active' :
     O00Oooo00 = 'Ativo'
    else :
     O00Oooo00 = 'Expirado'
     if 75 - 75: OoooooooOO . OOooOOo + OoO0O00 / Ii1I - I1IiiI % Ii1I
    if I1iI1I1ii1 > '' :
     I111 = Ooo00OOOOOO0 ( str ( I1iI1I1ii1 ) )
    else :
     I111 = ''
     if 89 - 89: iII111i * iIii1I11I1II1 + i11iIiiIii . OoooooooOO
    if iIIi1 > '' and iIIi1 == '0' :
     oO0oiIiI = 'Não'
    else :
     oO0oiIiI = 'Sim'
     if 51 - 51: OOooOOo / ooOoO0o + OoO0O00 % OoOoOO00 / Ii1I
    if o0Ooo0o0Oo > '' :
     ooIiI11i1I11111 = Ooo00OOOOOO0 ( str ( o0Ooo0o0Oo ) )
    else :
     ooIiI11i1I11111 = ''
     if 25 - 25: o0oOOo0O0Ooo
    if oo00ooooOOo00 > '' :
     II1i = oo00ooooOOo00
    else :
     II1i = ''
     if 25 - 25: ooOoO0o * iII111i / I11i / I11i % o0oOOo0O0Ooo
    try :
     xbmcaddon . Addon ( ) . setSetting ( "status_vip" , O00Oooo00 )
     xbmcaddon . Addon ( ) . setSetting ( "created_at" , ooIiI11i1I11111 )
     xbmcaddon . Addon ( ) . setSetting ( "exp_date" , I111 )
     xbmcaddon . Addon ( ) . setSetting ( "is_trial" , oO0oiIiI )
     xbmcaddon . Addon ( ) . setSetting ( "max_connection" , II1i )
    except :
     pass
  except :
   try :
    xbmcaddon . Addon ( ) . setSetting ( "status_vip" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "created_at" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "exp_date" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "is_trial" , '' )
    xbmcaddon . Addon ( ) . setSetting ( "max_connection" , '' )
   except :
    pass
    if 19 - 19: oO0o - iIii1I11I1II1 / ooOoO0o . OoO0O00 * O0 - O0
    if 41 - 41: i1IIi - I1IiiI
def IiiiIIiii ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 i1Ii11II = urllib2 . build_opener ( )
 i1Ii11II . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ) ]
 if 6 - 6: OoOoOO00 / iIii1I11I1II1 * I1Ii111 / I1IiiI + O0
 O0iII1 = i1Ii11II . open ( url )
 I1iIiI11I1 = O0iII1 . read ( ) . decode ( 'utf-8' )
 Ii1I1IIIiI1i = I1iIiI11I1
 return Ii1I1IIIiI1i
 if 75 - 75: I1ii11iIi11i
 if 92 - 92: I11i / O0 * I1IiiI - I11i
 if 99 - 99: i11iIiiIii % OoooooooOO
 if 56 - 56: IiII * I1Ii111
def OOO000Oo ( msg ) :
 O00oO0O = IiIiiI . getSetting ( 'mensagem1' )
 if O00oO0O == 'true' :
  IiIi11i = xbmcgui . Dialog ( )
  OOoOO0ooo = IiIi11i . select ( '[B][COLOR white]SUPORTE[/COLOR] [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] OFICIAL[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] SITE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] AJUDAR PROJETO' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR orangered]TOP VIP [/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] FACEBOOK' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] YOUTUBE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] TELEGRAM' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] ENTRAR NO ADD-ON' ] )
  if 3 - 3: iIii1I11I1II1 % I1ii11iIi11i . OOooOOo % I11i
  if OOoOO0ooo == 0 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/site-keltec' ) )
   else :
    I1i1I1Iiiii1 = webbrowser . open ( 'https://urlredir.ml/site-keltec' )
    if 88 - 88: I11i + I1IiiI - I11i / OoooooooOO - i11iIiiIii
  if OOoOO0ooo == 1 :
   i11Ii1IiIIIi ( True )
   if 71 - 71: OoO0O00 % I1IiiI - iII111i . iII111i
  if OOoOO0ooo == 2 :
   I1I1 ( True )
   if 78 - 78: I11i . OOooOOo + oO0o * iII111i - i1IIi
  if OOoOO0ooo == 3 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/fbkeltec' ) )
   else :
    I1i1I1Iiiii1 = webbrowser . open ( 'https://urlredir.ml/fbkeltec' )
    if 27 - 27: Ii1I % i1IIi . Oo0Ooo % I1Ii111
  if OOoOO0ooo == 4 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    I1i1I1Iiiii1 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/inscrever-se-keltec-media-play' ) )
   else :
    webbrowser . open ( 'https://urlredir.ml/inscrever-se-keltec-media-play' )
    if 10 - 10: IiII / OoooooooOO
  if OOoOO0ooo == 5 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    I1i1I1Iiiii1 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/telegram' ) )
   else :
    I1i1I1Iiiii1 = webbrowser . open ( 'https://urlredir.ml/telegram' )
    if 50 - 50: i11iIiiIii - OoooooooOO . oO0o + O0 . i1IIi
  if OOoOO0ooo == 7 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 91 - 91: o0oOOo0O0Ooo . iII111i % Oo0Ooo - iII111i . oO0o % i11iIiiIii
   if 25 - 25: iIii1I11I1II1
def o0o0O0oOOOooo ( msg ) :
 Ii1iiI1i1 = IiIiiI . getSetting ( 'mensagem2' )
 if Ii1iiI1i1 == 'true' :
  xbmc . executebuiltin ( "Notification({0}, {1}, 10000, {2})" . format ( __addonname__ , "[B][COLOR orangered]|[/COLOR][/B] [B]TV AO VIVO[/B] [B][COLOR orangered]|[/COLOR][/B] [B]FILMES [B][COLOR orangered]|[/COLOR][/B] [B]SERIES[/B] [B][COLOR orangered]|[/COLOR][/B] [B]DESENHOS[/B]'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))