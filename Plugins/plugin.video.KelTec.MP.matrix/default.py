# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = '# -*- coding: utf-8 -*-
if 64 - 64: i11iIiiIii
try :
 import urllib . parse as urllib
except ImportError :
 import urllib
try :
 import urllib2
except ImportError :
 import urllib . request as urllib2
import re
import os
import sys
try :
 import cookielib
except ImportError :
 import http . cookiejar as cookielib
from urllib import request as urllib2 , parse as urllib
import requests
import uuid as random
import base64
import codecs
import xbmc
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import time
import webbrowser
import datetime
from datetime import datetime , date , timedelta
import hashlib
import check_start
from bs4 import BeautifulSoup
from check_start . start import OO0o
from requests . utils import quote , unquote
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
import resources . lib . common as common
if 73 - 73: II111iiii
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
try :
 import json
except :
 import simplejson as json
 if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
 if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * Ii1I
i1I1ii1II1iII = "10.07.2021"
if 86 - 86: ooOoO0o
i1ii1iIII = 'plugin.video.KelTec.MP.matrix'
Oo0oO0oo0oO00 = xbmcaddon . Addon ( i1ii1iIII )
i111I = '[COLOR white][B]KelTec Media Play Tv[/B][/COLOR]'
II1Ii1iI1i = 'plugin.video.KelTec.MP.matrix'
iiI1iIiI = xbmcaddon . Addon ( id = II1Ii1iI1i )
if 91 - 91: OoO0O00 . i11iIiiIii / oO0o % I11i / OoO0O00 - i11iIiiIii
II1Iiii1111i = Oo0oO0oo0oO00 . getAddonInfo ( "name" )
i1IIi11111i = Oo0oO0oo0oO00 . getAddonInfo ( 'icon' )
o000o0o00o0Oo = Oo0oO0oo0oO00 . getAddonInfo ( 'path' )
oo = o000o0o00o0Oo + '/fanart.jpg'
IiII1I1i1i1ii = o000o0o00o0Oo + '/fanart2.jpg'
if 44 - 44: oO0o / Oo0Ooo - II111iiii - i11iIiiIii % I1Ii111
O0OoOoo00o = o000o0o00o0Oo + '/icon.gif'
if 31 - 31: II111iiii + OoO0O00 . I1Ii111
OoOooOOOO = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) )
i11iiII = o000o0o00o0Oo + '/resources/img/'
I1iiiiI1iII = 'https://player.keltec.ml/base-torrent/'
IiIi11i = xbmcgui . Dialog ( )
iIii1I111I11I = OO0o ( )
if 72 - 72: o0oOOo0O0Ooo % I11i * II111iiii + i1IIi
OOoooooO = Oo0oO0oo0oO00 . getAddonInfo ( 'path' )
i1iIIIiI1I = os . path . join ( OOoooooO , "resources" , "images" )
if 70 - 70: Oo0Ooo % Oo0Ooo . IiII % OoO0O00 * o0oOOo0O0Ooo % oO0o
iiI1IiI = os . path . join ( OOoooooO , 'resources' , 'lib' )
sys . path . insert ( 0 , iiI1IiI )
import common
if 13 - 13: Oo0Ooo . i11iIiiIii - iIii1I11I1II1 - OoOoOO00
ii1I = xbmcvfs . translatePath ( Oo0oO0oo0oO00 . getAddonInfo ( "profile" ) )
OooO0 = os . path . join ( ii1I , "cache" )
if not os . path . exists ( OooO0 ) :
 os . makedirs ( OooO0 )
 if 35 - 35: OOooOOo % I1Ii111 % i11iIiiIii / OoooooooOO
Ii11iI1i = os . path . join ( OOoooooO , "resources" , "common" , "init.py" )
Ooo = os . path . join ( ii1I , "virtual_directoriesLists.txt" )
O0o0Oo = os . path . join ( ii1I , 'tempList.txt' )
Oo00OOOOO = os . path . join ( ii1I , 'favorites.txt' )
if 85 - 85: ooOoO0o . iII111i - OoO0O00 % ooOoO0o % II111iiii
if not ( os . path . isfile ( Oo00OOOOO ) ) :
 common . SaveList ( Oo00OOOOO , [ ] )
 if 81 - 81: OoO0O00 + II111iiii % iII111i * O0
if not ( os . path . isfile ( Ooo ) ) :
 common . SaveList ( Ooo , [ ] )
 if 89 - 89: oO0o + Oo0Ooo
Ii1IOo0o0 = Oo0oO0oo0oO00 . getSetting ( "makeGroups" ) == "true"
if 49 - 49: oO0o % Ii1I + i1IIi . I1IiiI % I1ii11iIi11i
if 48 - 48: I11i + I11i / II111iiii / iIii1I11I1II1
def i1iiI11I ( id ) :
 return Oo0oO0oo0oO00 . getLocalizedString ( id )
 if 29 - 29: OoooooooOO
 if 23 - 23: o0oOOo0O0Ooo . II111iiii
 if 98 - 98: iIii1I11I1II1 % OoOoOO00 * I1ii11iIi11i * OoOoOO00
i1 = int ( sys . argv [ 1 ] )
__addon__ = xbmcaddon . Addon ( )
IiIiiI = __addon__
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
I1I = __addon__ . getAddonInfo ( 'version' )
try :
 oOO00oOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
except :
 oOO00oOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'profile' ) )
try :
 OoOooOOOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
except :
 OoOooOOOO = xbmcvfs . translatePath ( __addon__ . getAddonInfo ( 'path' ) )
OoOo = os . path . join ( oOO00oOO , 'favorites.dat' )
iI = xbmcaddon . Addon ( ) . getSetting ( "favoritos" )
if 60 - 60: I11i / I11i
if 46 - 46: Ii1I * OOooOOo - OoO0O00 * oO0o - I1Ii111
if 83 - 83: OoooooooOO
if os . path . exists ( OoOo ) == True :
 Iii111II = open ( OoOo ) . read ( )
else :
 Iii111II = [ ]
 if 9 - 9: OoO0O00
 if 33 - 33: ooOoO0o . iII111i
def O0oo0OO0oOOOo ( message , timeShown = 5000 ) :
 xbmc . executebuiltin ( 'Notification(%s, %s, %d, %s)' % ( __addonname__ , message , timeShown , __icon__ ) )
 if 35 - 35: IiII % I1IiiI
def o0OOoo0OO0OOO ( text , encoding = 'utf-8' , errors = 'strict' ) :
 if isinstance ( text , bytes ) :
  if 19 - 19: oO0o % i1IIi % o0oOOo0O0Ooo
  return text . decode ( encoding , errors = errors )
 return text
 if 93 - 93: iIii1I11I1II1 % oO0o * i1IIi
def Ii11Ii1I ( heading = '' , message = '' ) :
 O00oO = None
 if 39 - 39: IiII - II111iiii * OoO0O00 % o0oOOo0O0Ooo * II111iiii % II111iiii
 OoOOOOO = xbmc . Keyboard ( message , heading )
 OoOOOOO . doModal ( )
 if OoOOOOO . isConfirmed ( ) :
  O00oO = o0OOoo0OO0OOO ( OoOOOOO . getText ( ) )
 return O00oO
 if 33 - 33: I1ii11iIi11i % i1IIi
 if 78 - 78: I11i
 if 71 - 71: OOooOOo + ooOoO0o % i11iIiiIii + I1ii11iIi11i - IiII
 if 88 - 88: OoOoOO00 - OoO0O00 % OOooOOo
iI1I111Ii111i = '[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]'
if 7 - 7: ooOoO0o * OoO0O00 % oO0o . IiII
Ii1iIiII1ii1 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] BEM VINDOS[/B]\n[COLOR orangered]|[/COLOR] Tv ao Vivo [COLOR orangered]|[/COLOR] Filmes [COLOR orangered]|[/COLOR] Séries [COLOR orangered]|[/COLOR] Desenhos [COLOR orangered]|[/COLOR] Animes [COLOR orangered]|[/COLOR] Melhores Lançamentos Dual Audio[COLOR orangered]|[/COLOR]'
if 62 - 62: iIii1I11I1II1 * OoOoOO00
if 26 - 26: iII111i . I1Ii111
if 68 - 68: OoO0O00
IIi1iIIiI = ''
O0OoO = base64 . b64decode ( IIi1iIIiI ) . decode ( 'utf-8' )
O0OoO = ''
if 69 - 69: oO0o . I1Ii111 + Ii1I / Oo0Ooo - oO0o
if 63 - 63: OOooOOo % oO0o * oO0o * OoO0O00 / I1ii11iIi11i
if 74 - 74: II111iiii
if 75 - 75: o0oOOo0O0Ooo . ooOoO0o
if 54 - 54: II111iiii % OoOoOO00 % I11i % iIii1I11I1II1 + iIii1I11I1II1 * ooOoO0o
O00O0oOO00O00 = 'http://teste.com/get.php'
i1Oo00 = '[COLOR white][B]PESQUISAR...[/B][/COLOR]'
i1i = 'https://png.pngtree.com/png-vector/20190115/ourlarge/pngtree-vector-search-icon-png-image_320926.jpg'
iiI111I1iIiI = ''
if 41 - 41: Oo0Ooo . ooOoO0o + O0 * o0oOOo0O0Ooo % Oo0Ooo * Oo0Ooo
iIIIIi1iiIi1 = 'Pesquise por filme'
if 21 - 21: I1IiiI * iIii1I11I1II1
oooooOoo0ooo = '[B][COLOR silver]Configurações Ativar & Desativar Mensagens[/COLOR][/B]'
I1I1IiI1 = 'https://i.imgur.com/8KUL2Rt.png'
III1iII1I1ii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]CONFIGURAÇÕES!\n[/B][COLOR orangered]|[/COLOR] Ajustes  gerais do Add-on.'
if 61 - 61: II111iiii
O0OOO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] FAVORITOS[/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
II11iIiIIIiI = 'https://i.imgur.com/q09OJRb.png'
o0o = 'Adicione Itens aos Favoritos, pressionando OK do controle ou clicando o direito e selecionando Adicionar aos favoritos do KelTec Media Play'
if 84 - 84: O0
if 74 - 74: I1ii11iIi11i - I1IiiI - Oo0Ooo . Ii1I - IiII
OOOoOoo0O = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] SUPORTE [COLOR crimson]|[/COLOR][/COLOR][COLOR orangered] TOP VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
O000OOo00oo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]TOP[/COLOR] [COLOR orangered](VIP)[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
oo0OOo = 'https://i.imgur.com/5rgqF8K.png'
ooOOO00Ooo = 'https://i.imgur.com/nTIPRcu.png'
if 16 - 16: II111iiii % OoOoOO00 - II111iiii + Ii1I
i1I1i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR red] AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] O acesso [COLOR orangered]Top Vip[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo e fique por dentro do melhor conteúdo familiar.\nA Team KelTec Media-Play deseja um ótimo entretenimento a todos!'
if 40 - 40: I1IiiI . iIii1I11I1II1 / I1IiiI / i11iIiiIii
o0O00o = 'No Kodi só canais; Pelo vip canais e VOD, use o app exclusivo.'
if 87 - 87: i11iIiiIii
OO0Oooo0 = 'http://lista.lorddark.club:80/get.php'
if 62 - 62: O0 * i1IIi * o0oOOo0O0Ooo - I1IiiI + I1IiiI
if 34 - 34: iIii1I11I1II1 - o0oOOo0O0Ooo
o00oooO0Oo = "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Torrent Play"
if 78 - 78: Ii1I % I1Ii111 + I1ii11iIi11i
if 64 - 64: oO0o * O0 . I1IiiI + II111iiii
IIi1i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 87 - 87: o0oOOo0O0Ooo - I1ii11iIi11i + IiII % iII111i + I1IiiI - OoOoOO00
if 16 - 16: iIii1I11I1II1
if 90 - 90: o0oOOo0O0Ooo % i1IIi / OoO0O00
IIi = "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Media'Play Principal"
if 41 - 41: Ii1I - O0 - O0
if 68 - 68: OOooOOo % I1Ii111
ooO00OO0 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 31 - 31: iII111i % iII111i % I11i
if 69 - 69: OoO0O00 - Oo0Ooo + i1IIi / I1Ii111
if 49 - 49: O0 . iII111i
if 11 - 11: IiII * I1IiiI . iIii1I11I1II1 % OoooooooOO + iII111i
OOO = "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orange] | [/COLOR]KelTec Play TV"
if 68 - 68: II111iiii + I11i
if 45 - 45: iII111i / iII111i + I1Ii111 + ooOoO0o
iI111i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 26 - 26: I1ii11iIi11i * iII111i . II111iiii * Ii1I
if 28 - 28: OoO0O00 . i1IIi * I1IiiI + O0 . i1IIi - ooOoO0o
if 38 - 38: I1Ii111
Ooo00o0Oooo = '[B][COLOR white]KelTec [COLOR crimson]Media Play [/B][COLOR orange]|[/COLOR] [COLOR silver]Pesquisa[/COLOR]'
if 84 - 84: o0oOOo0O0Ooo % II111iiii . i11iIiiIii / OoO0O00
if 80 - 80: I1Ii111 . i11iIiiIii - o0oOOo0O0Ooo
iIiIIi1 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 7 - 7: ooOoO0o - Oo0Ooo - oO0o + ooOoO0o
if 26 - 26: Ii1I
if 35 - 35: Ii1I - I1IiiI % o0oOOo0O0Ooo . OoooooooOO % Ii1I
I1i1Iiiii = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR crimson]|[/COLOR] ADD-ON [COLOR crimson]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 94 - 94: o0oOOo0O0Ooo * Ii1I / Oo0Ooo / Ii1I
if 87 - 87: Oo0Ooo . IiII
O0OO0O = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 81 - 81: oO0o . o0oOOo0O0Ooo % O0 / I1IiiI - oO0o
if 43 - 43: i11iIiiIii + Oo0Ooo * II111iiii * I1Ii111 * O0
if 64 - 64: OOooOOo % iIii1I11I1II1 * oO0o
if 79 - 79: O0
oOO00O = 'nome'
OOOoo0OO = '[COLOR orangered]KelTec Play Escolha uma opção:[/COLOR]'
if 57 - 57: OoO0O00 / ooOoO0o
if 29 - 29: iIii1I11I1II1 + OoOoOO00 * OoO0O00 * OOooOOo . I1IiiI * I1IiiI
I111I1Iiii1i = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'
if 56 - 56: I1ii11iIi11i % O0 - I1IiiI
if 100 - 100: Ii1I - O0 % oO0o * OOooOOo + I1IiiI
Oo0O0oooo = 'aHR0cHM6Ly91cmxyZWRpci5tbC9iYXNlMS1tYXRyaXg='
try :
 I111iI = base64 . b64decode ( Oo0O0oooo ) . decode ( 'utf-8' )
except :
 I111iI = Oo0O0oooo
 if 56 - 56: I1IiiI
O0oO = 'aHR0cHM6Ly91cmxyZWRpci5tbC9ob21lLXR2'
try :
 OO0ooOOO0OOO = base64 . b64decode ( O0oO ) . decode ( 'utf-8' )
except :
 OO0ooOOO0OOO = O0oO
 if 63 - 63: OoOoOO00 * iII111i
 if 69 - 69: O0 . OoO0O00
 if 49 - 49: I1IiiI - I11i
OoOOoOooooOOo = xbmcaddon . Addon ( ) . getAddonInfo ( 'name' )
if 87 - 87: I1IiiI
if 58 - 58: OoOoOO00 % o0oOOo0O0Ooo
if sys . argv [ 1 ] == 'limparFavoritos' :
 i1OOoO = xbmcvfs . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'profile' ) ) . decode ( "utf-8" )
 OO0O000 = os . path . join ( i1OOoO , "favorites.dat" )
 iiIiI1i1 = os . path . isfile ( OO0O000 )
 if iiIiI1i1 :
  try :
   os . remove ( OO0O000 )
  except :
   pass
 xbmcgui . Dialog ( ) . ok ( 'Sucesso' , '[B][COLOR red]Favoritos limpo com sucesso![/COLOR][/B]' )
 xbmc . sleep ( 2000 )
 exit ( )
 if 69 - 69: ooOoO0o
 if 40 - 40: I1Ii111 + OoooooooOO % o0oOOo0O0Ooo - iIii1I11I1II1 . I1IiiI
if sys . argv [ 1 ] == 'SetPassword' :
 iIiIi11iI = xbmcaddon . Addon ( ) . getAddonInfo ( 'id' )
 Oo0O00O000 = xbmcvfs . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , iIiIi11iI ) )
 if os . path . exists ( Oo0O00O000 ) == False :
  os . mkdir ( Oo0O00O000 )
 xbmc . sleep ( 4 )
 if 3 - 3: Ii1I * I1ii11iIi11i % I11i
 if 59 - 59: oO0o - iII111i
 OO0O000 = os . path . join ( Oo0O00O000 , "password.txt" )
 iiIiI1i1 = os . path . isfile ( OO0O000 )
 OoOOOOO = xbmcaddon . Addon ( ) . getSetting ( "keyboard" )
 if iiIiI1i1 == False :
  I1 = '0069'
  ii1I1 = base64 . b64encode ( I1 . encode ( ) ) . decode ( 'utf-8' )
  OooooOOoo0 = open ( OO0O000 , 'w' )
  OooooOOoo0 . write ( ii1I1 )
  OooooOOoo0 . close ( )
  xbmc . sleep ( 4 )
  i1I1IiiIi1i = open ( OO0O000 , 'r+' )
  iiI11ii1I1 = i1I1IiiIi1i . read ( )
  Ooo0OOoOoO0 = base64 . b64decode ( iiI11ii1I1 ) . decode ( 'utf-8' )
  IiIi11i = xbmcgui . Dialog ( )
  if int ( OoOOOOO ) == 0 :
   oOo0OOoO0 = IiIi11i . numeric ( 0 , 'Insira a senha atual:' )
  else :
   oOo0OOoO0 = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if oOo0OOoO0 == Ooo0OOoOoO0 :
   if int ( OoOOOOO ) == 0 :
    II = IiIi11i . numeric ( 0 , 'Insira a nova senha:' )
   else :
    II = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if II != '' :
    o0Oo0oO0oOO00 = base64 . b64encode ( II . encode ( ) ) . decode ( 'utf-8' )
    i1I1IiiIi1i = open ( OO0O000 , 'w' )
    i1I1IiiIi1i . write ( o0Oo0oO0oOO00 )
    i1I1IiiIi1i . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 else :
  i1I1IiiIi1i = open ( OO0O000 , 'r+' )
  iiI11ii1I1 = i1I1IiiIi1i . read ( )
  Ooo0OOoOoO0 = base64 . b64decode ( iiI11ii1I1 ) . decode ( 'utf-8' )
  IiIi11i = xbmcgui . Dialog ( )
  if int ( OoOOOOO ) == 0 :
   oOo0OOoO0 = IiIi11i . numeric ( 0 , 'Insira a senha atual:' )
  else :
   oOo0OOoO0 = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
  if oOo0OOoO0 == Ooo0OOoOoO0 :
   if int ( OoOOOOO ) == 0 :
    II = IiIi11i . numeric ( 0 , 'Insira a nova senha:' )
   else :
    II = IiIi11i . input ( 'Insira a senha atual:' , option = xbmcgui . ALPHANUM_HIDE_INPUT )
   if II != '' :
    o0Oo0oO0oOO00 = base64 . b64encode ( II . encode ( ) ) . decode ( 'utf-8' )
    i1I1IiiIi1i = open ( OO0O000 , 'w' )
    i1I1IiiIi1i . write ( o0Oo0oO0oOO00 )
    i1I1IiiIi1i . close ( )
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'A Senha foi alterada com sucesso!' )
   else :
    xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Não foi possivel alterar a senha!' )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR white]AVISO[/COLOR][/B]' , 'Senha invalida!, se não alterou utilize a senha padrão' )
 exit ( )
 if 92 - 92: OoooooooOO * I1Ii111
 if 100 - 100: I1Ii111 + I1Ii111 * IiII
 if 1 - 1: ooOoO0o . ooOoO0o / OoOoOO00 - I1Ii111
 if 86 - 86: iIii1I11I1II1 / OoOoOO00 . II111iiii
 if 19 - 19: I1ii11iIi11i % OoooooooOO % IiII * o0oOOo0O0Ooo % O0
 if 67 - 67: I1IiiI . i1IIi
 if 27 - 27: ooOoO0o % I1IiiI
def o0oooOO00 ( msg ) :
 iiIiii1IIIII ( '[B][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR green]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]' , '-' , 20 , i11iiII + 'icon.gif' )
 if 67 - 67: Ii1I / IiII
 iiIiii1IIIII ( '[B][COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR darkgreen]|[/COLOR] ADD-ON [COLOR darkgreen]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR green]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]' , '-' , 21 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]PESQUISA[/COLOR]' , '-' , 115 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]DESTAQUES[/COLOR]' , 'https://player.keltec.ml/destaque-torrent/' , 112 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]LANÇAMENTOS[/COLOR]' , 'https://player.keltec.ml/filmes-lancamentos' , 112 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]SÉRIES[/COLOR]' , 'https://player.keltec.ml/category-series' , 112 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR white]Torrent[/COLOR] [COLOR green]Play [COLOR orangered]|[/COLOR][/B] [COLOR silver]CATEGORIAS[/COLOR]' , 'https://player.keltec.ml/base-torrent' , 114 , i11iiII + 'icon.gif' )
 iiIiii1IIIII ( '[B][COLOR silver]Torrent Play Check & Update[/COLOR][/B]' , '-' , 12 , i11iiII + 'icon.gif' )
 if 9 - 9: O0 % O0 - o0oOOo0O0Ooo
 if 51 - 51: I1IiiI . iIii1I11I1II1 - I1ii11iIi11i / O0
 if 52 - 52: o0oOOo0O0Ooo + O0 + iII111i + Oo0Ooo % iII111i
 if 75 - 75: I1IiiI . ooOoO0o . O0 * I1Ii111
def i11II1I11I1 ( ) :
 OOoOO0ooo = II1iIi11 ( 'https://player.keltec.ml/filmes-lancamentos/' )
 I11iiii = [ ]
 O0i1iI = [ ]
 IiI1iiiIii = re . compile ( '<a class="last" href="https://player.keltec.ml/filmes-lancamentos/(.*)/">.*</a>' ) . findall ( OOoOO0ooo ) [ 0 ]
 I1III1111iIi = int ( IiI1iiiIii )
 for I1i111I in range ( 1 , I1III1111iIi + 1 ) :
  O0i1iI . append ( '[B]PÁGINA: %s[/B]' % I1i111I )
  I11iiii . append ( 'https://player.keltec.ml/filmes-lancamentos/' + str ( I1i111I ) + '/' )
 OooOo0oo0O0o00O = xbmcgui . Dialog ( ) . select ( '-= [B]Torrent Play[/B] =-' , O0i1iI )
 if OooOo0oo0O0o00O >= 0 :
  pass
def I1i11 ( url ) :
 OOoOO0ooo = II1iIi11 ( url )
 IiIi1I1 = BeautifulSoup ( OOoOO0ooo , 'html.parser' )
 IiIIi1 = IiIi1I1 . find ( 'ul' , { 'class' : "sub-menu" } ) . findAll ( 'li' )
 for I1i111I in IiIIi1 :
  IIIIiii1IIii = I1i111I . text . encode ( 'utf-8' )
  url = I1i111I . a [ 'href' ]
  if url . startswith ( 'http' ) :
   url = url
  else :
   url = I1iiiiI1iII + url
  iiIiii1IIIII ( IIIIiii1IIii , url , 112 , O0OoOoo00o )
  if 38 - 38: OOooOOo + II111iiii % ooOoO0o % OoOoOO00 - Ii1I / OoooooooOO
def oOOoo0000O0o0 ( item , arquivo = False ) :
 for II1III in item :
  if not arquivo :
   return II1III
  else :
   return II1III . text . encode ( 'utf-8' )
   if 1 - 1: o0oOOo0O0Ooo . ooOoO0o / iII111i . OOooOOo
def OooIiIIII1i11I ( url ) :
 OOoOO0ooo = II1iIi11 ( url )
 OOOiII1 = OOoOO0ooo
 OOo = BeautifulSoup ( OOOiII1 , 'html.parser' )
 IIii11Ii1i1I = OOo . findAll ( 'div' , attrs = { "class" : 'ItemN' } )
 for II1III in IIii11Ii1i1I :
  Oooo0O = II1III . findAll ( 'span' , attrs = { 'class' : 'idi' } ) [ 0 ]
  oo00O0oO0O0 = Oooo0O . text
  try :
   oo00O0oO0O0 = oo00O0oO0O0 . decode ( 'utf-8' )
  except :
   pass
  ooo0OO0O0Oo = oOOoo0000O0o0 ( II1III . findAll ( 'span' , attrs = { 'class' : 'quality' } ) , True )
  Ooo0O0oooo = ooo0OO0O0Oo
  try :
   Ooo0O0oooo = Ooo0O0oooo . decode ( 'utf-8' )
  except :
   pass
  iiI = II1III . findAll ( "div" , { "class" : "peli" } ) [ 0 ]
  IIIIiii1IIii = iiI . img [ 'alt' ]
  oO = iiI . img [ 'src' ]
  url = iiI . a [ 'href' ]
  url = url . replace ( '/b/?' , '' )
  IIIIiii1IIii = IIIIiii1IIii . split ( '– HD' ) [ 0 ] . split ( ') HD' ) [ 0 ] . split ( ' – BluRay' ) [ 0 ] . split ( ' – WEB-DL' ) [ 0 ]
  IIIIiii1IIii = IIIIiii1IIii . replace ( '   ' , ' ' ) . replace ( ' Completa ' , ' ' ) . replace ( '   ' , ' ' ) . replace ( '   ' , ' ' )
  iiIiii1IIIII ( '%s - %s - %s' % ( str ( IIIIiii1IIii ) , oo00O0oO0O0 , Ooo0O0oooo ) , url . encode ( 'utf-8' ) , 1199 , oO . encode ( 'utf-8' ) )
 IIii11Ii1i1I = OOo . findAll ( 'div' , attrs = { "class" : 'wp-pagenavi' } )
 IIiIi = len ( IIii11Ii1i1I )
 for II1III in IIii11Ii1i1I :
  OOoOooOoOOOoo = oOOoo0000O0o0 ( II1III . find ( "span" , { "class" : "pages" } ) )
  Iiii1iI1i = II1III . findAll ( attrs = { "class" : "nextpostslink" } ) [ 0 ] . get ( 'href' )
  Iiii1iI1i = Iiii1iI1i . replace ( '/b/?' , '' )
  if 34 - 34: ooOoO0o * I1IiiI . i1IIi * ooOoO0o / ooOoO0o
  iiIiii1IIIII ( '[B][COLOR white]' + str ( OOoOooOoOOOoo ) + '[/COLOR][/B]' , Iiii1iI1i . encode ( 'utf-8' ) , 112 , i11iiII + 'Proxima.png' , True )
 if IIiIi == 0 :
  IIiI1Ii = re . compile ( '<link rel="next" href="(.*?)".+?/>' ) . findall ( OOoOO0ooo )
  for I1i111I in IIiI1Ii :
   I1i111I = I1i111I . replace ( '/b/?' , '' )
   iiIiii1IIIII ( '[COLOR white][B]Proxima Página[/B][/COLOR]' , str ( I1i111I ) , 112 , i11iiII + 'Proxima.png' , True )
   if 57 - 57: OOooOOo - ooOoO0o - I11i + OoO0O00
   if 30 - 30: Ii1I % OoOoOO00 + i1IIi - I11i - Ii1I
   if 8 - 8: OoO0O00 + I1Ii111 - o0oOOo0O0Ooo % Oo0Ooo % o0oOOo0O0Ooo * oO0o
   if 9 - 9: Oo0Ooo - i11iIiiIii - OOooOOo * Ii1I + ooOoO0o
def iIIII ( ) :
 iIIIiiI1i1i = xbmc . Keyboard ( '' , '[B]Encontre filmes, atores e diretores[/B]' )
 iIIIiiI1i1i . doModal ( )
 if ( iIIIiiI1i1i . isConfirmed ( ) ) :
  iIII = iIIIiiI1i1i . getText ( )
  o0o0O = urllib . quote ( iIII )
  ooooO0oOoOOoO = 'https://player.keltec.ml/base-torrent?s=' + o0o0O
  OooIiIIII1i11I ( ooooO0oOoOOoO )
 else :
  sys . exit ( )
  if 20 - 20: I11i + Ii1I / O0 % iIii1I11I1II1
  if 88 - 88: OoOoOO00 / II111iiii
def OOOOO0O00 ( url , name , iconimage ) :
 OOoOO0ooo = II1iIi11 ( url )
 iiIiii1IIIII ( '[B][COLOR white]Sinopse:%s[/COLOR][/B]' % name . split ( '(' ) [ 0 ] , url , 1120 , iconimage , False )
 OOo = BeautifulSoup ( OOoOO0ooo , "html.parser" )
 IIii11Ii1i1I = OOo . findAll ( attrs = { "class" : "trailer litebox" } )
 if 30 - 30: iIii1I11I1II1 . I1IiiI . OOooOOo / o0oOOo0O0Ooo
 if 42 - 42: Oo0Ooo
 if 19 - 19: oO0o % I1ii11iIi11i * iIii1I11I1II1 + I1IiiI
 IiIIi1 = OOo . find ( 'div' , { 'id' : 'categoria' , 'class' : 'box_item center-widget' } )
 iii11I = IiIIi1 . findAll ( 'div' )
 for I1i111I in iii11I :
  name = I1i111I . text . encode ( 'utf-8' )
  try :
   url = I1i111I . a [ 'href' ] . encode ( 'utf-8' )
  except :
   url = 'True'
  if name == '' :
   xbmc . log ( '%s' % I1i111I )
   I1Iii1 = url . split ( '&dn=' ) [ - 1 ] . split ( '&tr=' ) [ 0 ]
   name = urllib . unquote_plus ( urllib . unquote_plus ( I1Iii1 . split ( '[' ) [ - 0 ] ) )
  iiIiii1IIIII ( name , url , 1198 , iconimage , False )
  if 30 - 30: OoooooooOO - OoOoOO00
def Ooo00O0o ( url , name , iconimage ) :
 OOoOO0ooo = II1iIi11 ( url )
 OOo = BeautifulSoup ( OOoOO0ooo )
 IIii11Ii1i1I = OOo . findAll ( attrs = { "class" : "trailer litebox" } )
 for iiI in IIii11Ii1i1I :
  Oo00o0OO0O00o = iiI . get ( 'href' )
  O0Oooo ( Oo00o0OO0O00o , name , iconimage )
  if 21 - 21: Oo0Ooo
def I1ii1 ( url ) :
 OOOiII1 = II1iIi11 ( url )
 OOo = BeautifulSoup ( OOOiII1 , 'html.parser' )
 if 99 - 99: ooOoO0o . I1Ii111 % IiII * IiII . i1IIi
 IIii11Ii1i1I = OOo . findAll ( attrs = { "class" : 'meta_datos' } )
 for iiI in IIii11Ii1i1I :
  print ( iiI )
  O0OOoOOO0oO = iiI . h1 . text
  I1ii11 = iiI . find ( 'div' , { 'class' : 'views' } )
  oOoOoOoo0 = I1ii11 . text . replace ( '|' , '\nVotos: ' ) . replace ( '/ 10' , '' ) . replace ( 'votos' , '' )
  III1ii1I = OOo . find ( attrs = { "class" : 'meta_datos' } ) . findAll ( 'p' )
  Ii1i1iI = III1ii1I [ 1 ] . text . split ( '|' ) [ - 1 ]
  IIiI1 ( i111I , 'Sinopse: %s' % O0OOoOOO0oO + '\n\n' + oOoOoOoo0 + '\n\n' + Ii1i1iI )
  if 17 - 17: OOooOOo / OOooOOo / I11i
  if 1 - 1: i1IIi . i11iIiiIii % OOooOOo
def IIiI1 ( heading , text ) :
 id = 10147
 xbmc . executebuiltin ( 'ActivateWindow(%d)' % id )
 xbmc . sleep ( 100 )
 OooO0oo = xbmcgui . Window ( id )
 o0o0oOoOO0O = 50
 while ( o0o0oOoOO0O > 0 ) :
  try :
   xbmc . sleep ( 10 )
   o0o0oOoOO0O -= 1
   OooO0oo . getControl ( 1 ) . setLabel ( heading )
   OooO0oo . getControl ( 5 ) . setText ( text )
   return
  except :
   pass
   if 16 - 16: IiII % iIii1I11I1II1 . Ii1I
def oooooOOO000Oo ( url , name , iconimage ) :
 Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
 Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 return Ooo00OoOOO
 if 98 - 98: iIii1I11I1II1 * I1ii11iIi11i * OOooOOo + ooOoO0o % i11iIiiIii % O0
 if 27 - 27: O0
def OOO0oOOoo ( url , name , iconimage ) :
 url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
 xbmc . Player ( ) . play ( item = url , listitem = oooooOOO000Oo ( url , name , iconimage ) )
 if 52 - 52: o0oOOo0O0Ooo % Oo0Ooo
 if 64 - 64: O0 % I11i % O0 * OoO0O00 . oO0o + I1IiiI
def O00 ( url , name , iconimage ) :
 if 17 - 17: Ii1I - OoooooooOO % Ii1I . IiII / i11iIiiIii % iII111i
 iIiIIIIIii = iiI1iIiI . getSetting ( 'torrent' )
 if 'magnet' in url or '.torrent' in url :
  if int ( iIiIIIIIii ) == 0 :
   url = 'plugin://plugin.video.elementum/play?uri={}' . format ( url )
   Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
   Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
   Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
   if 58 - 58: o0oOOo0O0Ooo / IiII . OoOoOO00 / OoooooooOO + I1Ii111
   xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , Ooo00OoOOO )
  elif int ( iIiIIIIIii ) == 1 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("org.acestream.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    IiIi11i . ok ( i111I , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
  elif int ( iIiIIIIIii ) == 2 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity("tv.bitx.media","android.intent.action.VIEW","","' + url + '")' )
   else :
    IiIi11i . ok ( i111I , "FUNCIONA APENAS EM SISTEMAS ANDROID !!" )
 else :
  Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
  Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
  Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
  if 86 - 86: I11i * I1IiiI + I11i + II111iiii
  xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , Ooo00OoOOO )
  if 8 - 8: I1Ii111 - iII111i / ooOoO0o
  if 96 - 96: OoOoOO00
def O0Oooo ( url , name , iconimage ) :
 url = 'plugin://plugin.video.youtube/play/?video_id={}' . format ( url )
 if 29 - 29: I1ii11iIi11i / i1IIi . I1IiiI - OoOoOO00 - OoOoOO00 - Ii1I
 Ooo00OoOOO = xbmcgui . ListItem ( name , path = url )
 Ooo00OoOOO . setArt ( { "icon" : iconimage , "thumb" : iconimage } )
 Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : '' } )
 if 20 - 20: i1IIi % OoO0O00 . I1IiiI / IiII * i11iIiiIii * OOooOOo
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , Ooo00OoOOO )
 if 85 - 85: o0oOOo0O0Ooo . OoOoOO00 / ooOoO0o . O0 % I1Ii111
 if 90 - 90: Oo0Ooo % O0 * iIii1I11I1II1 . iII111i
 if 8 - 8: ooOoO0o + II111iiii / iII111i / I11i
 if 74 - 74: O0 / i1IIi
 if 78 - 78: OoooooooOO . OoO0O00 + ooOoO0o - i1IIi
def II1iIi11 ( url ) :
 try :
  ii1 = urllib2 . Request ( url )
  ii1 . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36' )
  O0iII1 = urllib2 . urlopen ( ii1 )
  OOoOO0ooo = O0iII1 . read ( ) . decode ( 'utf-8' )
  O0iII1 . close ( )
  return OOoOO0ooo
 except IOError :
  IiIi11i . notification ( i111I , 'Não foi possivel acessar o servidor.' , O0OoOoo00o )
  sys . exit ( 0 )
  if 27 - 27: OoO0O00 . I11i + OoOoOO00 / iIii1I11I1II1 % iII111i . ooOoO0o
  if 14 - 14: oO0o + I1ii11iIi11i - iII111i / O0 . I1Ii111
def iiIiii1IIIII ( name , url , mode , iconimage , pasta = True , total = 1 , plot = '' ) :
 i1iiIiI1Ii1i = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage )
 Ooo00OoOOO = xbmcgui . ListItem ( name )
 if pasta :
  Ooo00OoOOO . setArt ( { "icon" : "DefaultFolder.png" , "thumb" : iconimage } )
 else :
  Ooo00OoOOO . setArt ( { "icon" : "DefaultVideo.png" , "thumb" : iconimage } )
 if mode == 1198 or mode == 11999 :
  Ooo00OoOOO . setProperty ( 'IsPlayable' , 'true' )
 if mode == 1199 :
  i1iIi = [ ]
  i1iIi . append ( ( '[B][COLOR white]Ver Sinopse[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1120&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  i1iIi . append ( ( '[B][COLOR white]Play Trailer[/COLOR][/B]' , 'RunPlugin(%s?url=%s&mode=1121&name=%s&iconimage=%s)' % ( sys . argv [ 0 ] , url , name , iconimage ) ) )
  Ooo00OoOOO . addContextMenuItems ( i1iIi , replaceItems = False )
 Ooo00OoOOO . setProperty ( 'fanart_image' , IiII1I1i1i1ii )
 Ooo00OoOOO . setInfo ( 'video' , { 'title' : name , 'plot' : plot } )
 xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = i1iiIiI1Ii1i , listitem = Ooo00OoOOO , isFolder = pasta , totalItems = total )
 if 30 - 30: O0 - iIii1I11I1II1 / OoooooooOO
 if 89 - 89: iII111i - ooOoO0o % Oo0Ooo % o0oOOo0O0Ooo
 if 49 - 49: Oo0Ooo - I1IiiI / IiII / O0 % o0oOOo0O0Ooo * Ii1I
def OOoO0 ( msg ) :
 import startup
 if 22 - 22: Oo0Ooo % iII111i * I1ii11iIi11i / OOooOOo % i11iIiiIii * I11i
 if 95 - 95: OoooooooOO - IiII * I1IiiI + OoOoOO00
 if 10 - 10: o0oOOo0O0Ooo / i11iIiiIii
 if 92 - 92: I11i . I1Ii111
 if 85 - 85: I1ii11iIi11i . I1Ii111
 if 78 - 78: ooOoO0o * I1Ii111 + iIii1I11I1II1 + iIii1I11I1II1 / I1Ii111 . Ii1I
 if 97 - 97: ooOoO0o / I1Ii111 % i1IIi % I1ii11iIi11i
 if 18 - 18: iIii1I11I1II1 % I11i
def O00oO0 ( url , count ) :
 o0o0o0o0 = IiIiiI . getSetting ( 'proxy' )
 if o0o0o0o0 == 'true' :
  try :
   import requests
   import random
   I1Iiiiiii = { 'User-agent' : I111I1Iiii1i , 'Matrix' : '19' , 'Add-on' : 'plugin.video.Keltec-MP' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : 'copyright © 2017-2021' , 'Referer' : 'www.keltecmp.net' , 'Team' : 'KelTec-Media-Play' , '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ,
 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ,
 'Content-Type' : 'text/html' }
   if int ( count ) > 0 :
    I1IIIiI1I1ii1 = int ( count ) - 1
   else :
    I1IIIiI1I1ii1 = 0
    if 30 - 30: O0 * OoooooooOO
    if 38 - 38: IiII - I1ii11iIi11i . OoOoOO00 - I1Ii111 . OoooooooOO
    if 89 - 89: iIii1I11I1II1
   i11iiiiI1i = iIIii ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=no&anonymity=all' , '' )
   i1iIiIi1I = i11iiiiI1i . splitlines ( )
   iiii11i = len ( i1iIiIi1I )
   III11II1I1Ii1 = random . randint ( 0 , iiii11i - 1 )
   O00Oo0o000oO = 'http://' + i1iIiIi1I [ III11II1I1Ii1 ]
   if 99 - 99: oO0o * II111iiii * I1Ii111
   oOooO0 = iIIii ( 'https://api.proxyscrape.com/?request=getproxies&proxytype=http&timeout=10000&country=BR&ssl=yes&anonymity=all' , '' )
   OOOoO000 = oOooO0 . splitlines ( )
   oOOOO = len ( OOOoO000 )
   Ii = random . randint ( 0 , oOOOO - 1 )
   Ii1ii111i1 = 'https://' + OOOoO000 [ Ii ]
   if 31 - 31: OOooOOo + O0
   oO0oOOoo00000 = { "http" : O00Oo0o000oO , "https" : Ii1ii111i1 }
   ii1 = requests . get ( url , headers = I1Iiiiiii , proxies = oO0oOOoo00000 )
   ii1 . encoding = 'utf-8'
   if 52 - 52: I1IiiI
   O0iII1 = ii1 . text
   return O0iII1
  except :
   o0oo00oO00o0 = IiIiiI . getSetting ( 'proxy_try' )
   if int ( I1IIIiI1I1ii1 ) > 0 :
    OoO = int ( I1IIIiI1I1ii1 )
   elif int ( count ) == 1 and int ( I1IIIiI1I1ii1 ) == 0 :
    OoO = int ( o0oo00oO00o0 ) + 1 + 1
   if int ( OoO ) > 1 :
    if 60 - 60: I1ii11iIi11i * I1IiiI
    I1iIiI11I1 = O00oO0 ( url , int ( OoO ) )
    return I1iIiI11I1
   else :
    O0oo0OO0oOOOo ( '[COLOR red]Erro ao utilizar o proxy ou servidor![/COLOR]' )
    O0iII1 = ''
    return O0iII1
 else :
  try :
   try :
    import urllib . request as urllib2
   except ImportError :
    import urllib2
   i1oOOoo0o0OOOO = {
 "Accept-Language" : "pt-BR,pt;q=0.9,en;q=0.8,ru;q=0.7,de-DE;q=0.6,de;q=0.5,de-AT;q=0.4,de-CH;q=0.3,ja;q=0.2,zh-CN;q=0.1,zh;q=0.1,zh-TW;q=0.1,es;q=0.1,ar;q=0.1,en-GB;q=0.1,hi;q=0.1,cs;q=0.1,el;q=0.1,he;q=0.1,en-US;q=0.1" ,
 "User-agent" : I111I1Iiii1i , "Matrix" : "19" , "Add-on" : "plugin.video.Keltec-MP" , "KelTec Media-Play" : "Direitos Reservados" , "Ref" : "copyright © 2017-2021" , "Referer" : "www.keltecmp.net" , "Team" : "KelTec-Media-Play" , "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0" ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
 }
   i1IiII1III = urllib2 . Request ( url , headers = i1oOOoo0o0OOOO )
   O0iII1 = urllib2 . urlopen ( i1IiII1III ) . read ( ) . decode ( 'utf-8' )
   return O0iII1
  except urllib2 . URLError as i1O00oo :
   if hasattr ( i1O00oo , 'code' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( i1O00oo . code ) + ",10000," + __icon__ + ")" )
   elif hasattr ( i1O00oo , 'reason' ) :
    xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( i1O00oo . reason ) + ",10000," + __icon__ + ")" )
   O0iII1 = ''
   return O0iII1
   if 77 - 77: iII111i % OOooOOo - I11i % ooOoO0o - OoO0O00 / Oo0Ooo
   if 4 - 4: OoooooooOO - i1IIi % Ii1I - OOooOOo * o0oOOo0O0Ooo
   if 85 - 85: OoooooooOO * iIii1I11I1II1 . iII111i / OoooooooOO % I1IiiI % O0
def iIIii ( url , ref , userargent = False ) :
 try :
  try :
   import cookielib
  except ImportError :
   import http . cookiejar as cookielib
  try :
   import urllib2
  except ImportError :
   import urllib . request as urllib2
  if ref > '' :
   I1iii = ref
  else :
   I1iii = url
  oO0o0O0Ooo0o = cookielib . CookieJar ( )
  i1Ii11II = urllib2 . build_opener ( urllib2 . HTTPCookieProcessor ( oO0o0O0Ooo0o ) )
  i1Ii11II . addheaders = [ ( 'Accept-Language' , 'en-US,en;q=0.9;q=0.8' ) , ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' ) , ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ) , ( 'Referer' , I1iii ) ]
  I1iIiI11I1 = i1Ii11II . open ( url ) . read ( )
  O0iII1 = I1iIiI11I1 . decode ( 'utf-8' )
  return O0iII1
 except :
  if 18 - 18: II111iiii . OoooooooOO % OoOoOO00 % Ii1I
  O0iII1 = ''
  return O0iII1
  if 9 - 9: OoO0O00 - Oo0Ooo * OoooooooOO . Oo0Ooo
def ii1Ii1IiIIi ( text , start_with , end_with ) :
 o0OO0 = re . findall ( "(?i)(" + start_with + "[\S\s]+?" + end_with + ")" , text )
 return o0OO0
 if 100 - 100: Oo0Ooo * I1Ii111 / I1Ii111
 if 41 - 41: iIii1I11I1II1 % I11i
 if 59 - 59: OOooOOo + i11iIiiIii
def oo0OOo0O ( data , re_patten ) :
 IiIIi1 = ''
 Ii1IiII = re . search ( re_patten , data )
 if Ii1IiII != None :
  IiIIi1 = Ii1IiII . group ( 1 )
 else :
  IiIIi1 = ''
 return IiIIi1
 if 27 - 27: iII111i . I11i . iIii1I11I1II1 . iIii1I11I1II1
 if 20 - 20: o0oOOo0O0Ooo / i1IIi
 if 71 - 71: OoOoOO00 . i1IIi
def o0 ( url ) :
 try :
  I1iIiI11I1 = O00oO0 ( url , 1 )
  import gzip , binascii
  try :
   from StringIO import StringIO as BytesIO
  except ImportError :
   from io import BytesIO
  if '0ccdc' in I1iIiI11I1 :
   I1iIiI11I1 = I1iIiI11I1 . split ( '0ccdc' )
   OooO0ooo0o = BytesIO ( binascii . unhexlify ( I1iIiI11I1 [ 0 ] ) )
   iii1 = gzip . GzipFile ( fileobj = OooO0ooo0o )
   I1iIiI11I1 = iii1 . read ( )
   I1iIiI11I1 = I1iIiI11I1 . decode ( 'utf-8' )
 except :
  I1iIiI11I1 = O00oO0 ( url , 1 )
 return I1iIiI11I1
 if 32 - 32: Ii1I . IiII . OoooooooOO - OoO0O00 + oO0o
def ooO0oO00O0o ( url , fanart ) :
 ooOO00oOOo000 = xbmcaddon . Addon ( ) . getSetting ( "adult" )
 IIii11II11II1 = xbmcaddon . Addon ( ) . getSetting ( "adult2" )
 II1I = IiIiiI . getSetting ( 'uhdtv' )
 OoOo000oOo0oo = IiIiiI . getSetting ( 'fhdtv' )
 oO0O = IiIiiI . getSetting ( 'hdtv' )
 oOO = IiIiiI . getSetting ( 'sdtv' )
 iiiIIiIi = IiIiiI . getSetting ( 'filtrar' )
 I1iIiI11I1 = o0 ( url )
 if isinstance ( I1iIiI11I1 , ( int , str , list ) ) :
  OooOOO = re . compile ( '<channels>(.+?)</channels>' , re . MULTILINE | re . DOTALL ) . findall ( I1iIiI11I1 )
  Ii1iI11iI1 = re . compile ( '<channel>(.*?)</channel>' , re . MULTILINE | re . DOTALL ) . findall ( I1iIiI11I1 )
  i11 = re . compile ( '<item>(.*?)</item>' , re . MULTILINE | re . DOTALL ) . findall ( I1iIiI11I1 )
  if len ( OooOOO ) > 0 :
   for Ii1iI11iI1 in Ii1iI11iI1 :
    I1II = ''
    OO0 = 0
    try :
     I1II = re . compile ( '<externallink>(.*?)</externallink>' ) . findall ( Ii1iI11iI1 ) [ 0 ]
     OO0 = len ( re . compile ( '<externallink>(.*?)</externallink>' ) . findall ( Ii1iI11iI1 ) )
    except : pass
    if 84 - 84: OoOoOO00 % ooOoO0o - OoOoOO00 . o0oOOo0O0Ooo
    try :
     I1II = base64 . b32decode ( I1II [ : : - 1 ] ) . decode ( 'utf-8' )
    except :
     pass
     if 5 - 5: OoOoOO00 * I1Ii111 - I1ii11iIi11i / iIii1I11I1II1 % oO0o + IiII
     if 51 - 51: I1Ii111 * II111iiii % ooOoO0o
    IIIIiii1IIii = re . compile ( '<name>(.*?)</name>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
    try :
     oO0 = re . compile ( '<thumbnail>(.*?)</thumbnail>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
    except :
     oO0 = ''
    try :
     o000OoOoO0 = re . compile ( '<fanart>(.*?)</fanart>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
    except :
     o000OoOoO0 = ''
     if 99 - 99: o0oOOo0O0Ooo * I1IiiI % Oo0Ooo . OoOoOO00
    if not o000OoOoO0 :
     if __addon__ . getSetting ( 'use_thumb' ) == "true" :
      O00o00O = oO0
     else :
      O00o00O = fanart
    else :
     O00o00O = o000OoOoO0
    if O00o00O == None :
     if 3 - 3: OOooOOo
     O00o00O = ''
     if 20 - 20: II111iiii . iII111i / II111iiii % i11iIiiIii % iII111i
    try :
     I11Ii11iI1 = re . compile ( '<info>(.*?)</info>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I11Ii11iI1 == None :
      if 39 - 39: I1IiiI * i11iIiiIii - oO0o / IiII % I1Ii111 % I11i
      I11Ii11iI1 = ''
    except :
     I11Ii11iI1 = ''
     if 65 - 65: oO0o - ooOoO0o % OoooooooOO / OoooooooOO % OoooooooOO
    try :
     oOoOoo0 = re . compile ( '<genre>(.*?)</genre>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if oOoOoo0 == None :
      if 16 - 16: I1IiiI
      oOoOoo0 = ''
    except :
     oOoOoo0 = ''
     if 6 - 6: OOooOOo - I1ii11iIi11i + Ii1I + i1IIi / O0 / o0oOOo0O0Ooo
    try :
     Iii = re . compile ( '<date>(.*?)</date>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if Iii == None :
      if 34 - 34: Ii1I / ooOoO0o - iII111i
      Iii = ''
    except :
     Iii = ''
     if 99 - 99: OOooOOo
    try :
     credits = re . compile ( '<credits>(.*?)</credits>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if credits == None :
      if 45 - 45: oO0o - OOooOOo * I1Ii111 / Oo0Ooo * II111iiii - I1Ii111
      credits = ''
    except :
     credits = ''
     if 83 - 83: OoO0O00 % IiII . OoooooooOO
    try :
     O0Oo = re . compile ( '<year>(.*?)</year>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if O0Oo == None :
      if 7 - 7: IiII % iIii1I11I1II1 + I11i - Ii1I * oO0o
      O0Oo = ''
    except :
     O0Oo = ''
     if 94 - 94: OoOoOO00 . O0 / Ii1I . I1ii11iIi11i - i1IIi
    try :
     iIi1III1I = re . compile ( '<director>(.*?)</director>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if iIi1III1I == None :
      if 71 - 71: I1Ii111
      iIi1III1I = ''
    except :
     iIi1III1I = ''
     if 11 - 11: O0 / OoO0O00 % OOooOOo + o0oOOo0O0Ooo + iIii1I11I1II1
    try :
     I1i1111I = re . compile ( '<writer>(.*?)</writer>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I1i1111I == None :
      if 95 - 95: iIii1I11I1II1 - I1ii11iIi11i . I1Ii111 - I1IiiI
      I1i1111I = ''
    except :
     I1i1111I = ''
     if 75 - 75: OoO0O00 + o0oOOo0O0Ooo - i1IIi . OoooooooOO * Ii1I / IiII
    try :
     OOOooo0OooOoO = re . compile ( '<duration>(.*?)</duration>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if OOOooo0OooOoO == None :
      if 91 - 91: oO0o + I1IiiI
      OOOooo0OooOoO = ''
    except :
     OOOooo0OooOoO = ''
     if 59 - 59: I1IiiI + i11iIiiIii + i1IIi / I11i
    try :
     I11 = re . compile ( '<premiered>(.*?)</premiered>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I11 == None :
      if 47 - 47: I1ii11iIi11i / oO0o / iII111i
      I11 = ''
    except :
     I11 = ''
     if 86 - 86: o0oOOo0O0Ooo
    try :
     IiIIIII1I1Ii11iI = re . compile ( '<studio>(.*?)</studio>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if IiIIIII1I1Ii11iI == None :
      if 52 - 52: OOooOOo - iII111i * oO0o
      IiIIIII1I1Ii11iI = ''
    except :
     IiIIIII1I1Ii11iI = ''
     if 17 - 17: OoooooooOO + OOooOOo * I11i * OoOoOO00
    try :
     iiIii1I = re . compile ( '<rate>(.*?)</rate>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if iiIii1I == None :
      if 47 - 47: ooOoO0o . I11i / o0oOOo0O0Ooo
      iiIii1I = ''
    except :
     iiIii1I = ''
     if 83 - 83: o0oOOo0O0Ooo / OOooOOo / OOooOOo + o0oOOo0O0Ooo * I1Ii111 + o0oOOo0O0Ooo
    try :
     IIIIiii = re . compile ( '<originaltitle>(.*?)</originaltitle>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if IIIIiii == None :
      if 65 - 65: Oo0Ooo / I11i
      IIIIiii = ''
    except :
     IIIIiii = ''
     if 12 - 12: I11i % OoOoOO00
    try :
     i1iIIi = re . compile ( '<country>(.*?)</country>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if i1iIIi == None :
      if 58 - 58: II111iiii
      i1iIIi = ''
    except :
     i1iIIi = ''
     if 19 - 19: I1ii11iIi11i - I11i . II111iiii - OoO0O00 . IiII * OoooooooOO
    try :
     O0oOo0OOOoO = re . compile ( '<rating>(.*?)</rating>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if O0oOo0OOOoO == None :
      if 11 - 11: o0oOOo0O0Ooo * OoO0O00
      O0oOo0OOOoO = ''
    except :
     O0oOo0OOOoO = ''
     if 15 - 15: OoOoOO00
    try :
     oOoOoO000OO = re . compile ( '<userrating>(.*?)</userrating>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if oOoOoO000OO == None :
      if 38 - 38: o0oOOo0O0Ooo
      oOoOoO000OO = ''
    except :
     oOoOoO000OO = ''
     if 23 - 23: Oo0Ooo % I11i - OOooOOo % iIii1I11I1II1 . OoOoOO00
    try :
     I1Ii1 = re . compile ( '<votes>(.*?)</votes>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if I1Ii1 == None :
      if 79 - 79: i11iIiiIii . OOooOOo - Oo0Ooo / OoooooooOO
      I1Ii1 = ''
    except :
     I1Ii1 = ''
     if 66 - 66: OoO0O00 * Oo0Ooo
    try :
     II1IIIiiI11 = re . compile ( '<aired>(.*?)</aired>' , re . MULTILINE | re . DOTALL ) . findall ( Ii1iI11iI1 ) [ 0 ]
     if II1IIIiiI11 == None :
      if 86 - 86: OoO0O00 % OoooooooOO % OoO0O00 / I1IiiI
      II1IIIiiI11 = ''
    except :
     II1IIIiiI11 = ''
     if 56 - 56: OoooooooOO % i11iIiiIii * iIii1I11I1II1 . OoO0O00 * O0
    try :
     if I1II == '' :
      if 23 - 23: i11iIiiIii
      if 39 - 39: o0oOOo0O0Ooo - I1ii11iIi11i % iII111i * OoO0O00 - OOooOOo / iII111i
      iIiiiiii1 ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , '' , 1 , oO0 , O00o00O , I11Ii11iI1 , oOoOoo0 , Iii , credits , O0Oo , iIi1III1I , I1i1111I , OOOooo0OooOoO , I11 , IiIIIII1I1Ii11iI , iiIii1I , IIIIiii , i1iIIi , O0oOo0OOOoO , oOoOoO000OO , I1Ii1 , II1IIIiiI11 )
     else :
      if 78 - 78: I1ii11iIi11i + I11i - O0
      if 10 - 10: I1Ii111 % I1IiiI
      if ooOO00oOOo000 == 'false' and re . search ( "ADULTOS" , IIIIiii1IIii , re . IGNORECASE ) and IIIIiii1IIii . find ( '(+18)' ) >= 0 :
       pass
      else :
       iIiiiiii1 ( IIIIiii1IIii . encode ( 'utf-8' , 'ignore' ) , I1II , 1 , oO0 , O00o00O , I11Ii11iI1 , oOoOoo0 , Iii , credits , O0Oo , iIi1III1I , I1i1111I , OOOooo0OooOoO , I11 , IiIIIII1I1Ii11iI , iiIii1I , IIIIiii , i1iIIi , O0oOo0OOOoO , oOoOoO000OO , I1Ii1 , II1IIIiiI11 )
    except :
     O0oo0OO0oOOOo ( '[COLOR red]Erro ao Carregar os dados![/COLOR]' )
  elif re . search ( "#EXTM3U" , I1iIiI11I1 ) or re . search ( "#EXTINF" , I1iIiI11I1 ) :
   oo0OoOooo = I1iIiI11I1 . rstrip ( )
   IiIIi1 = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( oo0OoOooo )
   for O00O00O000OOO , iIOo0O , Ii11 in IiIIi1 :
    if 'tvg-logo' in O00O00O000OOO :
     oO0 = oo0OOo0O ( O00O00O000OOO , 'tvg-logo=[\'"](.*?)[\'"]' )
     if oO0 :
      if oO0 . startswith ( 'http' ) :
       oO0 = oO0
       if 8 - 8: Oo0Ooo + II111iiii * OOooOOo * OoOoOO00 * I11i / IiII
       if 21 - 21: oO0o / OoooooooOO
       if 11 - 11: OOooOOo % Ii1I - i11iIiiIii - oO0o + ooOoO0o + IiII
       if 87 - 87: I1Ii111 * i1IIi / I1ii11iIi11i
      else :
       oO0 = ''
     else :
      oO0 = ''
    else :
     oO0 = ''
     if 6 - 6: o0oOOo0O0Ooo + Oo0Ooo - OoooooooOO % OOooOOo * OoOoOO00
    if 'group-title' in O00O00O000OOO :
     oOoO = oo0OOo0O ( O00O00O000OOO , 'group-title=[\'"](.*?)[\'"]' )
    else :
     oOoO = ''
     if 26 - 26: OoOoOO00 / Oo0Ooo - i1IIi + I11i
    try :
     if 38 - 38: OoooooooOO / I1ii11iIi11i . O0 / i1IIi / Oo0Ooo + iIii1I11I1II1
     if II1I == 'false' and re . search ( "4K" , iIOo0O ) :
      pass
     elif OoOo000oOo0oo == 'false' and re . search ( "FHD" , iIOo0O ) :
      pass
     elif oO0O == 'false' and re . search ( "HD" , iIOo0O ) and not re . search ( "FHD" , iIOo0O ) :
      pass
     elif oOO == 'false' and re . search ( "SD" , iIOo0O ) :
      pass
     elif oOO == 'false' and not re . search ( "SD" , iIOo0O ) and not re . search ( "HD" , iIOo0O ) and not re . search ( "4K" , iIOo0O ) :
      pass
      if 96 - 96: iII111i
     elif int ( iiiIIiIi ) == 1 and re . search ( "Praia" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 1 and not re . search ( "SPORTV" , iIOo0O , re . IGNORECASE ) and not re . search ( "DAZN" , iIOo0O , re . IGNORECASE ) and not re . search ( "ESPN Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "PREMIERE" , iIOo0O , re . IGNORECASE ) and not re . search ( "COPA" , iIOo0O , re . IGNORECASE ) :
      pass
      if 18 - 18: iII111i * I11i - Ii1I
     elif int ( iiiIIiIi ) == 2 and re . search ( "Praia" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 2 and not re . search ( "Band Sports" , iIOo0O , re . IGNORECASE ) and not re . search ( "Combate" , iIOo0O , re . IGNORECASE ) and not re . search ( "Fox Sports" , iIOo0O , re . IGNORECASE ) and not re . search ( "SPORTV" , iIOo0O , re . IGNORECASE ) and not re . search ( "DAZN" , iIOo0O , re . IGNORECASE ) and not re . search ( "ESPN" , iIOo0O , re . IGNORECASE ) and not re . search ( "PREMIERE" , iIOo0O , re . IGNORECASE ) and not re . search ( "COPA" , iIOo0O , re . IGNORECASE ) :
      pass
      if 31 - 31: Oo0Ooo - O0 % OoOoOO00 % oO0o
     elif int ( iiiIIiIi ) == 3 and re . search ( "Sports" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 3 and re . search ( "XY Max" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 3 and not re . search ( "AMC" , iIOo0O , re . IGNORECASE ) and not re . search ( "Canal Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "Cinemax" , iIOo0O , re . IGNORECASE ) and not re . search ( "HBO" , iIOo0O , re . IGNORECASE ) and not re . search ( "Max" , iIOo0O , re . IGNORECASE ) and not re . search ( "Megapix" , iIOo0O , re . IGNORECASE ) and not re . search ( "Paramount" , iIOo0O , re . IGNORECASE ) and not re . search ( "SPACE" , iIOo0O , re . IGNORECASE ) and not re . search ( "TCM" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Action" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Action" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Cult" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Cult" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Cult" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Fun" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Fun" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Pipoca" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Pipoca" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Premium" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Premium" , iIOo0O , re . IGNORECASE ) and not re . search ( "Telecine Touch" , iIOo0O , re . IGNORECASE ) and not re . search ( "TC Touch" , iIOo0O , re . IGNORECASE ) and not re . search ( "TNT" , iIOo0O , re . IGNORECASE ) and not re . search ( "A&E" , iIOo0O , re . IGNORECASE ) and not re . search ( "AXN" , iIOo0O , re . IGNORECASE ) and not re . search ( "AXN" , iIOo0O , re . IGNORECASE ) and not re . search ( "FOX" , iIOo0O , re . IGNORECASE ) and not re . search ( "FX" , iIOo0O , re . IGNORECASE ) and not re . search ( "SONY" , iIOo0O , re . IGNORECASE ) and not re . search ( "Studio Universal" , iIOo0O , re . IGNORECASE ) and not re . search ( "SyFy" , iIOo0O , re . IGNORECASE ) and not re . search ( "Universal Channel" , iIOo0O , re . IGNORECASE ) and not re . search ( "Universal TV" , iIOo0O , re . IGNORECASE ) and not re . search ( "Warner" , iIOo0O , re . IGNORECASE ) :
      pass
      if 45 - 45: I1ii11iIi11i + II111iiii * i11iIiiIii
     elif int ( iiiIIiIi ) == 4 and re . search ( "FM" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 4 and not re . search ( "Baby TV" , iIOo0O , re . IGNORECASE ) and not re . search ( "BOOMERANG" , iIOo0O , re . IGNORECASE ) and not re . search ( "CARTOON NETWORK" , iIOo0O , re . IGNORECASE ) and not re . search ( "DISCOVERY KIDS" , iIOo0O , re . IGNORECASE ) and not re . search ( "DISNEY" , iIOo0O , re . IGNORECASE ) and not re . search ( "GLOOB" , iIOo0O , re . IGNORECASE ) and not re . search ( "NAT GEO KIDS" , iIOo0O , re . IGNORECASE ) and not re . search ( "NICKELODEON" , iIOo0O , re . IGNORECASE ) and not re . search ( "NICK JR" , iIOo0O , re . IGNORECASE ) and not re . search ( "PLAYKIDS" , iIOo0O , re . IGNORECASE ) and not re . search ( "TOONCAST" , iIOo0O , re . IGNORECASE ) and not re . search ( "ZOOMOO" , iIOo0O , re . IGNORECASE ) :
      pass
      if 13 - 13: OoooooooOO * oO0o - Ii1I / OOooOOo + I11i + IiII
     elif int ( iiiIIiIi ) == 5 and re . search ( "Kids" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 5 and not re . search ( "Discovery" , iIOo0O , re . IGNORECASE ) and not re . search ( "H2 HD" , iIOo0O , re . IGNORECASE ) and not re . search ( "H2 SD" , iIOo0O , re . IGNORECASE ) and not re . search ( "H2 FHD" , iIOo0O , re . IGNORECASE ) and not re . search ( "History" , iIOo0O , re . IGNORECASE ) and not re . search ( "Nat Geo Wild" , iIOo0O , re . IGNORECASE ) and not re . search ( "National Geographic" , iIOo0O , re . IGNORECASE ) :
      pass
      if 39 - 39: iIii1I11I1II1 - OoooooooOO
     elif int ( iiiIIiIi ) == 6 and re . search ( "Brasileirinhas" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 6 and re . search ( "News" , iIOo0O , re . IGNORECASE ) or int ( iiiIIiIi ) == 6 and re . search ( "Sat" , iIOo0O , re . IGNORECASE ) or int ( iiiIIiIi ) == 6 and re . search ( "FM" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 6 and not re . search ( "Globo" , iIOo0O , re . IGNORECASE ) and not re . search ( "RECORD" , iIOo0O , re . IGNORECASE ) and not re . search ( "RedeTV" , iIOo0O , re . IGNORECASE ) and not re . search ( "Rede Vida" , iIOo0O , re . IGNORECASE ) and not re . search ( "SBT" , iIOo0O , re . IGNORECASE ) and not re . search ( "TV Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "TV Cultura" , iIOo0O , re . IGNORECASE ) and not re . search ( "TV Diario" , iIOo0O , re . IGNORECASE ) and not re . search ( "BAND" , iIOo0O , re . IGNORECASE ) :
      pass
      if 81 - 81: I1ii11iIi11i - O0 * OoooooooOO
     elif int ( iiiIIiIi ) == 7 and not re . search ( "BBB" , iIOo0O , re . IGNORECASE ) and not re . search ( "Big Brother Brasil" , iIOo0O , re . IGNORECASE ) and not re . search ( "A Fazenda" , iIOo0O , re . IGNORECASE ) :
      pass
      if 23 - 23: II111iiii / oO0o
     elif int ( iiiIIiIi ) == 8 and re . search ( "FM" , iIOo0O , re . IGNORECASE ) :
      pass
     elif int ( iiiIIiIi ) == 8 and not re . search ( "CNN" , iIOo0O , re . IGNORECASE ) and not re . search ( "NEWS" , iIOo0O , re . IGNORECASE ) :
      pass
     elif IIii11II11II1 == 'false' and re . search ( "Adult" , oOoO , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "ADULT" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Blue Hustler" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PlayBoy" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Redlight" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Sextreme" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SexyHot" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Venus" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "AST TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "ASTTV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "AST.TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "BRAZZERS" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "CANDY" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "CENTOXCENTO" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "DORCEL" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "EROXX" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PASSION" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PENTHOUSE" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PINK-O" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PINK O" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "PRIVATE" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "RUSNOCH" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SCT" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SEXT6SENSO" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "SHALUN TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "VIVID RED" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Porn" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XY Plus" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XY Mix" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XY Mad" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "XXL" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Desire" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Bizarre" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Sexy HOT" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Reality Kings" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Prive TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Hustler TV" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Extasy" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Evil Angel" , iIOo0O , re . IGNORECASE ) or IIii11II11II1 == 'false' and re . search ( "Erox" , iIOo0O , re .'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))