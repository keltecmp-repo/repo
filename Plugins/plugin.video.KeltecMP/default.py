# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = '# -*- coding: utf-8 -*-
import urllib
import urllib2
import re
import base64
import codecs
import xbmcplugin
import xbmcgui
import xbmcaddon
import xbmcvfs
import traceback
import cookielib
import time
import xbmcgui
import xbmc
import webbrowser
import os
import xbmcaddon
import sys
import datetime
from datetime import datetime
import urlparse , sys , hashlib , htmlentitydefs
from BeautifulSoup import BeautifulStoneSoup , BeautifulSoup , BeautifulSOAP
import check_start
from bs4 import BeautifulSoup
from check_start . start import OO0o
try :
 import json
except :
 import simplejson as json
import SimpleDownloader as downloader
import time
import requests
oo000 = False
import json , uuid as random
import platform
if 9 - 9: Ii . o0o00Oo0O - iI11I1II1I1I
oooo = 'plugin.video.KeltecMP'
iIIii1IIi = xbmcaddon . Addon ( oooo )
o0OO00 = iIIii1IIi . getAddonInfo ( "name" )
oo = iIIii1IIi . getAddonInfo ( 'icon' )
i1iII1IiiIiI1 = iIIii1IIi . getAddonInfo ( 'path' )
iIiiiI1IiI1I1 = i1iII1IiiIiI1 + '/fanart.jpg'
o0OoOoOO00 = i1iII1IiiIiI1 + '/icon.gif'
if 27 - 27: OOOo0 / Oo - Ooo00oOo00o . I1IiI
o0OOO = iIIii1IIi . getAddonInfo ( 'path' ) . decode ( "utf-8" )
iIiiiI = os . path . join ( o0OOO , "resources" , "images" )
if 23 - 23: iii1II11ii * i11iII1iiI + iI1Ii11111iIi + ii1II11I1ii1I + oO0o0ooO0 - iiIIIII1i1iI
o0oO0 = os . path . join ( o0OOO , 'resources' , 'lib' )
sys . path . insert ( 0 , o0oO0 )
import common1
if 100 - 100: i11Ii11I1Ii1i
Ooo = xbmc . translatePath ( iIIii1IIi . getAddonInfo ( "profile" ) ) . decode ( "utf-8" )
o0oOoO00o = os . path . join ( Ooo , "cache" )
if not os . path . exists ( o0oOoO00o ) :
 os . makedirs ( o0oOoO00o )
 if 43 - 43: O0OOo . II1Iiii1111i
i1IIi11111i = os . path . join ( o0OOO , "resources" , "common" , "init.py" )
o000o0o00o0Oo = os . path . join ( o0OOO , "resources" , "common" , "init_.py" )
if 80 - 80: i1iII1I1i1i1 . i1iIIII
I1 = os . path . join ( Ooo , "virtual_directoriesLists.txt" )
O0OoOoo00o = os . path . join ( Ooo , 'tempList.txt' )
iiiI11 = os . path . join ( Ooo , 'favorites.txt' )
if 91 - 91: oOOOO / i1iiIII111ii + Oo . iI1Ii11111iIi
if not ( os . path . isfile ( iiiI11 ) ) :
 common1 . SaveList ( iiiI11 , [ ] )
 if 85 - 85: i11iII1iiI
if not ( os . path . isfile ( I1 ) ) :
 common1 . SaveList ( I1 , [ ] )
 if 63 - 63: iI1Ii11111iIi % Oo
 if 66 - 66: II1Iiii1111i
oo0Ooo0 = iIIii1IIi . getSetting ( "makeGroups" ) == "true"
if 46 - 46: i1iiIII111ii % i1iiIII111ii - iiIIIII1i1iI * ii1II11I1ii1I % i1iII1I1i1i1
if 55 - 55: iI1Ii11111iIi % Oo / II1Iiii1111i - iiIIIII1i1iI - o0o00Oo0O / Ooo00oOo00o
if 28 - 28: iI11I1II1I1I - Oo
if 70 - 70: i11iII1iiI . i11iII1iiI - i11iII1iiI / oO0o0ooO0 * i11Ii11I1Ii1i
OoO000 = 'aHR0cHM6Ly91cmxyZWRpci5tbC9hZGRvbg=='
IIiiIiI1 = base64 . b64decode ( OoO000 )
if 41 - 41: iI1Ii11111iIi
II = 'aHR0cHM6Ly91cmxyZWRpci5tbC9ob21lLXR2'
ooOoOoo0O = base64 . b64decode ( II )
if 76 - 76: o0o00Oo0O / ii1II11I1ii1I . I1IiI * II1Iiii1111i - i11Ii11I1Ii1i
if 76 - 76: Ii / iI11I1II1I1I . oO0o0ooO0 % i11Ii11I1Ii1i / OOOo0 % iiIIIII1i1iI
if 75 - 75: i1iII1I1i1i1
ooO0o0Oo = '[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]'
if 78 - 78: iI11I1II1I1I - II1Iiii1111i * i11iII1iiI + ii1II11I1ii1I + i1iII1I1i1i1 + i1iII1I1i1i1
if 11 - 11: i1iII1I1i1i1 - i11iII1iiI % i1iiIII111ii % i1iII1I1i1i1 / iI1Ii11111iIi - i11iII1iiI
if 74 - 74: i1iII1I1i1i1 * o0o00Oo0O
oOOo0oo = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] BEM VINDOS[/B]\n[COLOR orangered]|[/COLOR] Tv ao Vivo [COLOR orangered]|[/COLOR] Filmes [COLOR orangered]|[/COLOR] Séries [COLOR orangered]|[/COLOR] Desenhos [COLOR orangered]|[/COLOR] Animes [COLOR orangered]|[/COLOR] Melhores Lançamentos Dual Audio[COLOR orangered]|[/COLOR]'
if 80 - 80: O0OOo * Ii / oOOOO
if 9 - 9: II1Iiii1111i + iiIIIII1i1iI % II1Iiii1111i + Oo . i11Ii11I1Ii1i
if 31 - 31: ii1II11I1ii1I + O0OOo + O0OOo / Ooo00oOo00o
iiI1 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] SUPORTE [COLOR crimson]|[/COLOR][/COLOR][COLOR orangered] TOP VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 19 - 19: O0OOo + i1iiIII111ii
if 53 - 53: OOOo0 . Oo
if 18 - 18: ii1II11I1ii1I
I1i1I1II = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR red] AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] O acesso [COLOR orangered]Top Vip[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo e fique por dentro do melhor conteúdo familiar.\nA Team KelTec Media-Play deseja um ótimo entretenimento a todos!'
if 45 - 45: oOOOO . iI1Ii11111iIi
if 83 - 83: iiIIIII1i1iI . iI11I1II1I1I . oO0o0ooO0
if 31 - 31: II1Iiii1111i . II1Iiii1111i - ii1II11I1ii1I / i11iII1iiI + i1iiIII111ii * I1IiI
if 63 - 63: oOOOO % Oo / OOOo0 - OOOo0
iIii11I = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 69 - 69: iiIIIII1i1iI % oOOOO - ii1II11I1ii1I + oOOOO - o0o00Oo0O % OOOo0
if 31 - 31: Ooo00oOo00o - i11Ii11I1Ii1i . oOOOO % iI1Ii11111iIi - o0o00Oo0O
if 4 - 4: Ooo00oOo00o / i1iiIII111ii . i1iII1I1i1i1
if 58 - 58: i11Ii11I1Ii1i * Ii / iI1Ii11111iIi % oOOOO - oO0o0ooO0 / iiIIIII1i1iI
if 50 - 50: I1IiI
if 34 - 34: I1IiI * Ooo00oOo00o % i1iII1I1i1i1 * iI1Ii11111iIi - I1IiI
II1III = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]CONFIGURAÇÕES!\n[/B][COLOR orangered]|[/COLOR] Ajustes  gerais do Add-on.'
if 19 - 19: iiIIIII1i1iI % Oo % ii1II11I1ii1I
if 93 - 93: iI11I1II1I1I % iiIIIII1i1iI * Oo
if 16 - 16: o0o00Oo0O - oOOOO * iI11I1II1I1I + i1iII1I1i1i1
if 50 - 50: Ooo00oOo00o - i1iiIII111ii * oO0o0ooO0 / oOOOO + ii1II11I1ii1I
if 88 - 88: II1Iiii1111i / oOOOO + i1iII1I1i1i1 - Ooo00oOo00o / i1iiIII111ii - iI1Ii11111iIi
if 15 - 15: oO0o0ooO0 + iI1Ii11111iIi - OOOo0 / i11Ii11I1Ii1i
if 58 - 58: Ii % O0OOo
if 71 - 71: i11Ii11I1Ii1i + i1iiIII111ii % Ii + oO0o0ooO0 - i1iIIII
if 88 - 88: iI1Ii11111iIi - i11iII1iiI % i11Ii11I1Ii1i
iI1I111Ii111i = 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0'
if 7 - 7: i1iiIII111ii * i11iII1iiI % iiIIIII1i1iI . i1iIIII
if 45 - 45: Ii * Ooo00oOo00o % iI11I1II1I1I + oO0o0ooO0 - II1Iiii1111i
if 17 - 17: i1iIIII
ooOooo000oOO = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]TOP[/COLOR] [COLOR orangered](VIP)[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
Oo0oOOo = 'https://i97.servimg.com/u/f97/19/82/45/70/infant14.png'
Oo0OoO00oOO0o = 'https://i97.servimg.com/u/f97/19/82/45/70/fanart17.jpg'
if 80 - 80: iiIIIII1i1iI + i11Ii11I1Ii1i - i11Ii11I1Ii1i % i1iII1I1i1i1
if 63 - 63: I1IiI - oO0o0ooO0 + o0o00Oo0O % O0OOo / iI11I1II1I1I / ii1II11I1ii1I
if 98 - 98: i1iII1I1i1i1 * i1iII1I1i1i1 / i1iII1I1i1i1 + O0OOo
ii111111I1iII = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] BEM-VINDOS AO TOP[/COLOR] [COLOR orangered](VIP)[/B][/COLOR] [B][COLOR orangered]|[/COLOR][/B][COLOR white] POR FAVOR CERTIFIQUE-SE DE TER INSERIDO USUÁRIO E SENHA CORRETOS, [B][COLOR orangered]|[/COLOR][/B] PARA ACESSO [B]TOP [COLOR orangered](VIP)[/B][B][/COLOR]! [COLOR orangered]|[/COLOR][/B]'
if 68 - 68: i1iII1I1i1i1 - iI11I1II1I1I * Ii / oO0o0ooO0 * oOOOO
if 23 - 23: i1iII1I1i1i1
if 91 - 91: iI11I1II1I1I + oOOOO
i1i = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]TOP[/COLOR] [COLOR orangered](VIP2)[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 46 - 46: oOOOO % O0OOo + i11iII1iiI . iI1Ii11111iIi . i11iII1iiI
if 96 - 96: iii1II11ii
if 45 - 45: o0o00Oo0O * ii1II11I1ii1I % iii1II11ii * OOOo0 + i1iII1I1i1i1 . iI1Ii11111iIi
Oo0ooOo0o = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] BEM-VINDOS AO TOP[/COLOR] [COLOR orangered](VIP)[/B][/COLOR] [B][COLOR orangered]|[/COLOR][/B][COLOR white] POR FAVOR CERTIFIQUE-SE DE TER INSERIDO USUÁRIO E SENHA CORRETOS, [B][COLOR orangered]|[/COLOR][/B] PARA ACESSO [B]TOP [COLOR orangered](VIP)[/COLOR][/B][B][/COLOR] [COLOR orangered]|[/COLOR][/B]'
if 22 - 22: iI11I1II1I1I / Ii * iI11I1II1I1I * Ooo00oOo00o . i11Ii11I1Ii1i / Ii
if 2 - 2: I1IiI / o0o00Oo0O / ii1II11I1ii1I % iI1Ii11111iIi % II1Iiii1111i
if 52 - 52: ii1II11I1ii1I
if 95 - 95: II1Iiii1111i
if 87 - 87: i1iiIII111ii + iI1Ii11111iIi . i11Ii11I1Ii1i + iI1Ii11111iIi
oO = '[COLOR orangered]KelTec Play Escolha uma opção:[/COLOR]'
if 7 - 7: ii1II11I1ii1I - I1IiI
OOo00O0 = '[COLOR white]!!Download em execução!![/COLOR]'
ooOOOoO = '!!Download [COLOR seablue]Audio!![/COLOR]'
if 67 - 67: oOOOO . i1iII1I1i1i1 . o0o00Oo0O
if 10 - 10: oO0o0ooO0 % oO0o0ooO0 - iI11I1II1I1I / i11Ii11I1Ii1i + II1Iiii1111i
OOOOoOoo0O0O0 = '[B][COLOR red]BEM-VINDOS[/COLOR][/B]'
if 85 - 85: iiIIIII1i1iI % Ii - i1iII1I1i1i1 * OOOo0 / I1IiI % I1IiI
IIiIi1iI = '[B][COLOR silver]Configurações Ativar & Desativar Mensagens[/COLOR][/B]'
if 35 - 35: II1Iiii1111i % o0o00Oo0O - o0o00Oo0O
IiIIIi1iIi = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR crimson]|[/COLOR] ADD-ON [COLOR crimson]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]'
if 68 - 68: Ii % oO0o0ooO0 + Ii
if 31 - 31: Ooo00oOo00o . I1IiI
II1I = "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orangered] | [/COLOR]KelTec Media'Play Principal"
if 84 - 84: i1iIIII . Ii . i1iIIII * oO0o0ooO0 - O0OOo
if 42 - 42: Ii
I11i1iIII = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 32 - 32: OOOo0 / iI11I1II1I1I - ii1II11I1ii1I
if 91 - 91: i1iII1I1i1i1 % Oo % iI11I1II1I1I
if 20 - 20: i11Ii11I1Ii1i % II1Iiii1111i / II1Iiii1111i + II1Iiii1111i
III1IiiI = "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orangered] | [/COLOR]KelTec Play Filmes & Series"
if 31 - 31: ii1II11I1ii1I . I1IiI
if 46 - 46: i1iII1I1i1i1
IIIII11I1IiI = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 16 - 16: iI11I1II1I1I
if 90 - 90: ii1II11I1ii1I % Oo / i11iII1iiI
if 44 - 44: iii1II11ii . i11iII1iiI / oO0o0ooO0 + II1Iiii1111i
o0o = "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Media'Play[/COLOR][/B][COLOR orangered] | [/COLOR]KelTec Play TV"
if 73 - 73: i1iIIII * oO0o0ooO0 + I1IiI . i1iiIII111ii
if 70 - 70: oOOOO - iii1II11ii / II1Iiii1111i
O00OOOOOoo0 = '[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR red]AVISO IMPORTANTE![/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!'
if 49 - 49: o0o00Oo0O . i1iII1I1i1i1
if 11 - 11: i1iIIII * I1IiI . iI11I1II1I1I % OOOo0 + i1iII1I1i1i1
if 78 - 78: i11iII1iiI . i11Ii11I1Ii1i + i11iII1iiI / O0OOo / i11iII1iiI
oO0O00OoOO0 = '$nome='
if 82 - 82: Ooo00oOo00o . i1iIIII - iI11I1II1I1I - i1iIIII * Ooo00oOo00o
if 77 - 77: iI11I1II1I1I * i11iII1iiI
__addon__ = xbmcaddon . Addon ( )
__addonname__ = __addon__ . getAddonInfo ( 'name' )
__icon__ = __addon__ . getAddonInfo ( 'icon' )
if 95 - 95: I1IiI + Ii
I1Ii = { 'User-Agent' : 'Mozilla/5.0 (Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' }
O0oo00o0O = [ '180upload.com' , 'allmyvideos.net' , 'bestreams.net' , 'clicknupload.com' , 'cloudzilla.to' , 'movshare.net' , 'novamov.com' , 'nowvideo.sx' , 'videoweed.es' , 'daclips.in' , 'datemule.com' , 'fastvideo.in' , 'faststream.in' , 'filehoot.com' , 'filenuke.com' , 'sharesix.com' , 'docs.google.com' , 'plus.google.com' , 'picasaweb.google.com' , 'gorillavid.com' , 'gorillavid.in' , 'grifthost.com' , 'hugefiles.net' , 'ipithos.to' , 'ishared.eu' , 'kingfiles.net' , 'mail.ru' , 'my.mail.ru' , 'videoapi.my.mail.ru' , 'mightyupload.com' , 'mooshare.biz' , 'movdivx.com' , 'movpod.net' , 'movpod.in' , 'movreel.com' , 'mrfile.me' , 'nosvideo.com' , 'openload.io' , 'played.to' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'primeshare.tv' , 'bitshare.com' , 'filefactory.com' , 'k2s.cc' , 'oboom.com' , 'rapidgator.net' , 'uploaded.net' , 'sharerepo.com' , 'stagevu.com' , 'streamcloud.eu' , 'streamin.to' , 'thefile.me' , 'thevideo.me' , 'tusfiles.net' , 'uploadc.com' , 'zalaa.com' , 'uploadrocket.net' , 'uptobox.com' , 'v-vids.com' , 'veehd.com' , 'vidbull.com' , 'videomega.tv' , 'vidplay.net' , 'vidspot.net' , 'vidto.me' , 'vidzi.tv' , 'vimeo.com' , 'vk.com' , 'vodlocker.com' , 'xfileload.com' , 'xvidstage.com' , 'zettahost.tv' ]
i1I1I = [ 'plugin.video.dramasonline' , 'plugin.video.f4mTester' , 'plugin.video.shahidmbcnet' , 'plugin.video.SportsDevil' , 'plugin.stream.vaughnlive.tv' , 'plugin.video.ZemTV-shani' ]
if 12 - 12: Ii / i11iII1iiI
if 80 - 80: oOOOO . Ii - ii1II11I1ii1I
iIiIIi1 = 'plugin.video.KeltecMP'
I1IIII1i = xbmcaddon . Addon ( id = iIiIIi1 )
i1iII1IiiIiI1 = I1IIII1i . getAddonInfo ( 'path' )
I1I11i = i1iII1IiiIiI1 + '/resources/img/'
Ii1I1I1i1Ii = xbmcaddon . Addon ( )
i1 = Ii1I1I1i1Ii . getAddonInfo ( 'version' )
Oo0oO00o = xbmc . translatePath ( Ii1I1I1i1Ii . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
i11I1II1I11i = xbmc . translatePath ( Ii1I1I1i1Ii . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
OooOoOO0 = os . path . join ( Oo0oO00o , 'favorites' )
iI1i11iII111 = os . path . join ( Oo0oO00o , 'history' )
Iii1IIII11I = xbmcgui . Dialog ( )
if 77 - 77: iii1II11ii - Oo - O0OOo . iI1Ii11111iIi
IiI1i = os . path . join ( Oo0oO00o , 'list_revision' )
oo = os . path . join ( i11I1II1I11i , 'icon.png' )
o0O = os . path . join ( i11I1II1I11i , 'icon.png' )
o00 = os . path . join ( i11I1II1I11i , 'icon.png' )
iI = os . path . join ( i11I1II1I11i , 'fanart.jpg' )
O0O0Oooo0o = os . path . join ( i11I1II1I11i , 'icon.png' )
OooOoOO0 = os . path . join ( i11I1II1I11i , 'favorites.png' )
oOOoo00O00o = os . path . join ( i11I1II1I11i , 'fanart.jpg' )
O0O00Oo = os . path . join ( Oo0oO00o , 'source_file' )
oooooo0O000o = Oo0oO00o
if 64 - 64: I1IiI . ii1II11I1ii1I - oOOOO / OOOo0
if 66 - 66: i1iII1I1i1i1 - i1iII1I1i1i1 - Ii . oO0o0ooO0 - i11Ii11I1Ii1i
downloader = downloader . SimpleDownloader ( )
oOOo0O00o = Ii1I1I1i1Ii . getSetting ( 'debug' )
if os . path . exists ( OooOoOO0 ) == True :
 iIiIi11 = open ( OooOoOO0 ) . read ( )
else : iIiIi11 = [ ]
if os . path . exists ( O0O00Oo ) == True :
 OOO = open ( O0O00Oo ) . read ( )
else : OOO = [ ]
iiiiI = OO0o ( )
if 62 - 62: OOOo0 * I1IiI
oOOOoo0O0oO = "04.08.2021"
if 6 - 6: i11Ii11I1Ii1i * ii1II11I1ii1I + i1iII1I1i1i1
if 44 - 44: II1Iiii1111i % i11iII1iiI + OOOo0 - o0o00Oo0O - II1Iiii1111i - Ooo00oOo00o
if 99 - 99: i1iiIII111ii . II1Iiii1111i + oOOOO + OOOo0 % ii1II11I1ii1I
if 51 - 51: iI11I1II1I1I
def iIIiIi1 ( string ) :
 if oOOo0O00o == 'true' :
  if 74 - 74: i1iII1I1i1i1 + ii1II11I1ii1I
  xbmc . log ( "[KelTec Media'Play-%s]: %s" % ( i1 , string ) )
  if 71 - 71: iii1II11ii % i11Ii11I1Ii1i
def O00oO000O0O ( url ) :
 I1i1i1iii = urllib2 . build_opener ( )
 if 16 - 16: II1Iiii1111i + i1iIIII * o0o00Oo0O % Oo . I1IiI
 I1i1i1iii . addheaders = [ ( 'User-Agent' , iI1I111Ii111i ) ]
 Oo0OO = I1i1i1iii . open ( url )
 O0OooOo0o = Oo0OO . read ( )
 return O0OooOo0o
 if 29 - 29: I1IiI % I1IiI
def Oo0O0 ( msg ) :
 Ooo0OOoOoO0 = Ii1I1I1i1Ii . getSetting ( 'mensagem2' )
 if Ooo0OOoOoO0 == 'true' :
  xbmc . executebuiltin ( "Notification({0}, {1}, 10000, {2})" . format ( __addonname__ , "[B][COLOR orangered]|[/COLOR][/B] [B]TV AO VIVO[/B] [B][COLOR orangered]|[/COLOR][/B] [B]FILMES [B][COLOR orangered]|[/COLOR][/B] [B]SERIES[/B] [B][COLOR orangered]|[/COLOR][/B] [B]DESENHOS[/B] [B][COLOR orangered]|[/COLOR][/B] [B]ANIMES[/B] [B][COLOR orangered]|[/COLOR][/B] [B]MELHORES LANÇAMENTOS DUAL AUDIO[/B] [B][COLOR orangered]|[/COLOR][/B]" , __icon__ ) )
  if 70 - 70: iiIIIII1i1iI
  if 59 - 59: ii1II11I1ii1I % iiIIIII1i1iI
  if 6 - 6: iI11I1II1I1I % Ii % oO0o0ooO0
  if 93 - 93: i1iIIII * OOOo0 + i1iiIII111ii
def IiII111i1i11 ( url ) :
 try :
  import urllib . request as urllib2
 except ImportError :
  import urllib2
 I1i1i1iii = urllib2 . build_opener ( )
 I1i1i1iii . addheaders = [ ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' ) ]
 if 40 - 40: i1iiIII111ii * i1iIIII * Ii
 Oo0OO = I1i1i1iii . open ( url )
 oo0OO00OoooOo = Oo0OO . read ( ) . decode ( 'utf-8' )
 II1i111Ii1i = oo0OO00OoooOo
 return II1i111Ii1i
 if 15 - 15: Ooo00oOo00o / Oo
 if 76 - 76: O0OOo / i11Ii11I1Ii1i . o0o00Oo0O % I1IiI . ii1II11I1ii1I + i1iIIII
 if 71 - 71: oOOOO . Ooo00oOo00o
 if 62 - 62: OOOo0 . O0OOo
def oOOOoo00 ( msg ) :
 iiIiIIIiiI = Ii1I1I1i1Ii . getSetting ( 'username' )
 iiI1IIIi = Ii1I1I1i1Ii . getSetting ( 'password' )
 if 47 - 47: iii1II11ii % O0OOo % Ii - o0o00Oo0O + i1iiIII111ii
 ooO000OO0O00O = Ii1I1I1i1Ii . getSetting ( 'exibirvip' )
 OOOoOO0o = Ii1I1I1i1Ii . getSetting ( 'saida' )
 if ooO000OO0O00O == 'true' :
  if 1 - 1: Ooo00oOo00o
  if iiIiIIIiiI > '' and iiI1IIIi > '' :
   O0oOo00o = 'http://lista.lorddark.club:80/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( iiIiIIIiiI , iiI1IIIi , OOOoOO0o )
   o0ooooO0o0O ( ooOooo000oOO , O0oOo00o , 1 , O0O0Oooo0o , Oo0OoO00oOO0o , ii111111I1iII , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  else :
   o0ooooO0o0O ( ooOooo000oOO , '' , 42 , O0O0Oooo0o , Oo0OoO00oOO0o , ii111111I1iII , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 iiIiIIIiiI = Ii1I1I1i1Ii . getSetting ( 'username2' )
 iiI1IIIi = Ii1I1I1i1Ii . getSetting ( 'password2' )
 iiIi11iI1iii = Ii1I1I1i1Ii . getSetting ( 'servidor2' )
 ooO000OO0O00O = Ii1I1I1i1Ii . getSetting ( 'exibirvip2' )
 OOOoOO0o = Ii1I1I1i1Ii . getSetting ( 'saida2' )
 if ooO000OO0O00O == 'true' :
  if iiIi11iI1iii == 'TOP VIP2' :
   O0oOo00o = 'http://sv1.iptvcasa.online:25461/get.php?username=%s&password=%s&type=m3u_plus&output=%s' % ( iiIiIIIiiI , iiI1IIIi , OOOoOO0o )
   o0ooooO0o0O ( ooOooo000oOO , O0oOo00o , 1 , O0O0Oooo0o , Oo0OoO00oOO0o , ii111111I1iII , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if iiIi11iI1iii == 'Desativado' :
   o0ooooO0o0O ( ooOooo000oOO , '' , 42 , O0O0Oooo0o , Oo0OoO00oOO0o , ii111111I1iII , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
   if 67 - 67: o0o00Oo0O / oOOOO
def OOO0000oO ( msg ) :
 iI1i111I1Ii = Ii1I1I1i1Ii . getSetting ( 'mensagem1' )
 if iI1i111I1Ii == 'true' :
  Iii1IIII11I = xbmcgui . Dialog ( )
  i11i1ii1I = Iii1IIII11I . select ( '[B][COLOR white]SUPORTE[/COLOR] [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] OFICIAL[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] SITE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] AJUDAR PROJETO' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR orangered]TOP VIP [/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] FACEBOOK' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] YOUTUBE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] TELEGRAM' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] ENTRAR NO ADD-ON' ] )
  if 88 - 88: O0OOo % oO0o0ooO0
  if i11i1ii1I == 0 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.keltecmp.net/' ) )
   else :
    I1i11 = webbrowser . open ( 'https://www.keltecmp.net/' )
    if 12 - 12: Oo + Oo - oO0o0ooO0 * iii1II11ii % iii1II11ii - Ooo00oOo00o
  if i11i1ii1I == 1 :
   o0OOOOooo ( True )
   if 94 - 94: OOOo0 + iii1II11ii / iI1Ii11111iIi * i11Ii11I1Ii1i
  if i11i1ii1I == 2 :
   o0OOo0o0O0O ( True )
   if 65 - 65: Ii
  if i11i1ii1I == 3 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.facebook.com/groups/KelTec.Media.Play' ) )
   else :
    I1i11 = webbrowser . open ( 'https://www.facebook.com/groups/KelTec.Media.Play' )
    if 85 - 85: II1Iiii1111i % i1iII1I1i1i1 + O0OOo / ii1II11I1ii1I . iiIIIII1i1iI + i11Ii11I1Ii1i
  if i11i1ii1I == 4 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/inscrever-se-keltec-media-play' ) )
   else :
    webbrowser . open ( 'https://urlredir.ml/inscrever-se-keltec-media-play' )
    if 62 - 62: Ii + Ii - ii1II11I1ii1I
  if i11i1ii1I == 5 :
   if xbmc . getCondVisibility ( 'system.platform.android' ) :
    I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/telegram' ) )
   else :
    I1i11 = webbrowser . open ( 'https://urlredir.ml/telegram' )
    if 28 - 28: i1iII1I1i1i1 . i1iII1I1i1i1 % iI11I1II1I1I * iI11I1II1I1I . ii1II11I1ii1I / i1iII1I1i1i1
  if i11i1ii1I == 7 :
   xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
   xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
   if 27 - 27: i11iII1iiI + i1iiIII111ii - Oo
   if 69 - 69: i1iIIII - o0o00Oo0O % oO0o0ooO0 + Ii . iI1Ii11111iIi / i11iII1iiI
   if 79 - 79: o0o00Oo0O * Ii - i1iIIII / i1iIIII
def i1O0 ( msg ) :
 I11Iiii1I = Ii1I1I1i1Ii . getSetting ( 'suporte' )
 if I11Iiii1I == 'true' :
  o0ooooO0o0O ( iiI1 , '' , 44 , O0O0Oooo0o , Oo0OoO00oOO0o , I1i1I1II , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
  if 90 - 90: iI11I1II1I1I % i1iiIII111ii
def o0OOo0o0O0O ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , 'O acesso [COLOR orangered]Top Vip[/COLOR] é através de aplicativo exclusivo P2P somente!.\nPare de sofrer com travamentos, solicite agora mesmo no menu a seguir...' )
 Iii1IIII11I = xbmcgui . Dialog ( )
 i11i1ii1I = Iii1IIII11I . select ( '[B][COLOR white]SUPORTE: [COLOR orangered]TOP VIP[/COLOR] [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] P2P EXCLUSIVO[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] TESTE TOP VIP' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] DETALHES TOP VIP' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] APLICATIVO P2P ANDROID' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] APLICATIVO IPTV ANDROID' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] CONTINUAR NO ADD-ON' ] )
 if 73 - 73: o0o00Oo0O * i1iII1I1i1i1 + II1Iiii1111i + i1iiIII111ii
 if i11i1ii1I == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/teste-p2p-add-on' ) )
  else :
   I1i11 = webbrowser . open ( 'https://urlredir.ml/teste-p2p-add-on' )
   if 40 - 40: Ooo00oOo00o . iI1Ii11111iIi * oOOOO + i11Ii11I1Ii1i + i11Ii11I1Ii1i
 if i11i1ii1I == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/download-topvip' ) )
  else :
   webbrowser . open ( 'https://urlredir.ml/download-topvip' )
   if 9 - 9: O0OOo % OOOo0 . iiIIIII1i1iI % O0OOo
 if i11i1ii1I == 2 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/app-p2p' ) )
  else :
   webbrowser . open ( 'https://urlredir.ml/app-p2p' )
   if 32 - 32: Ii
 if i11i1ii1I == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/app-topvip-xtream' ) )
  else :
   webbrowser . open ( 'https://urlredir.ml/app-topvip-xtream' )
   if 31 - 31: iI11I1II1I1I / i11iII1iiI / oO0o0ooO0
 if i11i1ii1I == 5 :
  xbmc . executebuiltin ( "XBMC.Container.Refresh('close()')" )
  xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
  if 41 - 41: iii1II11ii
def IIiIi ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , 'Bem-Vindos!\nAqui temos nosso site oficial para downloads\nNosso canal no YouTube para tutoriais KelTec Media-Play\nNossos Grupos no Facebook e Telegram, para suporte' )
 Iii1IIII11I = xbmcgui . Dialog ( )
 i11i1ii1I = Iii1IIII11I . select ( '[B][COLOR white]SUPORTE [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR] [COLOR white]OFICIAL[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] SITE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] FACEBOOK' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] YOUTUBE' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] TELEGRAM' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] VOLTAR' ] )
 if 91 - 91: oO0o0ooO0 * iii1II11ii / I1IiI . o0o00Oo0O + i11iII1iiI + iI1Ii11111iIi
 if i11i1ii1I == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.keltecmp.net/' ) )
  else :
   I1i11 = webbrowser . open ( 'https://www.keltecmp.net/' )
   if 8 - 8: iiIIIII1i1iI / oO0o0ooO0
 if i11i1ii1I == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://www.facebook.com/groups/KelTec.Media.Play' ) )
  else :
   I1i11 = webbrowser . open ( 'https://www.facebook.com/groups/KelTec.Media.Play' )
   if 20 - 20: I1IiI
 if i11i1ii1I == 2 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/inscrever-se-keltec-media-play' ) )
  else :
   webbrowser . open ( 'https://urlredir.ml/inscrever-se-keltec-media-play' )
   if 95 - 95: i1iII1I1i1i1 - I1IiI
 if i11i1ii1I == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   I1i11 = xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/telegram' ) )
  else :
   I1i11 = webbrowser . open ( 'https://urlredir.ml/telegram' )
   if 34 - 34: i1iiIII111ii * I1IiI . Oo * i1iiIII111ii / i1iiIII111ii
def o0OOOOooo ( msg ) :
 xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Colabore com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
 Iii1IIII11I = xbmcgui . Dialog ( )
 i11i1ii1I = Iii1IIII11I . select ( '[B][COLOR white]AJUDAR [COLOR crimson]|[/COLOR] [COLOR dimgray]KelTec[/COLOR] [COLOR crimson]Media-Play [COLOR dimgrey]|[/COLOR][COLOR white] PROJETO[/COLOR][/B]' , [ '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR white]DOAÇÃO[/COLOR] [COLOR blue]PAY[/COLOR][COLOR white]PAL[/COLOR] [COLOR orangered]$Livre[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR white]DOAÇÃO MP[/COLOR] [COLOR orangered]$10[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR green]DOAÇÃO PICPAY[/COLOR] [COLOR orangered]$Livre[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] [COLOR green]DOAÇÃO CONVITE PICPAY[/COLOR] [COLOR orangered]$20[/COLOR]' , '[COLOR dimgray]KelTec[/COLOR]-[COLOR crimson]Media-Play[/COLOR][COLOR orangered] |[/COLOR] VOLTAR' ] )
 if 30 - 30: oO0o0ooO0 + iii1II11ii / iii1II11ii % oO0o0ooO0 . oO0o0ooO0
 if i11i1ii1I == 0 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://urlredir.ml/doar-paypal' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   I1i11 = webbrowser . open ( 'https://urlredir.ml/doar-paypal' )
   if 55 - 55: i1iiIII111ii - O0OOo + Ooo00oOo00o + i1iII1I1i1i1 % II1Iiii1111i
 if i11i1ii1I == 1 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'http://bit.ly/DOAR_10_KELTEC_MEDIA_PLAY' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   I1i11 = webbrowser . open ( 'http://bit.ly/DOAR_10_KELTEC_MEDIA_PLAY' )
   if 41 - 41: Oo - O0OOo - II1Iiii1111i
 if i11i1ii1I == 2 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://app.picpay.com/user/keltec_media_play/' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   I1i11 = webbrowser . open ( 'https://app.picpay.com/user/keltec_media_play/' )
   if 8 - 8: i11iII1iiI + oOOOO - ii1II11I1ii1I % iii1II11ii % ii1II11I1ii1I * iiIIIII1i1iI
 if i11i1ii1I == 3 :
  if xbmc . getCondVisibility ( 'system.platform.android' ) :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   xbmc . executebuiltin ( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://picpay.com/convite?@8GNDLD' ) )
  else :
   xbmcgui . Dialog ( ) . ok ( '[B][COLOR red]AVISO IMPORTANTE![/COLOR][/B]' , '[B][COLOR orangered]|[/COLOR][/B]  Obrigado por ajudar com nosso Projeto KelTec Media-Play!\nFaça uma doação ou adquira o [COLOR orangered]Top Vip[/COLOR] P2P.\nAssim, você esta ajudando a manter o Projeto online!' )
   I1i11 = webbrowser . open ( 'https://picpay.com/convite?@8GNDLD' )
   if 9 - 9: iii1II11ii - Ii - i11Ii11I1Ii1i * II1Iiii1111i + i1iiIII111ii
   if 44 - 44: Ooo00oOo00o
def OOOO0OOO ( url , headers = None ) :
 try :
  if headers is None :
   if 3 - 3: i11iII1iiI
   if 97 - 97: oOOOO
   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' }
  iiIII1i = urllib2 . Request ( url , None , headers )
  Oo0OO = urllib2 . urlopen ( iiIII1i )
  oo0OO00OoooOo = Oo0OO . read ( )
  Oo0OO . close ( )
  return oo0OO00OoooOo
 except urllib2 . URLError , I1I :
  iIIiIi1 ( 'URL: ' + url )
  if hasattr ( I1I , 'code' ) :
   iIIiIi1 ( 'Falha com o código de erro - %s.' % I1I . code )
   if 68 - 68: i1iiIII111ii
   if 25 - 25: oO0o0ooO0 . i1iiIII111ii
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + oo + ")" )
  elif hasattr ( I1I , 'reason' ) :
   iIIiIi1 ( 'Falha ao acessar um servidor.' )
   iIIiIi1 ( 'Razão: %s' % I1I . reason )
   if 24 - 24: iiIIIII1i1iI / Ii + iiIIIII1i1iI
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + oo + ")" )
   if 20 - 20: O0OOo + II1Iiii1111i / o0o00Oo0O % iI11I1II1I1I
   if 88 - 88: iI1Ii11111iIi / Ooo00oOo00o
def OOOOO0O00 ( msg ) :
 try :
  Iii = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KeltecMP/version.txt" ) . read ( ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
  Iii = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( Iii ) [ 0 ]
  if 31 - 31: ii1II11I1ii1I % i11iII1iiI
  if Iii != oOOOoo0O0oO :
   iI1I ( )
   xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
  elif msg == True :
   if 100 - 100: iI11I1II1I1I + iI1Ii11111iIi / iii1II11ii . Ii
   if 14 - 14: ii1II11I1ii1I * i11Ii11I1Ii1i + i1iII1I1i1i1 + o0o00Oo0O + Ii
   OOO0000oO ( True )
 except urllib2 . URLError , I1I :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'KeTec Media-Play' , "Não foi possível checar" )
   if 77 - 77: ii1II11I1ii1I / OOOo0
def IIii11I1i1I ( msg ) :
 try :
  Iii = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KeltecMP/version.txt" ) . read ( ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
  Iii = re . compile ( '[a-zA-Z\.\d]+' ) . findall ( Iii ) [ 0 ]
  if 99 - 99: i1iII1I1i1i1
  if Iii != oOOOoo0O0oO :
   iI1I ( )
   xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
  elif msg == True :
   xbmcgui . Dialog ( ) . ok ( 'KeTec Media-Play' , "O addon já esta na última versao: " + oOOOoo0O0oO + "\nAs atualizações normalmente são automáticas caso não atualize em\www.keltecmp.net/\nUse esse recurso caso nao esteja recebendo automaticamente" )
   xbmcaddon . Addon ( ) . openSettings ( )
   if 76 - 76: i11iII1iiI * I1IiI
 except urllib2 . URLError , I1I :
  if msg == True :
   xbmcgui . Dialog ( ) . ok ( 'KeTec Media-Play' , "Não foi possível checar" )
def iI1I ( ) :
 o0o0OO0Oooooo = xbmc . translatePath ( xbmcaddon . Addon ( ) . getAddonInfo ( 'path' ) ) . decode ( "utf-8" )
 try :
  ii1ii111 = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KeltecMP/default.py" ) . read ( ) . replace ( '' , '' )
  I111i1i1111 = re . compile ( '' ) . findall ( ii1ii111 )
  if I111i1i1111 :
   IIII1 = os . path . join ( o0o0OO0Oooooo , "default.py" )
   file = open ( IIII1 , "w" )
   file . write ( ii1ii111 )
   file . close ( )
  ii1ii111 = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KeltecMP/resources/settings.xml" ) . read ( ) . replace ( '' , '' )
  I111i1i1111 = re . compile ( '</settings>' ) . findall ( ii1ii111 )
  if I111i1i1111 :
   IIII1 = os . path . join ( o0o0OO0Oooooo , "resources/settings.xml" )
   file = open ( IIII1 , "w" )
   file . write ( ii1ii111 )
   file . close ( )
  ii1ii111 = urllib2 . urlopen ( "https://raw.githubusercontent.com/keltecmp-repo/repo/master/Plugins/plugin.video.KeltecMP/addon.xml" ) . read ( ) . replace ( '' , '' )
  I111i1i1111 = re . compile ( '</addon>' ) . findall ( ii1ii111 )
  if I111i1i1111 :
   IIII1 = os . path . join ( o0o0OO0Oooooo , "addon.xml" )
   file = open ( IIII1 , "w" )
   file . write ( ii1ii111 )
   file . close ( )
  xbmcgui . Dialog ( ) . ok ( 'KeTec Media-Play' , "OBS: Add-on desatualizaldo! Não se preocupe estamos atualizando o addon. Aguarde um momento! Caso ocorrer erro, por favor Atualize o Add-on no Site Oficial www.keltecmp.net!" ) . xbmc . executebuiltin
 except :
  xbmc . executebuiltin ( "Notification({0}, {1}, 9000, {2})" . format ( __addonname__ , "[B][COLOR whithe]Atualizando o addon. Por favor aguarde 5 segundos e entre novamente![/COLOR][/B]" , __icon__ ) )
 xbmc . executebuiltin ( "XBMC.Container.Refresh(%s?mode=None,replace)" % sys . argv [ 0 ] )
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 10 - 10: oOOOO / i1iiIII111ii + Ii / II1Iiii1111i
IIii11I1i1I ( False )
if 74 - 74: i11Ii11I1Ii1i + o0o00Oo0O + Oo - Oo + Ooo00oOo00o
def oOOO0oo0 ( msg ) :
 import platform
 if platform . system ( ) == 'Linux' :
  iIi1i1iIi1iI = 'Android 9; Mobile; rv:68.0'
 elif platform . system ( ) == 'Windows' :
  iIi1i1iIi1iI = 'Windows NT 6.1; WOW64; rv:54.0'
 elif platform . system ( ) == 'IOS' :
  iIi1i1iIi1iI = 'iPhone; CPU iPhone OS 12_2 like Mac OS X'
 else :
  iIi1i1iIi1iI = ''
 iiIi1iI1iIii = {
 "Accept-Language" : "en-US,en;q=0.5" ,
 "\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74" : iIi1i1iIi1iI ,
 "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8" ,
 "Referer" : "Novo-KelTec Media'Play (MMF-Play-TV-8.0+Leia)+SSL2" ,
 "Connection" : "keep-alive"
 }
 o00OooO0oo = urllib2 . Request ( "https://whos.amung.us/pingjs/?k=4w80f35j2b" , headers = iiIi1iI1iIii )
 Oo0OO = urllib2 . urlopen ( o00OooO0oo ) . read ( )
 if 89 - 89: II1Iiii1111i
 if 76 - 76: i1iiIII111ii
 IIIiI11ii1I = 0
 xbmc . sleep ( IIIiI11ii1I * 0 )
 if 39 - 39: iI11I1II1I1I / o0o00Oo0O / iiIIIII1i1iI - II1Iiii1111i - i1iII1I1i1i1 % i11Ii11I1Ii1i
def I1ii11Ii ( url , ref , useragent = False ) :
 try :
  try :
   import cookielib
  except ImportError :
   import http . cookiejar as cookielib
  try :
   import urllib2
  except ImportError :
   import urllib . request as urllib2
  if ref > '' :
   I111i1II = ref
  else :
   I111i1II = url
  if useragent :
   O0ooooo0OOOO0 = useragent
  else :
   O0ooooo0OOOO0 = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36'
  IiiIi1III = cookielib . CookieJar ( )
  I1i1i1iii = urllib2 . build_opener ( urllib2 . HTTPCookieProcessor ( IiiIi1III ) )
  I1i1i1iii . addheaders = [ ( 'Accept-Language' , 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7' ) , ( 'User-Agent' , O0ooooo0OOOO0 ) , ( 'Accept' , 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' ) , ( 'Referer' , I111i1II ) ]
  oo0OO00OoooOo = I1i1i1iii . open ( url ) . read ( )
  Oo0OO = oo0OO00OoooOo . decode ( 'utf-8' )
  return Oo0OO
 except urllib2 . URLError as I1I :
  if hasattr ( I1I , 'code' ) :
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + __icon__ + ")" )
  elif hasattr ( I1I , 'reason' ) :
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + __icon__ + ")" )
   if 84 - 84: i11Ii11I1Ii1i . i1iII1I1i1i1 % o0o00Oo0O . iI1Ii11111iIi + iiIIIII1i1iI
  Oo0OO = ''
  return Oo0OO
  if 31 - 31: iI11I1II1I1I % O0OOo % i1iiIII111ii . II1Iiii1111i - O0OOo
def ii11i1ii1Ii ( url ) :
 iIIiiI1 = url . replace ( 'streamtape.com/v/' , 'streamtape.com/e/' )
 oo0OO00OoooOo = I1ii11Ii ( iIIiiI1 , '' )
 I1ii11I1 = re . compile ( 'videolink.+?style="display:none;">(.*?)&token=' ) . findall ( oo0OO00OoooOo )
 oO0oo = re . compile ( "<script>.+?token=(.*?)'.+?</script>" ) . findall ( oo0OO00OoooOo )
 if I1ii11I1 != [ ] and oO0oo != [ ] :
  if 38 - 38: OOOo0 * i1iiIII111ii % o0o00Oo0O * iI1Ii11111iIi
  i11i1ii1I = 'https:' + I1ii11I1 [ 0 ] + '&token=' + oO0oo [ 0 ]
 else :
  i11i1ii1I = ''
 return i11i1ii1I
 if 29 - 29: oO0o0ooO0 / Oo . I1IiI - iI1Ii11111iIi - iI1Ii11111iIi - II1Iiii1111i
def IiiIiI111iI ( msg ) :
 o0ooooO0o0O ( ooO0o0Oo , '' , 45 , oo , oOOoo00O00o , oOOo0oo , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 i1O0 ( True )
 o0ooooO0o0O ( IiIIIi1iIi , '' , 46 , o00 , iI , iIii11I , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 o0ooooO0o0O ( o0o , '' , 48 , oo , oOOoo00O00o , O00OOOOOoo0 , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 o0ooooO0o0O ( III1IiiI , '' , 47 , oo , oOOoo00O00o , IIIII11I1IiI , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 o0ooooO0o0O ( II1I , '' , - 4 , oo , oOOoo00O00o , I11i1iIII , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 oOOOoo00 ( True )
 o0ooooO0o0O ( IIiIi1iI , 'keltecmp.net' , 41 , o0O , oOOoo00O00o , II1III , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' )
 Oo0O0 ( True )
 OOO0000oO ( True )
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) )
 if 85 - 85: ii1II11I1ii1I . iI1Ii11111iIi / i1iiIII111ii . o0o00Oo0O % oOOOO
def OO0ooo0oOO ( ) :
 if os . path . exists ( OooOoOO0 ) == True :
  o0ooooO0o0O ( 'Favorites' , 'url' , 4 , os . path . join ( i11I1II1I11i , 'resources' , 'favorite.png' ) , oOOoo00O00o , '' , '' , '' , '' )
 if Ii1I1I1i1Ii . getSetting ( "browse_xml_database" ) == "true" :
  o0ooooO0o0O ( 'XML Database' , 'http://xbmcplus.xb.funpic.de/www-data/filesystem/' , 15 , oo , oOOoo00O00o , '' , '' , '' , '' )
 if Ii1I1I1i1Ii . getSetting ( "browse_community" ) == "true" :
  o0ooooO0o0O ( 'Community Files' , 'community_files' , 16 , oo , oOOoo00O00o , '' , '' , '' , '' )
 if os . path . exists ( iI1i11iII111 ) == True :
  o0ooooO0o0O ( 'Search History' , 'history' , 25 , os . path . join ( i11I1II1I11i , 'resources' , 'favorite.png' ) , oOOoo00O00o , '' , '' , '' , '' )
 if Ii1I1I1i1Ii . getSetting ( "searchyt" ) == "true" :
  o0ooooO0o0O ( 'Search:Youtube' , 'youtube' , 25 , oo , oOOoo00O00o , '' , '' , '' , '' )
 if Ii1I1I1i1Ii . getSetting ( "searchDM" ) == "true" :
  o0ooooO0o0O ( 'Search:dailymotion' , 'dmotion' , 25 , oo , oOOoo00O00o , '' , '' , '' , '' )
 if Ii1I1I1i1Ii . getSetting ( "PulsarM" ) == "true" :
  o0ooooO0o0O ( 'Pulsar:IMDB' , 'IMDBidplay' , 27 , oo , oOOoo00O00o , '' , '' , '' , '' )
  if os . path . exists ( O0O00Oo ) == True :
   oo000ii = json . loads ( open ( O0O00Oo , "r" ) . read ( ) )
   if 78 - 78: OOOo0 . i11iII1iiI + i1iiIII111ii - Oo
  if len ( oo000ii ) > 1 :
   for ii1 in oo000ii :
    if 83 - 83: i1iII1I1i1i1 . o0o00Oo0O / iii1II11ii / i11Ii11I1Ii1i - Ooo00oOo00o
    if isinstance ( ii1 , list ) :
     o0ooooO0o0O ( ii1 [ 0 ] . encode ( 'utf-8' ) , ii1 [ 1 ] . encode ( 'utf-8' ) , 1 , oo , oOOoo00O00o , '' , '' , '' , '' , 'source' )
    else :
     oO0oO0 = oo
     iIiiiI1IiI1I1 = oOOoo00O00o
     i1i1IIIIi1i = ''
     Ii11iiI = ''
     credits = ''
     IIi1iiii1iI = ''
     iIiiii = ''
     O0000OOO0 = ''
     ooo0 = ''
     oO000oOo00o0o = ''
     O00oO0 = ''
     O0 = ''
     Oo00OoOo = ''
     ii1ii111i11111I1I = ''
     ii1Oo0000oOo = ''
     I11 = ''
     o0oO00oO0o0o0 = ''
     if ii1 . has_key ( 'thumbnail' ) :
      oO0oO0 = ii1 [ 'thumbnail' ]
     if ii1 . has_key ( 'fanart' ) :
      iIiiiI1IiI1I1 = ii1 [ 'fanart' ]
     if ii1 . has_key ( 'description' ) :
      i1i1IIIIi1i = ii1 [ 'description' ]
     if ii1 . has_key ( 'date' ) :
      Ii11iiI = ii1 [ 'date' ]
     if ii1 . has_key ( 'genre' ) :
      I1Iooooo = ii1 [ 'genre' ]
     if ii1 . has_key ( 'credits' ) :
      credits = ii1 [ 'credits' ]
     if ii1 . has_key ( 'year' ) :
      IIi1iiii1iI = ii1 [ 'year' ]
     if ii1 . has_key ( 'director' ) :
      iIiiii = ii1 [ 'director' ]
     if ii1 . has_key ( 'duration' ) :
      O0000OOO0 = ii1 [ 'duration' ]
     if ii1 . has_key ( 'premiered' ) :
      ooo0 = ii1 [ 'premiered' ]
     if ii1 . has_key ( 'studio' ) :
      oO000oOo00o0o = ii1 [ 'studio' ]
     if ii1 . has_key ( 'rate' ) :
      O00oO0 = ii1 [ 'rate' ]
     if ii1 . has_key ( 'originaltitle' ) :
      O0 = ii1 [ 'originaltitle' ]
     if ii1 . has_key ( 'country' ) :
      Oo00OoOo = ii1 [ 'country' ]
     if ii1 . has_key ( 'rating' ) :
      ii1ii111i11111I1I = ii1 [ 'rating' ]
     if ii1 . has_key ( 'episodes' ) :
      ii1Oo0000oOo = ii1 [ 'episodes' ]
     if ii1 . has_key ( 'votes' ) :
      I11 = ii1 [ 'votes' ]
     if ii1 . has_key ( 'aired' ) :
      o0oO00oO0o0o0 = ii1 [ 'aired' ]
     o0ooooO0o0O ( ii1 [ 'title' ] . encode ( 'utf-8' ) , ii1 [ 'url' ] . encode ( 'utf-8' ) , 1 , oO0oO0 , iIiiiI1IiI1I1 , i1i1IIIIi1i , I1Iooooo , Ii11iiI , credits , IIi1iiii1iI , iIiiii , O0000OOO0 , ooo0 , oO000oOo00o0o , O00oO0 , O0 , Oo00OoOo , ii1ii111i11111I1I , ii1Oo0000oOo , I11 , o0oO00oO0o0o0 , 'source' )
     if 1 - 1: i1iiIII111ii % iI1Ii11111iIi * iii1II11ii
  else :
   if len ( oo000ii ) == 1 :
    if isinstance ( oo000ii [ 0 ] , list ) :
     o0O0oo0 ( oo000ii [ 0 ] [ 1 ] . encode ( 'utf-8' ) , oOOoo00O00o )
    else :
     o0O0oo0 ( oo000ii [ 0 ] [ 'url' ] , oo000ii [ 0 ] [ 'fanart' ] )
     if 30 - 30: o0o00Oo0O * OOOo0
def OOOO0OOO ( url , headers = None ) :
 try :
  if headers is None :
   if 38 - 38: i1iIIII - oO0o0ooO0 . iI1Ii11111iIi - oOOOO . OOOo0
   if 89 - 89: iI11I1II1I1I
   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Referer' : 'copyright © 2017-2020' , 'Ref' : '2020' , 'KelTec' : 'www.keltecmp.net' }
  iiIII1i = urllib2 . Request ( url , None , headers )
  Oo0OO = urllib2 . urlopen ( iiIII1i )
  oo0OO00OoooOo = Oo0OO . read ( )
  Oo0OO . close ( )
  return oo0OO00OoooOo
 except urllib2 . URLError , I1I :
  iIIiIi1 ( 'URL: ' + url )
  if hasattr ( I1I , 'code' ) :
   iIIiIi1 ( 'Falha com o código de erro - %s.' % I1I . code )
   if 21 - 21: O0OOo % O0OOo
   if 27 - 27: Ii / oO0o0ooO0
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + oo + ")" )
  elif hasattr ( I1I , 'reason' ) :
   iIIiIi1 ( 'Falha ao acessar um servidor.' )
   iIIiIi1 ( 'Razão: %s' % I1I . reason )
   if 84 - 84: iii1II11ii
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + oo + ")" )
   if 43 - 43: iiIIIII1i1iI - OOOo0
def ii1iI ( url = None ) :
 if url is None :
  if not Ii1I1I1i1Ii . getSetting ( "new_file_source" ) == "" :
   IIi = Ii1I1I1i1Ii . getSetting ( 'new_file_source' ) . decode ( 'utf-8' )
  elif not Ii1I1I1i1Ii . getSetting ( "new_url_source" ) == "" :
   IIi = Ii1I1I1i1Ii . getSetting ( 'new_url_source' ) . decode ( 'utf-8' )
 else :
  IIi = url
 if IIi == '' or IIi is None :
  return
 iIIiIi1 ( 'Adding New Source: ' + IIi . encode ( 'utf-8' ) )
 if 89 - 89: Ooo00oOo00o + Oo + Ooo00oOo00o
 IiII1II11I = None
 if 54 - 54: i1iIIII + o0o00Oo0O + O0OOo * oOOOO - i11Ii11I1Ii1i % iiIIIII1i1iI
 oo0OO00OoooOo = I111 ( IIi )
 print 'source_url' , IIi
 if isinstance ( oo0OO00OoooOo , BeautifulSOAP ) :
  if oo0OO00OoooOo . find ( 'channels_info' ) :
   IiII1II11I = oo0OO00OoooOo . channels_info
  elif oo0OO00OoooOo . find ( 'items_info' ) :
   IiII1II11I = oo0OO00OoooOo . items_info
 if IiII1II11I :
  iI1I1i11iIIii = { }
  iI1I1i11iIIii [ 'url' ] = IIi
  try : iI1I1i11iIIii [ 'title' ] = IiII1II11I . title . string
  except : pass
  try : iI1I1i11iIIii [ 'thumbnail' ] = IiII1II11I . thumbnail . string
  except : pass
  try : iI1I1i11iIIii [ 'fanart' ] = IiII1II11I . fanart . string
  except : pass
  try : iI1I1i11iIIii [ 'genre' ] = IiII1II11I . genre . string
  except : pass
  try : iI1I1i11iIIii [ 'description' ] = IiII1II11I . description . string
  except : pass
  try : iI1I1i11iIIii [ 'date' ] = IiII1II11I . date . string
  except : pass
  try : iI1I1i11iIIii [ 'credits' ] = IiII1II11I . credits . string
  except : pass
  try : iI1I1i11iIIii [ 'year' ] = IiII1II11I . year . string
  except : pass
  try : iI1I1i11iIIii [ 'director' ] = IiII1II11I . director . string
  except : pass
  try : iI1I1i11iIIii [ 'premiered' ] = IiII1II11I . premiered . string
  except : pass
  try : iI1I1i11iIIii [ 'studio' ] = IiII1II11I . studio . string
  except : pass
  try : iI1I1i11iIIii [ 'rate' ] = IiII1II11I . rate . string
  except : pass
  try : iI1I1i11iIIii [ 'originaltitle' ] = IiII1II11I . originaltitle . string
  except : pass
  try : iI1I1i11iIIii [ 'country' ] = IiII1II11I . country . string
  except : pass
  try : iI1I1i11iIIii [ 'rating' ] = IiII1II11I . rating . string
  except : pass
  try : iI1I1i11iIIii [ 'episodes' ] = IiII1II11I . episodes . string
  except : pass
  try : iI1I1i11iIIii [ 'votes' ] = IiII1II11I . votes . string
  except : pass
  try : iI1I1i11iIIii [ 'aired' ] = IiII1II11I . aired . string
  except : pass
 else :
  if '/' in IIi :
   IIIIIiI111I = IIi . split ( '/' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '\\' in IIi :
   IIIIIiI111I = IIi . split ( '\\' ) [ - 1 ] . split ( '.' ) [ 0 ]
  if '%' in IIIIIiI111I :
   IIIIIiI111I = urllib . unquote_plus ( IIIIIiI111I )
  iIIIIIii = xbmc . Keyboard ( IIIIIiI111I , 'Displayed Name, Rename?' )
  iIIIIIii . doModal ( )
  if ( iIIIIIii . isConfirmed ( ) == False ) :
   return
  Ii1ii111i1 = iIIIIIii . getText ( )
  if len ( Ii1ii111i1 ) == 0 :
   return
  iI1I1i11iIIii = { }
  iI1I1i11iIIii [ 'title' ] = Ii1ii111i1
  iI1I1i11iIIii [ 'url' ] = IIi
  iI1I1i11iIIii [ 'fanart' ] = iIiiiI1IiI1I1
  if 31 - 31: i11Ii11I1Ii1i + o0o00Oo0O
 if os . path . exists ( O0O00Oo ) == False :
  oO0oOOoo00000 = [ ]
  oO0oOOoo00000 . append ( iI1I1i11iIIii )
  oOo00 = open ( O0O00Oo , "w" )
  oOo00 . write ( json . dumps ( oO0oOOoo00000 ) )
  oOo00 . close ( )
 else :
  oo000ii = json . loads ( open ( O0O00Oo , "r" ) . read ( ) )
  oo000ii . append ( iI1I1i11iIIii )
  oOo00 = open ( O0O00Oo , "w" )
  oOo00 . write ( json . dumps ( oo000ii ) )
  oOo00 . close ( )
 Ii1I1I1i1Ii . setSetting ( 'new_url_source' , "" )
 Ii1I1I1i1Ii . setSetting ( 'new_file_source' , "" )
 if 3 - 3: i1iII1I1i1i1 % Oo
 xbmc . executebuiltin ( "XBMC.Notification(New source added.,5000," + oo + ")" )
 if not url is None :
  if 'xbmcplus.xb.funpic.de' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=14,replace)" % sys . argv [ 0 ] )
  elif 'community-links' in url :
   xbmc . executebuiltin ( "XBMC.Container.Update(%s?mode=10,replace)" % sys . argv [ 0 ] )
 else : Ii1I1I1i1Ii . openSettings ( )
 if 46 - 46: Ooo00oOo00o % ii1II11I1ii1I % iI11I1II1I1I - iii1II11ii . OOOo0 - i1iIIII
def OOOO0OOO ( url , headers = None ) :
 try :
  if headers is None :
   if 59 - 59: i1iIIII . i11Ii11I1Ii1i % Ooo00oOo00o
   if 39 - 39: oO0o0ooO0
   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' , 'Referer' : 'copyright © 2017-2020' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : '2020' , 'KelTec' : 'www.keltecmp.net' }
   if 97 - 97: i11Ii11I1Ii1i - i11iII1iiI / II1Iiii1111i . Ii % iiIIIII1i1iI * iiIIIII1i1iI
  iiIII1i = urllib2 . Request ( url , None , headers )
  Oo0OO = urllib2 . urlopen ( iiIII1i )
  oo0OO00OoooOo = Oo0OO . read ( )
  Oo0OO . close ( )
  return oo0OO00OoooOo
 except urllib2 . URLError , I1I :
  iIIiIi1 ( 'URL: ' + url )
  if hasattr ( I1I , 'code' ) :
   iIIiIi1 ( 'Falha com o código de erro - %s.' % I1I . code )
   if 1 - 1: I1IiI % i1iiIII111ii
   if 65 - 65: I1IiI + iI1Ii11111iIi / i11Ii11I1Ii1i
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + oo + ")" )
  elif hasattr ( I1I , 'reason' ) :
   iIIiIi1 ( 'Falha ao acessar um servidor.' )
   iIIiIi1 ( 'Razão: %s' % I1I . reason )
   if 83 - 83: ii1II11I1ii1I . i1iII1I1i1i1 - iii1II11ii
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + oo + ")" )
   if 65 - 65: iI11I1II1I1I / i1iiIII111ii . i1iIIII - Ooo00oOo00o
def Oo000 ( name ) :
 oo000ii = json . loads ( open ( O0O00Oo , "r" ) . read ( ) )
 for O00O0oOOo in range ( len ( oo000ii ) ) :
  if isinstance ( oo000ii [ O00O0oOOo ] , list ) :
   if oo000ii [ O00O0oOOo ] [ 0 ] == name :
    del oo000ii [ O00O0oOOo ]
    oOo00 = open ( O0O00Oo , "w" )
    oOo00 . write ( json . dumps ( oo000ii ) )
    oOo00 . close ( )
    break
  else :
   if oo000ii [ O00O0oOOo ] [ 'title' ] == name :
    del oo000ii [ O00O0oOOo ]
    oOo00 = open ( O0O00Oo , "w" )
    oOo00 . write ( json . dumps ( oo000ii ) )
    oOo00 . close ( )
    break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 if 71 - 71: O0OOo / ii1II11I1ii1I / oOOOO % i11Ii11I1Ii1i
 if 51 - 51: i1iIIII * o0o00Oo0O / Ooo00oOo00o . II1Iiii1111i % i11Ii11I1Ii1i / I1IiI
 if 9 - 9: I1IiI % I1IiI % Ooo00oOo00o
def I1I1i1I ( url , browse = False ) :
 if url is None :
  url = 'http://xbmcplus.xb.funpic.de/www-data/filesystem/'
 oo0oo = BeautifulSoup ( OOOO0OOO ( url ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 for ii1 in oo0oo ( 'a' ) :
  IIi11IIiIii1 = ii1 [ 'href' ]
  if not IIi11IIiIii1 . startswith ( '?' ) :
   I1iIII1 = ii1 . string
   if I1iIII1 not in [ 'Parent Directory' , 'recycle_bin/' ] :
    if IIi11IIiIii1 . endswith ( '/' ) :
     if browse :
      o0ooooO0o0O ( I1iIII1 , url + IIi11IIiIii1 , 15 , oo , iIiiiI1IiI1I1 , '' , '' , '' )
     else :
      o0ooooO0o0O ( I1iIII1 , url + IIi11IIiIii1 , 14 , oo , iIiiiI1IiI1I1 , '' , '' , '' )
    elif IIi11IIiIii1 . endswith ( '.xml' ) :
     if browse :
      o0ooooO0o0O ( I1iIII1 , url + IIi11IIiIii1 , 1 , oo , iIiiiI1IiI1I1 , '' , '' , '' , '' , 'download' )
     else :
      if os . path . exists ( O0O00Oo ) == True :
       if I1iIII1 in OOO :
        o0ooooO0o0O ( I1iIII1 + ' (in use)' , url + IIi11IIiIii1 , 11 , oo , iIiiiI1IiI1I1 , '' , '' , '' , '' , 'download' )
       else :
        o0ooooO0o0O ( I1iIII1 , url + IIi11IIiIii1 , 11 , oo , iIiiiI1IiI1I1 , '' , '' , '' , '' , 'download' )
      else :
       o0ooooO0o0O ( I1iIII1 , url + IIi11IIiIii1 , 11 , oo , iIiiiI1IiI1I1 , '' , '' , '' , '' , 'download' )
       if 39 - 39: OOOo0
       if 38 - 38: I1IiI
def oOo0OoOOo0 ( browse = False ) :
 O0oOo00o = 'http://community-links.googlecode.com/svn/trunk/'
 oo0oo = BeautifulSoup ( OOOO0OOO ( O0oOo00o ) , convertEntities = BeautifulSoup . HTML_ENTITIES )
 iII11I1Ii1 = oo0oo ( 'ul' ) [ 0 ] ( 'li' ) [ 1 : ]
 for ii1 in iII11I1Ii1 :
  I1iIII1 = ii1 ( 'a' ) [ 0 ] [ 'href' ]
  if browse :
   o0ooooO0o0O ( I1iIII1 , O0oOo00o + I1iIII1 , 1 , oo , iIiiiI1IiI1I1 , '' , '' , '' , '' , 'download' )
  else :
   o0ooooO0o0O ( I1iIII1 , O0oOo00o + I1iIII1 , 11 , oo , iIiiiI1IiI1I1 , '' , '' , '' , '' , 'download' )
   if 92 - 92: O0OOo / O0OOo . oO0o0ooO0
def I111 ( url , data = None ) :
 global viewmode , oo000
 oo000 = False
 if url . startswith ( 'http://' ) or url . startswith ( 'https://' ) :
  ii1iIi1II = False
  if '$$TSDOWNLOADER$$' in url :
   oo000 = True
   url = url . replace ( "$$TSDOWNLOADER$$" , "" )
  if '$$LSProEncKey=' in url :
   ii1iIi1II = url . split ( '$$LSProEncKey=' ) [ 1 ] . split ( '$$' ) [ 0 ]
   IIIIi1I = '$$LSProEncKey=%s$$' % ii1iIi1II
   url = url . replace ( IIIIi1I , "" )
  try :
   print 'myRequest' , url , data
   data = OOOO0OOO ( url )
   import gzip , binascii
   from StringIO import StringIO
   if 'cdcc0' [ : : - 1 ] in data :
    data = data . split ( 'cdcc0' [ : : - 1 ] )
    IiIi1i1ii = StringIO ( binascii . unhexlify ( data [ 0 ] ) )
    iiIi = gzip . GzipFile ( fileobj = IiIi1i1ii )
    data = iiIi . read ( )
  except :
   data = OOOO0OOO ( url )
  if ii1iIi1II :
   import pyaes
   ii1iIi1II = ii1iIi1II . encode ( "ascii" )
   print ii1iIi1II
   oOIi111 = 16 - len ( ii1iIi1II )
   ii1iIi1II = ii1iIi1II + ( chr ( 0 ) * ( oOIi111 ) )
   print repr ( ii1iIi1II )
   data = base64 . b64decode ( data )
   oO0 = pyaes . new ( ii1iIi1II , pyaes . MODE_ECB , IV = None )
   data = oO0 . decrypt ( data ) . split ( '\0' ) [ 0 ]
   if 11 - 11: i1iiIII111ii / Ooo00oOo00o
  if re . search ( "#EXTM3U" , data ) or 'm3u' in url :
   if 47 - 47: OOOo0
   return data
 elif data == None :
  if not '/' in url or not '\\' in url :
   if 4 - 4: I1IiI % O0OOo
   url = os . path . join ( communityfiles , url )
  if xbmcvfs . exists ( url ) :
   if url . startswith ( "smb://" ) or url . startswith ( "nfs://" ) :
    I1oOO0o0 = xbmcvfs . copy ( url , os . path . join ( Oo0oO00o , 'temp' , 'sorce_temp.txt' ) )
    if I1oOO0o0 :
     data = open ( os . path . join ( Oo0oO00o , 'temp' , 'sorce_temp.txt' ) , "r" ) . read ( )
     xbmcvfs . delete ( os . path . join ( Oo0oO00o , 'temp' , 'sorce_temp.txt' ) )
    else :
     iIIiIi1 ( "failed to copy from smb:" )
   else :
    data = open ( url , 'r' ) . read ( )
    if re . match ( "#EXTM3U" , data ) or 'm3u' in url :
     if 19 - 19: Ooo00oOo00o * i1iIIII + II1Iiii1111i
     return data
  else :
   iIIiIi1 ( "Soup Data not found!" )
   return
 if '<SetViewMode>' in data :
  try :
   viewmode = re . findall ( '<SetViewMode>(.*?)<' , data ) [ 0 ]
   xbmc . executebuiltin ( "Container.SetViewMode(%s)" % viewmode )
   print 'done setview' , viewmode
  except : pass
 return BeautifulSOAP ( data , convertEntities = BeautifulStoneSoup . XML_ENTITIES )
 if 65 - 65: i11Ii11I1Ii1i . oOOOO . i11iII1iiI . i1iII1I1i1i1 - i11Ii11I1Ii1i
 if 19 - 19: Ii + i1iII1I1i1i1 % i1iiIII111ii
def o0O0oo0 ( url , fanart , data = None ) :
 if 14 - 14: i11iII1iiI . Ooo00oOo00o . O0OOo / II1Iiii1111i % oO0o0ooO0 - i1iiIII111ii
 o0oOoO0O = "List"
 if 84 - 84: o0o00Oo0O * OOOo0 - i1iIIII * i1iIIII
 oo0oo = I111 ( url , data )
 if 8 - 8: i1iiIII111ii / Oo . iiIIIII1i1iI
 if isinstance ( oo0oo , BeautifulSOAP ) :
  if len ( oo0oo ( 'layoutype' ) ) > 0 :
   o0oOoO0O = "thumbnail"
   if 41 - 41: i1iII1I1i1i1 + i11iII1iiI
  if len ( oo0oo ( 'channels' ) ) > 0 :
   oOO = oo0oo ( 'channel' )
   for iiiIIiIi in oOO :
    if 68 - 68: o0o00Oo0O + iI1Ii11111iIi / iiIIIII1i1iI - i11Ii11I1Ii1i + iI11I1II1I1I % II1Iiii1111i
    if 23 - 23: i1iiIII111ii % ii1II11I1ii1I / O0OOo
    i11 = ''
    I1II = 0
    try :
     i11 = iiiIIiIi ( 'externallink' ) [ 0 ] . string
     I1II = len ( iiiIIiIi ( 'externallink' ) )
    except : pass
    if 79 - 79: i11iII1iiI . i1iII1I1i1i1 * II1Iiii1111i - i11Ii11I1Ii1i + i1iiIII111ii
    if I1II > 1 : i11 = ''
    if 14 - 14: Ii - i1iII1I1i1i1 * iI1Ii11111iIi
    I1iIII1 = iiiIIiIi ( 'name' ) [ 0 ] . string
    OO0o = iiiIIiIi ( 'thumbnail' ) [ 0 ] . string
    if OO0o == None :
     OO0o = ''
     if 39 - 39: ii1II11I1ii1I * i1iiIII111ii + II1Iiii1111i * Ooo00oOo00o
    try :
     if not iiiIIiIi ( 'fanart' ) :
      if Ii1I1I1i1Ii . getSetting ( 'use_thumb' ) == "true" :
       OoO00o0 = OO0o
      else :
       OoO00o0 = fanart
     else :
      OoO00o0 = iiiIIiIi ( 'fanart' ) [ 0 ] . string
     if OoO00o0 == None :
      raise
    except :
     OoO00o0 = fanart
     if 87 - 87: iiIIIII1i1iI * iiIIIII1i1iI / I1IiI / i1iiIII111ii % i11Ii11I1Ii1i
    try :
     i1i1IIIIi1i = iiiIIiIi ( 'info' ) [ 0 ] . string
     if i1i1IIIIi1i == None :
      raise
    except :
     i1i1IIIIi1i = ''
     if 96 - 96: I1IiI % iii1II11ii . oO0o0ooO0 + i11Ii11I1Ii1i
    try :
     I1Iooooo = iiiIIiIi ( 'genre' ) [ 0 ] . string
     if I1Iooooo == None :
      raise
    except :
     I1Iooooo = ''
     if 42 - 42: Ooo00oOo00o * i1iII1I1i1i1 * Ii - i11Ii11I1Ii1i . OOOo0
    try :
     Ii11iiI = iiiIIiIi ( 'date' ) [ 0 ] . string
     if Ii11iiI == None :
      raise
    except :
     Ii11iiI = ''
     if 76 - 76: Ooo00oOo00o
    try :
     credits = iiiIIiIi ( 'credits' ) [ 0 ] . string
     if credits == None :
      raise
    except :
     credits = ''
     if 26 - 26: Ooo00oOo00o % Ii % iI11I1II1I1I % O0OOo * O0OOo * oO0o0ooO0
    try :
     IIi1iiii1iI = iiiIIiIi ( 'year' ) [ 0 ] . string
     if IIi1iiii1iI == None :
      raise
    except :
     IIi1iiii1iI = ''
     if 24 - 24: Ooo00oOo00o % oOOOO - i1iiIII111ii + I1IiI * oO0o0ooO0
    try :
     iIiiii = iiiIIiIi ( 'director' ) [ 0 ] . string
     if iIiiii == None :
      raise
    except :
     iIiiii = ''
     if 2 - 2: II1Iiii1111i - i1iIIII
    try :
     O0000OOO0 = iiiIIiIi ( 'duration' ) [ 0 ] . string
     if O0000OOO0 == None :
      raise
    except :
     O0000OOO0 = ''
     if 83 - 83: iiIIIII1i1iI % ii1II11I1ii1I % II1Iiii1111i - Ooo00oOo00o * i11Ii11I1Ii1i / OOOo0
    try :
     ooo0 = iiiIIiIi ( 'premiered' ) [ 0 ] . string
     if ooo0 == None :
      raise
    except :
     ooo0 = ''
     if 18 - 18: i11iII1iiI + iI11I1II1I1I - Ooo00oOo00o - I1IiI
    try :
     oO000oOo00o0o = iiiIIiIi ( 'studio' ) [ 0 ] . string
     if oO000oOo00o0o == None :
      raise
    except :
     oO000oOo00o0o = ''
     if 71 - 71: OOOo0
    try :
     O00oO0 = iiiIIiIi ( 'rate' ) [ 0 ] . string
     if O00oO0 == None :
      raise
    except :
     O00oO0 = ''
     if 33 - 33: oOOOO
    try :
     O0 = iiiIIiIi ( 'originaltitle' ) [ 0 ] . string
     if O0 == None :
      raise
    except :
     O0 = ''
     if 62 - 62: oO0o0ooO0 + II1Iiii1111i + Oo / OOOo0
    try :
     Oo00OoOo = iiiIIiIi ( 'country' ) [ 0 ] . string
     if Oo00OoOo == None :
      raise
    except :
     Oo00OoOo = ''
     if 7 - 7: ii1II11I1ii1I + Oo . I1IiI / iii1II11ii
    try :
     I111i1I1 = iiiIIiIi ( 'mediatype' ) [ 0 ] . string
     if I111i1I1 == None :
      raise
    except :
     I111i1I1 = ''
     if 62 - 62: i11Ii11I1Ii1i * oOOOO / iii1II11ii * ii1II11I1ii1I
    try :
     ii1ii111i11111I1I = iiiIIiIi ( 'rating' ) [ 0 ] . string
     if ii1ii111i11111I1I == None :
      raise
    except :
     ii1ii111i11111I1I = ''
     if 29 - 29: iii1II11ii % i11iII1iiI % i1iIIII . ii1II11I1ii1I / OOOo0 * i1iiIII111ii
    try :
     ii1Oo0000oOo = iiiIIiIi ( 'episodes' ) [ 0 ] . string
     if ii1Oo0000oOo == None :
      raise
    except :
     ii1Oo0000oOo = ''
     if 54 - 54: o0o00Oo0O
    try :
     I11 = iiiIIiIi ( 'votes' ) [ 0 ] . string
     if I11 == None :
      raise
    except :
     I11 = ''
     if 68 - 68: i11iII1iiI * ii1II11I1ii1I . i1iiIII111ii % iiIIIII1i1iI % oOOOO
    try :
     o0oO00oO0o0o0 = iiiIIiIi ( 'aired' ) [ 0 ] . string
     if o0oO00oO0o0o0 == None :
      raise
    except :
     o0oO00oO0o0o0 = ''
     if 75 - 75: iI1Ii11111iIi
    try :
     if i11 == '' :
      o0ooooO0o0O ( I1iIII1 . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 2 , OO0o , OoO00o0 , i1i1IIIIi1i , I1Iooooo , Ii11iiI , credits , IIi1iiii1iI , iIiiii , O0000OOO0 , ooo0 , oO000oOo00o0o , O00oO0 , O0 , Oo00OoOo , ii1ii111i11111I1I , ii1Oo0000oOo , I11 , o0oO00oO0o0o0 , True )
     else :
      if 34 - 34: o0o00Oo0O
      o0ooooO0o0O ( I1iIII1 . encode ( 'utf-8' ) , i11 . encode ( 'utf-8' ) , 1 , OO0o , OoO00o0 , i1i1IIIIi1i , I1Iooooo , Ii11iiI , None , IIi1iiii1iI , iIiiii , O0000OOO0 , ooo0 , oO000oOo00o0o , O00oO0 , O0 , Oo00OoOo , ii1ii111i11111I1I , ii1Oo0000oOo , I11 , o0oO00oO0o0o0 , 'source' )
    except :
     iIIiIi1 ( 'There was a problem adding directory from getData(): ' + I1iIII1 . encode ( 'utf-8' , 'ignore' ) )
  else :
   iIIiIi1 ( 'No Channels: getItems' )
   OooOOOo0 ( oo0oo ( 'item' ) , fanart )
 else :
  O0O0o0o0o ( oo0oo )
  if 9 - 9: iii1II11ii + iI1Ii11111iIi - iI11I1II1I1I - II1Iiii1111i + ii1II11I1ii1I
 if o0oOoO0O == "thumbnail" :
  o000O0OOoo ( )
  if 60 - 60: I1IiI * oOOOO % i11iII1iiI + iiIIIII1i1iI
  if 52 - 52: Oo
  if 84 - 84: II1Iiii1111i / i1iIIII
def O0O0o0o0o ( data ) :
 OOOooo0OooOoO = data . rstrip ( )
 oOoOOOo = re . compile ( r'#EXTINF:(.+?),(.*?)[\n\r]+([^\r\n]+)' ) . findall ( OOOooo0OooOoO )
 ii1I = len ( oOoOOOo )
 print 'tsdownloader' , oo000
 if 85 - 85: O0OOo
 for ooOoO0 , oo0oooOo , o0OO0O0Oo in oOoOOOo :
  if 78 - 78: iI1Ii11111iIi / iii1II11ii - i11Ii11I1Ii1i - i1iII1I1i1i1 * iiIIIII1i1iI
  if 'tvg-logo' in ooOoO0 :
   OO0o = Ii1I11I ( ooOoO0 , 'tvg-logo=[\'"](.*?)[\'"]' )
   if OO0o :
    if OO0o . startswith ( 'http' ) :
     OO0o = OO0o
     if 36 - 36: o0o00Oo0O + iii1II11ii
    elif not Ii1I1I1i1Ii . getSetting ( 'logo-folderPath' ) == "" :
     iIIIi1i1I11i = Ii1I1I1i1Ii . getSetting ( 'logo-folderPath' )
     OO0o = iIIIi1i1I11i + OO0o
     if 55 - 55: iii1II11ii - i11Ii11I1Ii1i
    else :
     OO0o = OO0o
     if 84 - 84: oOOOO + iii1II11ii - iI1Ii11111iIi * iI1Ii11111iIi
     if 61 - 61: OOOo0 . iiIIIII1i1iI . OOOo0 / iii1II11ii
  else :
   OO0o = ''
   if 72 - 72: Oo
  if 'type' in ooOoO0 :
   OOoo0oo = Ii1I11I ( ooOoO0 , 'type=[\'"](.*?)[\'"]' )
   if OOoo0oo == 'yt-dl' :
    o0OO0O0Oo = o0OO0O0Oo + "&mode=18"
   elif OOoo0oo == 'regex' :
    O0oOo00o = o0OO0O0Oo . split ( '&regexs=' )
    if 58 - 58: iiIIIII1i1iI
    IiIIi1IiiI1 = oO00oOo0OOO ( I111 ( '' , data = O0oOo00o [ 1 ] ) )
    if 23 - 23: Oo . ii1II11I1ii1I * i11iII1iiI
    iIi1IiI ( O0oOo00o [ 0 ] , oo0oooOo , OO0o , '' , '' , '' , '' , '' , None , IiIIi1IiiI1 , ii1I )
    continue
   elif OOoo0oo == 'ftv' :
    o0OO0O0Oo = 'plugin://plugin.video.F.T.V/?name=' + urllib . quote ( oo0oooOo ) + '&url=' + o0OO0O0Oo + '&mode=125&ch_fanart=na'
  elif oo000 and '.ts' in o0OO0O0Oo :
   o0OO0O0Oo = 'plugin://plugin.video.f4mTester/?url=' + urllib . quote_plus ( o0OO0O0Oo ) + '&amp;streamtype=TSDOWNLOADER&name=' + urllib . quote ( oo0oooOo )
  I11IIIiIi11 ( o0OO0O0Oo , oo0oooOo , OO0o , '' , '' , '' , '' , '' , None , '' , ii1I )
  if 39 - 39: II1Iiii1111i % o0o00Oo0O % iI1Ii11111iIi . Oo
def oOo00OooO0oO ( name , url , fanart ) :
 oo0oo = I111 ( url )
 I1IIi = oo0oo . find ( 'channel' , attrs = { 'name' : name . decode ( 'utf-8' ) } )
 O0OOOo = I1IIi ( 'item' )
 try :
  OoO00o0 = I1IIi ( 'fanart' ) [ 0 ] . string
  if OoO00o0 == None :
   raise
 except :
  OoO00o0 = fanart
 for iiiIIiIi in I1IIi ( 'subchannel' ) :
  name = iiiIIiIi ( 'name' ) [ 0 ] . string
  try :
   OO0o = iiiIIiIi ( 'thumbnail' ) [ 0 ] . string
   if OO0o == None :
    raise
  except :
   OO0o = ''
  try :
   if not iiiIIiIi ( 'fanart' ) :
    if Ii1I1I1i1Ii . getSetting ( 'use_thumb' ) == "true" :
     OoO00o0 = OO0o
   else :
    OoO00o0 = iiiIIiIi ( 'fanart' ) [ 0 ] . string
   if OoO00o0 == None :
    raise
  except :
   pass
  try :
   i1i1IIIIi1i = iiiIIiIi ( 'info' ) [ 0 ] . string
   if i1i1IIIIi1i == None :
    raise
  except :
   i1i1IIIIi1i = ''
   if 31 - 31: O0OOo % i11Ii11I1Ii1i * O0OOo
  try :
   I1Iooooo = iiiIIiIi ( 'genre' ) [ 0 ] . string
   if I1Iooooo == None :
    raise
  except :
   I1Iooooo = ''
   if 45 - 45: Oo . I1IiI + i11Ii11I1Ii1i - OOOo0 % i1iiIII111ii
  try :
   Ii11iiI = iiiIIiIi ( 'date' ) [ 0 ] . string
   if Ii11iiI == None :
    raise
  except :
   Ii11iiI = ''
   if 1 - 1: iI11I1II1I1I
  try :
   credits = iiiIIiIi ( 'credits' ) [ 0 ] . string
   if credits == None :
    raise
  except :
   credits = ''
   if 93 - 93: Oo . Ii . iii1II11ii
  try :
   IIi1iiii1iI = iiiIIiIi ( 'year' ) [ 0 ] . string
   if IIi1iiii1iI == None :
    raise
  except :
   IIi1iiii1iI = ''
   if 99 - 99: O0OOo - oOOOO - iiIIIII1i1iI % i11iII1iiI
  try :
   iIiiii = iiiIIiIi ( 'director' ) [ 0 ] . string
   if iIiiii == None :
    raise
  except :
   iIiiii = ''
   if 21 - 21: Ooo00oOo00o % oO0o0ooO0 . Oo - OOOo0
  try :
   O0000OOO0 = iiiIIiIi ( 'duration' ) [ 0 ] . string
   if O0000OOO0 == None :
    raise
  except :
   O0000OOO0 = ''
   if 4 - 4: OOOo0 . i1iiIII111ii
  try :
   ooo0 = iiiIIiIi ( 'premiered' ) [ 0 ] . string
   if ooo0 == None :
    raise
  except :
   ooo0 = ''
   if 78 - 78: oO0o0ooO0 + O0OOo - o0o00Oo0O
  try :
   oO000oOo00o0o = iiiIIiIi ( 'studio' ) [ 0 ] . string
   if oO000oOo00o0o == None :
    raise
  except :
   oO000oOo00o0o = ''
   if 10 - 10: oOOOO % I1IiI
  try :
   O00oO0 = iiiIIiIi ( 'rate' ) [ 0 ] . string
   if O00oO0 == None :
    raise
  except :
   O00oO0 = ''
   if 97 - 97: OOOo0 - oOOOO
  try :
   O0 = iiiIIiIi ( 'originaltitle' ) [ 0 ] . string
   if O0 == None :
    raise
  except :
   O0 = ''
   if 58 - 58: iI11I1II1I1I + o0o00Oo0O
  try :
   Oo00OoOo = iiiIIiIi ( 'country' ) [ 0 ] . string
   if Oo00OoOo == None :
    raise
  except :
   Oo00OoOo = ''
   if 30 - 30: i1iiIII111ii % i1iII1I1i1i1 * i11Ii11I1Ii1i - oO0o0ooO0 * II1Iiii1111i % i1iiIII111ii
  try :
   ii1ii111i11111I1I = iiiIIiIi ( 'rating' ) [ 0 ] . string
   if ii1ii111i11111I1I == None :
    raise
  except :
   ii1ii111i11111I1I = ''
   if 46 - 46: Ii - o0o00Oo0O . iiIIIII1i1iI
  try :
   ii1Oo0000oOo = iiiIIiIi ( 'episodes' ) [ 0 ] . string
   if ii1Oo0000oOo == None :
    raise
  except :
   ii1Oo0000oOo = ''
   if 100 - 100: I1IiI / ii1II11I1ii1I * i1iII1I1i1i1 . o0o00Oo0O / i11Ii11I1Ii1i
  try :
   I11 = iiiIIiIi ( 'votes' ) [ 0 ] . string
   if I11 == None :
    raise
  except :
   I11 = ''
   if 83 - 83: oOOOO
  try :
   o0oO00oO0o0o0 = iiiIIiIi ( 'aired' ) [ 0 ] . string
   if o0oO00oO0o0o0 == None :
    raise
  except :
   o0oO00oO0o0o0 = ''
   if 48 - 48: Ooo00oOo00o * i11Ii11I1Ii1i * oOOOO
  try :
   o0ooooO0o0O ( name . encode ( 'utf-8' , 'ignore' ) , url . encode ( 'utf-8' ) , 3 , OO0o , OoO00o0 , i1i1IIIIi1i , I1Iooooo , credits , Ii11iiI , IIi1iiii1iI , iIiiii , O0000OOO0 , ooo0 , oO000oOo00o0o , O00oO0 , O0 , Oo00OoOo , ii1ii111i11111I1I , ii1Oo0000oOo , I11 , o0oO00oO0o0o0 )
  except :
   iIIiIi1 ( 'There was a problem adding directory - ' + name . encode ( 'utf-8' , 'ignore' ) )
 OooOOOo0 ( O0OOOo , OoO00o0 )
 if 50 - 50: i1iIIII % Oo
def OOOO0OOO ( url , headers = None ) :
 try :
  if headers is None :
   if 21 - 21: OOOo0 - iI11I1II1I1I
   if 93 - 93: iiIIIII1i1iI - ii1II11I1ii1I % iI1Ii11111iIi . iI1Ii11111iIi - i1iiIII111ii
   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'OooooO * IiII * oOooO00oOoo00OO00oOoo00OO . O00oOoo00Oo0O00oOoo00O * IiII / I1Ii111' }
  iiIII1i = urllib2 . Request ( url , None , headers )
  Oo0OO = urllib2 . urlopen ( iiIII1i )
  oo0OO00OoooOo = Oo0OO . read ( )
  Oo0OO . close ( )
  return oo0OO00OoooOo
 except urllib2 . URLError , I1I :
  iIIiIi1 ( 'URL: ' + url )
  if hasattr ( I1I , 'code' ) :
   iIIiIi1 ( 'Falha com o código de erro - %s.' % I1I . code )
   if 90 - 90: i1iiIII111ii + Ooo00oOo00o * oO0o0ooO0 / II1Iiii1111i . ii1II11I1ii1I + ii1II11I1ii1I
   if 40 - 40: i1iiIII111ii / iI1Ii11111iIi % Ii % oO0o0ooO0 / I1IiI
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + oo + ")" )
  elif hasattr ( I1I , 'reason' ) :
   iIIiIi1 ( 'Falha ao acessar um servidor.' )
   iIIiIi1 ( 'Razão: %s' % I1I . reason )
   if 62 - 62: Oo - iI1Ii11111iIi
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + oo + ")" )
   if 62 - 62: Oo + iii1II11ii % i1iIIII
def iIi ( name , url , fanart ) :
 oo0oo = I111 ( url )
 I1IIi = oo0oo . find ( 'subchannel' , attrs = { 'name' : name . decode ( 'utf-8' ) } )
 O0OOOo = I1IIi ( 'subitem' )
 OooOOOo0 ( O0OOOo , fanart )
 if 10 - 10: i11iII1iiI / iii1II11ii
 if 15 - 15: i1iII1I1i1i1 . iI1Ii11111iIi / i1iII1I1i1i1 * O0OOo - I1IiI % oO0o0ooO0
def oo0OOOOOO0 ( name , url , iconimage , fanart ) :
 i11Ii1I1I11I = [ ] ; Ii1 = [ ] ; I1iiiiii = 0
 o0OO0Oo = I11iiii1I ( url , 'sublink:' , '#' )
 for iiiiI1iiiIi in o0OO0Oo :
  o0oO0OoO0 = iiiiI1iiiIi . replace ( 'sublink:' , '' ) . replace ( '#' , '' )
  if 70 - 70: iiIIIII1i1iI - iiIIIII1i1iI
  if len ( o0oO0OoO0 ) > 10 :
   I1iiiiii = I1iiiiii + 1 ; i11Ii1I1I11I . append ( name + ' Source [' + str ( I1iiiiii ) + ']' ) ; Ii1 . append ( o0oO0OoO0 )
   if 57 - 57: I1IiI - ii1II11I1ii1I + i11iII1iiI % iii1II11ii
 if I1iiiiii == 1 :
  try :
   if 26 - 26: i1iII1I1i1i1 . i1iII1I1i1i1
   i1oO = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage ) ; i1oO . setInfo ( type = "Video" , infoLabels = { "Title" : name } )
   iIIi1IIi = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = Ii1 [ 0 ] , listitem = i1oO )
   xbmc . Player ( ) . play ( i111i11I1ii ( Ii1 [ 0 ] ) , i1oO )
  except :
   pass
 else :
  Iii1IIII11I = xbmcgui . Dialog ( )
  if 64 - 64: iiIIIII1i1iI / Ii / ii1II11I1ii1I . OOOo0
  i1iiIIi11I = Iii1IIII11I . select ( 'Select A Source' , i11Ii1I1I11I )
  if i1iiIIi11I >= 0 :
   o0o0oOo000o0 = name
   I1iI1I1 = str ( Ii1 [ i1iiIIi11I ] )
   if 48 - 48: I1IiI / Ii - ii1II11I1ii1I * iiIIIII1i1iI / OOOo0
   try :
    i1oO = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage ) ; i1oO . setInfo ( type = "Video" , infoLabels = { "Title" : name } )
    iIIi1IIi = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = I1iI1I1 , listitem = i1oO )
    xbmc . Player ( ) . play ( i111i11I1ii ( I1iI1I1 ) , i1oO )
   except :
    pass
    if 89 - 89: iI11I1II1I1I / I1IiI - Ooo00oOo00o / II1Iiii1111i . Ii . II1Iiii1111i
    if 48 - 48: o0o00Oo0O + o0o00Oo0O . oOOOO - i1iiIII111ii
def o00oo0000 ( ) :
 if 44 - 44: iii1II11ii % iI11I1II1I1I
 oo0ooO0 = 'Name of channel show or movie'
 IIiiiiIiIIii = ''
 iIIIIIii = xbmc . Keyboard ( IIiiiiIiIIii , oo0ooO0 )
 iIIIIIii . doModal ( )
 if '
love = ''
god = 'rite ( json . dumps ( iII1i1ii ) )
  iiiiI1iiiIi . close ( )
 else :
  iIIiIi1 ( 'Appending Favorites' )
  iiiiI1iiiIi = open ( OooOoOO0 ) . read ( )
  oo0OO00OoooOo = json . loads ( iiiiI1iiiIi )
  oo0OO00OoooOo . append ( ( name , url , iconimage , fanart , mode ) )
  oOo00 = open ( OooOoOO0 , "w" )
  oOo00 . write ( json . dumps ( oo0OO00OoooOo ) )
  oOo00 . close ( )
  if 88 - 88: Oo % i1iiIII111ii . Ii . Oo
  if 82 - 82: Oo . oO0o0ooO0
def OoOoO0oO00O ( name ) :
 oo0OO00OoooOo = json . loads ( open ( OooOoOO0 ) . read ( ) )
 for O00O0oOOo in range ( len ( oo0OO00OoooOo ) ) :
  if oo0OO00OoooOo [ O00O0oOOo ] [ 0 ] == name :
   del oo0OO00OoooOo [ O00O0oOOo ]
   oOo00 = open ( OooOoOO0 , "w" )
   oOo00 . write ( json . dumps ( oo0OO00OoooOo ) )
   oOo00 . close ( )
   break
 xbmc . executebuiltin ( "XBMC.Container.Refresh" )
 if 79 - 79: OOOo0 / I1IiI
def i111i11I1ii ( url ) :
 if Ii1I1I1i1Ii . getSetting ( 'Updatecommonresolvers' ) == 'true' :
  oo00OO0O0Ooo0 = os . path . join ( i11I1II1I11i , 'genesisresolvers.py' )
  if xbmcvfs . exists ( oo00OO0O0Ooo0 ) :
   os . remove ( oo00OO0O0Ooo0 )
   if 87 - 87: i1iIIII . Oo % OOOo0 * Ii
  o0oOo = 'https://raw.githubusercontent.com/KelTec-Maedia-Play/master/plugin.video.genesis/commonresolvers.py'
  OoIIiIIIII1I = urllib . urlretrieve ( o0oOo , oo00OO0O0Ooo0 )
  Ii1I1I1i1Ii . setSetting ( 'Updatecommonresolvers' , 'false' )
 try :
  import genesisresolvers
 except Exception :
  if 96 - 96: Ii . Ooo00oOo00o
  if 7 - 7: Oo
  xbmc . executebuiltin ( "XBMC.Notification(Por favor Ative Atualizar Resolvedores comuns para reproduzir em configurações. - ,10000)" )
  if 63 - 63: iI11I1II1I1I + i1iIIII % Oo / I1IiI % Ooo00oOo00o
 OO0iiiii1iiIIii = genesisresolvers . get ( url ) . result
 if url == OO0iiiii1iiIIii or OO0iiiii1iiIIii is None :
  if 8 - 8: oO0o0ooO0 * oO0o0ooO0 * Oo + i1iII1I1i1i1 . oO0o0ooO0
  if 100 - 100: OOOo0 - o0o00Oo0O . O0OOo / O0OOo + Ooo00oOo00o * iI1Ii11111iIi
  xbmc . executebuiltin ( "XBMC.Notification(Using Urlresolver module.. - ,5000)" )
  import urlresolver
  i11111 = urlresolver . HostedMediaFile ( url )
  if i11111 :
   oO00Ooo0oO = urlresolver . resolve ( url )
   OO0iiiii1iiIIii = oO00Ooo0oO
 if OO0iiiii1iiIIii :
  if isinstance ( OO0iiiii1iiIIii , list ) :
   for O0o0OO00 in OO0iiiii1iiIIii :
    o0o00OoOo0 = Ii1I1I1i1Ii . getSetting ( 'quality' )
    if O0o0OO00 [ 'quality' ] == 'HD' :
     oO00Ooo0oO = O0o0OO00 [ 'url' ]
     break
    elif O0o0OO00 [ 'quality' ] == 'SD' :
     oO00Ooo0oO = O0o0OO00 [ 'url' ]
    elif O0o0OO00 [ 'quality' ] == '1080p' and Ii1I1I1i1Ii . getSetting ( '1080pquality' ) == 'true' :
     oO00Ooo0oO = O0o0OO00 [ 'url' ]
     break
  else :
   oO00Ooo0oO = OO0iiiii1iiIIii
 return oO00Ooo0oO
 if 98 - 98: OOOo0 % iiIIIII1i1iI * i1iiIII111ii
def OO0Oo00OO0oo ( name , mu_playlist , queueVideo = None ) :
 ii1I111i1Ii = xbmc . PlayList ( xbmc . PLAYLIST_VIDEO )
 if 53 - 53: i11iII1iiI - i1iiIII111ii + II1Iiii1111i
 if '$$LSPlayOnlyOne$$' in mu_playlist [ 0 ] :
  mu_playlist [ 0 ] = mu_playlist [ 0 ] . replace ( '$$LSPlayOnlyOne$$' , '' )
  import urlparse
  I1Ii1II = [ ]
  iiiiIiiIIii = 0
  oO0ooOO = xbmcgui . DialogProgress ( )
  oO0ooOO . create ( 'Progress' , 'Trying Multiple Links' )
  for ii1 in mu_playlist :
   if 36 - 36: i11Ii11I1Ii1i * II1Iiii1111i
   if 16 - 16: Ooo00oOo00o
   if 100 - 100: o0o00Oo0O - Oo
   if oO0O00OoOO0 in ii1 :
    if 48 - 48: iiIIIII1i1iI % i1iiIII111ii + o0o00Oo0O
    iI1iI = ii1 . split ( oO0O00OoOO0 ) [ 1 ] . split ( '&regexs' ) [ 0 ]
    I1Ii1II . append ( iI1iI )
    if 69 - 69: oO0o0ooO0 . I1IiI
    mu_playlist [ iiiiIiiIIii ] = ii1 . split ( oO0O00OoOO0 ) [ 0 ] + ( '&regexs' + ii1 . split ( '&regexs' ) [ 1 ] if '&regexs' in ii1 else '' )
   else :
    iI1iI = urlparse . urlparse ( ii1 ) . netloc
    if iI1iI == '' :
     I1Ii1II . append ( name )
    else :
     I1Ii1II . append ( iI1iI )
   O00O0oOOo = iiiiIiiIIii
   iiiiIiiIIii += 1
   if 9 - 9: ii1II11I1ii1I - i1iIIII + iI11I1II1I1I + i11iII1iiI
   IIIIIiI1I1 = I1Ii1II [ O00O0oOOo ]
   if oO0ooOO . iscanceled ( ) : return
   oO0ooOO . update ( iiiiIiiIIii / len ( mu_playlist ) * 100 , "" , "Link#%d" % ( iiiiIiiIIii ) , IIIIIiI1I1 )
   print 'auto playnamexx' , IIIIIiI1I1
   if "&mode=19" in mu_playlist [ O00O0oOOo ] :
    if 62 - 62: ii1II11I1ii1I / iI11I1II1I1I
    i1oO = xbmcgui . ListItem ( IIIIIiI1I1 , iconImage = i1Iii , thumbnailImage = i1Iii )
    i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIIIIiI1I1 } )
    i1oO . setProperty ( "IsPlayable" , "true" )
    O0OOoOoo0OOo = i111i11I1ii ( mu_playlist [ O00O0oOOo ] . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )
    i1oO . setPath ( O0OOoOoo0OOo )
    if 30 - 30: o0o00Oo0O / i11Ii11I1Ii1i % O0OOo
    i1I = tryplay ( O0OOoOoo0OOo , i1oO )
   elif "$doregex" in mu_playlist [ O00O0oOOo ] :
    if 23 - 23: I1IiI * i1iiIII111ii / iI1Ii11111iIi . iI11I1II1I1I % Ii
    ooOoo = mu_playlist [ O00O0oOOo ] . split ( '&regexs=' )
    if 41 - 41: i1iII1I1i1i1 % i1iII1I1i1i1 - i1iIIII % i11iII1iiI - OOOo0 - i1iII1I1i1i1
    O0oOo00o , IiI = OoOoO0OooOOo ( ooOoo [ 1 ] , ooOoo [ 0 ] )
    oOOo00O0O0 = O0oOo00o . replace ( ';' , '' )
    i1oO = xbmcgui . ListItem ( IIIIIiI1I1 , iconImage = i1Iii , thumbnailImage = i1Iii )
    i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIIIIiI1I1 } )
    i1oO . setProperty ( "IsPlayable" , "true" )
    i1oO . setPath ( oOOo00O0O0 )
    if 11 - 11: Ii + oO0o0ooO0 + Ii
    i1I = tryplay ( oOOo00O0O0 , i1oO )
    if 31 - 31: iiIIIII1i1iI * oOOOO . iI1Ii11111iIi * O0OOo
   else :
    O0oOo00o = mu_playlist [ O00O0oOOo ]
    O0oOo00o = O0oOo00o . split ( '&regexs=' ) [ 0 ]
    i1oO = xbmcgui . ListItem ( IIIIIiI1I1 , iconImage = i1Iii , thumbnailImage = i1Iii )
    i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIIIIiI1I1 } )
    i1oO . setProperty ( "IsPlayable" , "true" )
    i1oO . setPath ( O0oOo00o )
    if 28 - 28: i1iIIII + I1IiI - iii1II11ii % i11Ii11I1Ii1i . O0OOo + I1IiI
    i1I = tryplay ( O0oOo00o , i1oO )
    print 'played' , i1I
   print 'played' , i1I
   if i1I : return
  return
 if Ii1I1I1i1Ii . getSetting ( 'ask_playlist_items' ) == 'true' and not queueVideo :
  import urlparse
  I1Ii1II = [ ]
  iiiiIiiIIii = 0
  for ii1 in mu_playlist :
   if 72 - 72: II1Iiii1111i / iii1II11ii / iiIIIII1i1iI * iI1Ii11111iIi + i11Ii11I1Ii1i
   if oO0O00OoOO0 in ii1 :
    if 58 - 58: ii1II11I1ii1I % I1IiI . I1IiI * i11iII1iiI - i1iIIII . OOOo0
    iI1iI = ii1 . split ( oO0O00OoOO0 ) [ 1 ] . split ( '&regexs' ) [ 0 ]
    I1Ii1II . append ( iI1iI )
    if 10 - 10: oOOOO
    mu_playlist [ iiiiIiiIIii ] = ii1 . split ( oO0O00OoOO0 ) [ 0 ] + ( '&regexs' + ii1 . split ( '&regexs' ) [ 1 ] if '&regexs' in ii1 else '' )
   else :
    iI1iI = urlparse . urlparse ( ii1 ) . netloc
    if iI1iI == '' :
     I1Ii1II . append ( name )
    else :
     I1Ii1II . append ( iI1iI )
     if 48 - 48: i1iII1I1i1i1 * Oo % OOOo0 * II1Iiii1111i * i11iII1iiI
   iiiiIiiIIii += 1
  Iii1IIII11I = xbmcgui . Dialog ( )
  if 7 - 7: i1iII1I1i1i1 . II1Iiii1111i . i1iII1I1i1i1 - oOOOO
  O00O0oOOo = Iii1IIII11I . select ( oO , I1Ii1II )
  if O00O0oOOo >= 0 :
   IIIIIiI1I1 = I1Ii1II [ O00O0oOOo ]
   print 'playnamexx' , IIIIIiI1I1
   if "&mode=19" in mu_playlist [ O00O0oOOo ] :
    if 33 - 33: i1iiIII111ii + OOOo0 - i11iII1iiI / Oo / OOOo0
    i1oO = xbmcgui . ListItem ( IIIIIiI1I1 , iconImage = i1Iii , thumbnailImage = i1Iii )
    i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIIIIiI1I1 } )
    i1oO . setProperty ( "IsPlayable" , "true" )
    O0OOoOoo0OOo = i111i11I1ii ( mu_playlist [ O00O0oOOo ] . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )
    i1oO . setPath ( O0OOoOoo0OOo )
    xbmc . Player ( ) . play ( O0OOoOoo0OOo , i1oO )
   elif "$doregex" in mu_playlist [ O00O0oOOo ] :
    if 82 - 82: oO0o0ooO0 / i11Ii11I1Ii1i - i1iII1I1i1i1 / iii1II11ii * i11iII1iiI
    ooOoo = mu_playlist [ O00O0oOOo ] . split ( '&regexs=' )
    if 55 - 55: OOOo0
    O0oOo00o , IiI = OoOoO0OooOOo ( ooOoo [ 1 ] , ooOoo [ 0 ] )
    oOOo00O0O0 = O0oOo00o . replace ( ';' , '' )
    i1oO = xbmcgui . ListItem ( IIIIIiI1I1 , iconImage = i1Iii , thumbnailImage = i1Iii )
    i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIIIIiI1I1 } )
    i1oO . setProperty ( "IsPlayable" , "true" )
    i1oO . setPath ( oOOo00O0O0 )
    xbmc . Player ( ) . play ( oOOo00O0O0 , i1oO )
    if 73 - 73: iI1Ii11111iIi - oO0o0ooO0 % iii1II11ii + oO0o0ooO0 - o0o00Oo0O . i11iII1iiI
   else :
    O0oOo00o = mu_playlist [ O00O0oOOo ]
    O0oOo00o = O0oOo00o . split ( '&regexs=' ) [ 0 ]
    i1oO = xbmcgui . ListItem ( IIIIIiI1I1 , iconImage = i1Iii , thumbnailImage = i1Iii )
    i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : IIIIIiI1I1 } )
    i1oO . setProperty ( "IsPlayable" , "true" )
    i1oO . setPath ( O0oOo00o )
    xbmc . Player ( ) . play ( O0oOo00o , i1oO )
 elif not queueVideo :
  if 38 - 38: o0o00Oo0O
  ii1I111i1Ii . clear ( )
  I1I111iIi = 0
  for ii1 in mu_playlist :
   I1I111iIi += 1
   ooOi1i1i11iI11II = xbmcgui . ListItem ( '%s) %s' % ( str ( I1I111iIi ) , name ) )
   if 6 - 6: iI1Ii11111iIi . Ooo00oOo00o * I1IiI . I1IiI / II1Iiii1111i
   try :
    if "$doregex" in ii1 :
     ooOoo = ii1 . split ( '&regexs=' )
     if 14 - 14: oOOOO % i1iIIII - o0o00Oo0O / oOOOO
     O0oOo00o , IiI = OoOoO0OooOOo ( ooOoo [ 1 ] , ooOoo [ 0 ] )
    elif "&mode=19" in ii1 :
     O0oOo00o = i111i11I1ii ( ii1 . replace ( '&mode=19' , '' ) . replace ( ';' , '' ) )
    if O0oOo00o :
     ii1I111i1Ii . add ( O0oOo00o , ooOi1i1i11iI11II )
    else :
     raise
   except Exception :
    ii1I111i1Ii . add ( ii1 , ooOi1i1i11iI11II )
    pass
    if 91 - 91: Ii % oOOOO * iiIIIII1i1iI - oO0o0ooO0 . oOOOO
  xbmc . executebuiltin ( 'playlist.playoffset(video,0)' )
 else :
  if 28 - 28: Ii
  O0Oo0 = xbmcgui . ListItem ( name )
  ii1I111i1Ii . add ( mu_playlist , O0Oo0 )
  if 51 - 51: I1IiI + i1iiIII111ii * o0o00Oo0O . II1Iiii1111i
def O00Oo00OOoO0 ( name , url ) :
 if Ii1I1I1i1Ii . getSetting ( 'save_location' ) == "" :
  if 99 - 99: i11iII1iiI / Oo . oO0o0ooO0
  xbmc . executebuiltin ( "XBMC.Notification('','Choose a location to save files.',15000," + oo + ")" )
  Ii1I1I1i1Ii . openSettings ( )
 oO0Oooo0OoO = { 'url' : url , 'download_path' : Ii1I1I1i1Ii . getSetting ( 'save_location' ) }
 downloader . download ( name , oO0Oooo0OoO )
 Iii1IIII11I = xbmcgui . Dialog ( )
 if 23 - 23: II1Iiii1111i * i1iiIII111ii - O0OOo . o0o00Oo0O % iI11I1II1I1I
 Oo0000 = Iii1IIII11I . yesno ( '' , 'Do you want to add this file as a source?' )
 if Oo0000 :
  ii1iI ( os . path . join ( Ii1I1I1i1Ii . getSetting ( 'save_location' ) , name ) )
  if 19 - 19: I1IiI
def oOOoo ( name , url , mode , iconimage , fanart , description , genre , date , credits , showcontext = False , regexs = None , reg_url = None , allinfo = { } ) :
 if 26 - 26: O0OOo + oOOOO + O0OOo / oOOOO
 if mode == 1 :
  oOo0Oo00O = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( codecs . encode ( base64 . b32encode ( base64 . b16encode ( url ) ) , 'rot_13' ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 else :
  oOo0Oo00O = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( codecs . encode ( base64 . b32encode ( base64 . b16encode ( url ) ) , 'rot_13' ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 iIIi1IIi = True
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 i1oO = xbmcgui . ListItem ( name , iconImage = "DefaultFolder.png" , thumbnailImage = iconimage )
 if len ( allinfo ) < 1 :
  i1oO . setInfo ( type = "Video" , infoLabels = { "Title" : name , "Plot" : description , "Genre" : genre , "dateadded" : date } )
 else :
  i1oO . setInfo ( type = "Video" , infoLabels = allinfo )
 i1oO . setProperty ( "Fanart_Image" , fanart )
 if showcontext :
  i1io0o00O = [ ]
  if 46 - 46: iI1Ii11111iIi
  III1I = ''
  III1I = III1I == "true"
  if 4 - 4: i1iII1I1i1i1 + o0o00Oo0O
  I1IiiiI = ''
  if 6 - 6: I1IiI - Ii
  if len ( I1IiiiI ) > 0 :
   if III1I :
    i1io0o00O . append ( ( 'Disable Parental Block' , 'XBMC.RunPlugin(%s?mode=55&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    i1io0o00O . append ( ( 'Enable Parental Block' , 'XBMC.RunPlugin(%s?mode=56&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
    if 61 - 61: oOOOO * oO0o0ooO0 % I1IiI % i11iII1iiI % O0OOo + O0OOo
  if showcontext == 'source' :
   if 6 - 6: iii1II11ii
   if name in str ( OOO ) :
    i1io0o00O . append ( ( 'Remove from Sources' , 'XBMC.RunPlugin(%s?mode=8&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
    if 73 - 73: oOOOO * oO0o0ooO0 + ii1II11I1ii1I - iii1II11ii . O0OOo
    if 93 - 93: Ii
  elif showcontext == 'download' :
   i1io0o00O . append ( ( 'Download' , 'XBMC.RunPlugin(%s?url=%s&mode=9&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
  elif showcontext == 'fav' :
   i1io0o00O . append ( ( 'Remove from KelTec-Media-Play Favorites' , 'XBMC.RunPlugin(%s?mode=6&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
  if showcontext == '!!update' :
   OoOiII11IiIi = (
 '%s?url=%s&mode=17&regexs=%s'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( reg_url ) , regexs )
 )
   i1io0o00O . append ( ( '[COLOR orangered]!!update[/COLOR]' , 'XBMC.RunPlugin(%s)' % OoOiII11IiIi ) )
  if not name in iIiIi11 :
   iII1I1i = (
 '%s?mode=5&name=%s&url=%s&iconimage=%s&fanart=%s&fav_mode=0'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( url ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) )
 )
   if ii1I111i1Ii :
    iII1I1i += 'playlist=' + urllib . quote_plus ( str ( ii1I111i1Ii ) . replace ( ',' , '||' ) )
   if regexs :
    iII1I1i += "&regexs=" + regexs
    if 6 - 6: iiIIIII1i1iI / o0o00Oo0O / II1Iiii1111i / i1iIIII / iiIIIII1i1iI . iI11I1II1I1I
    if 62 - 62: iI11I1II1I1I
  i1oO . addContextMenuItems ( i1io0o00O )
 iIIi1IIi = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = oOo0Oo00O , listitem = i1oO , isFolder = True )
 return iIIi1IIi
 if 4 - 4: oO0o0ooO0 * O0OOo . O0OOo . Ooo00oOo00o / i11Ii11I1Ii1i
def o0ooooO0o0O ( name , url , mode , iconimage , fanart , description , genre , date , credits , year , director , duration , premiered , studio , rate , originaltitle , country , rating , episodes , votes , aired , showcontext = False , reg_url = None , regexs = None , allinfo = { } ) :
 if 86 - 86: iiIIIII1i1iI % o0o00Oo0O + i11iII1iiI
 if mode == 1 :
  oOo0Oo00O = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( codecs . encode ( base64 . b32encode ( base64 . b16encode ( url ) ) , 'rot_13' ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 else :
  oOo0Oo00O = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( codecs . encode ( base64 . b32encode ( base64 . b16encode ( url ) ) , 'rot_13' ) ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&fanart=" + urllib . quote_plus ( fanart )
 iIIi1IIi = True
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 i1oO = xbmcgui . ListItem ( name , iconImage = "DefaultFolder.png" , thumbnailImage = iconimage )
 if len ( allinfo ) < 1 :
  i1oO . setInfo ( type = "Video" , infoLabels = { "Title" : name , "Plot" : description , "Genre" : genre , "dateadded" : date , "credits" : credits , "Year" : year , "Director" : director , "Duration" : duration , "Premiered" : premiered , "Studio" : studio , "Mpaa" : rate , "Originaltitle" : originaltitle , "Country" : country , "Rating" : rating , "episodes" : episodes , "Votes" : votes , "Aired" : aired } )
 else :
  i1oO . setInfo ( type = "Video" , infoLabels = allinfo )
 i1oO . setProperty ( "Fanart_Image" , fanart )
 if showcontext :
  i1io0o00O = [ ]
  if 52 - 52: iii1II11ii / i1iII1I1i1i1
  III1I = ''
  III1I = III1I == "true"
  if 42 - 42: iI11I1II1I1I * II1Iiii1111i / i11iII1iiI + i11Ii11I1Ii1i
  I1IiiiI = ''
  if 48 - 48: OOOo0 - oOOOO . Ii * i1iII1I1i1i1 - II1Iiii1111i - ii1II11I1ii1I
  if len ( I1IiiiI ) > 0 :
   if III1I :
    i1io0o00O . append ( ( 'Disable Parental Block' , 'XBMC.RunPlugin(%s?mode=55&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   else :
    i1io0o00O . append ( ( 'Enable Parental Block' , 'XBMC.RunPlugin(%s?mode=56&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
    if 59 - 59: i1iII1I1i1i1 / O0OOo . iii1II11ii
  if showcontext == 'source' :
   if 100 - 100: o0o00Oo0O
   if name in str ( OOO ) :
    i1io0o00O . append ( ( 'Remove from Sources' , 'XBMC.RunPlugin(%s?mode=8&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
    if 94 - 94: oO0o0ooO0 - ii1II11I1ii1I
    if 42 - 42: ii1II11I1ii1I * iI1Ii11111iIi . i11iII1iiI - i1iII1I1i1i1 / Ooo00oOo00o
  elif showcontext == 'download' :
   i1io0o00O . append ( ( 'Download' , 'XBMC.RunPlugin(%s?url=%s&mode=9&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
  elif showcontext == 'fav' :
   i1io0o00O . append ( ( 'Remove from KelTec-Maedia-Play Favorites' , 'XBMC.RunPlugin(%s?mode=6&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
  if showcontext == '!!update' :
   OoOiII11IiIi = (
 '%s?url=%s&mode=17&regexs=%s'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( reg_url ) , regexs )
 )
   i1io0o00O . append ( ( '[COLOR orangered]!!update[/COLOR]' , 'XBMC.RunPlugin(%s)' % OoOiII11IiIi ) )
  if not name in iIiIi11 :
   iII1I1i = (
 '%s?mode=5&name=%s&url=%s&iconimage=%s&fanart=%s&fav_mode=0'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( url ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) )
 )
   if ii1I111i1Ii :
    iII1I1i += 'playlist=' + urllib . quote_plus ( str ( ii1I111i1Ii ) . replace ( ',' , '||' ) )
   if regexs :
    iII1I1i += "&regexs=" + regexs
    if 25 - 25: iii1II11ii % iI1Ii11111iIi
    if 75 - 75: Oo
  i1oO . addContextMenuItems ( i1io0o00O )
 iIIi1IIi = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = oOo0Oo00O , listitem = i1oO , isFolder = True )
 return iIIi1IIi
 if 74 - 74: iii1II11ii + oOOOO - iiIIIII1i1iI - i11iII1iiI + i1iII1I1i1i1 - iI11I1II1I1I
def OOoooo ( url , title , media_type = 'video' ) :
 if 9 - 9: oO0o0ooO0 * II1Iiii1111i - i1iIIII
 if 88 - 88: iI11I1II1I1I
 import youtubedl
 if not url == '' :
  if media_type == 'audio' :
   youtubedl . single_YD ( url , download = True , audio = True )
  else :
   youtubedl . single_YD ( url , download = True )
 elif xbmc . Player ( ) . isPlaying ( ) == True :
  import YDStreamExtractor
  if YDStreamExtractor . isDownloading ( ) == True :
   if 27 - 27: O0OOo * Ii . i11Ii11I1Ii1i + i1iiIII111ii
   YDStreamExtractor . manageDownloads ( )
  else :
   I1III1i11II1i = xbmc . Player ( ) . getPlayingFile ( )
   if 74 - 74: i11iII1iiI + i1iII1I1i1i1 + Ooo00oOo00o
   I1III1i11II1i = I1III1i11II1i . split ( '|User-Agent=' ) [ 0 ]
   ooOi1i1i11iI11II = { 'url' : I1III1i11II1i , 'title' : title , 'media_type' : media_type }
   youtubedl . single_YD ( '' , download = True , dl_info = ooOi1i1i11iI11II )
 else :
  xbmc . executebuiltin ( "XBMC.Notification(DOWNLOAD,First Play [COLOR yellow]WHILE playing download[/COLOR] ,10000)" )
  if 48 - 48: OOOo0
def Oo0OOOOOOO0oo ( site_name , search_term = None ) :
 OO0o = ''
 if os . path . exists ( iI1i11iII111 ) == False or Ii1I1I1i1Ii . getSetting ( 'clearseachhistory' ) == 'true' :
  Ii1I1 ( iI1i11iII111 , '' )
  Ii1I1I1i1Ii . setSetting ( "clearseachhistory" , "false" )
 if site_name == 'history' :
  OOOooo0OooOoO = oOo0OOOOoO ( iI1i11iII111 )
  oOoOOOo = re . compile ( '(.+?):(.*?)(?:\r|\n)' ) . findall ( OOOooo0OooOoO )
  if 35 - 35: oO0o0ooO0 * i11iII1iiI * I1IiI / OOOo0
  for I1iIII1 , search_term in oOoOOOo :
   if 'plugin://' in search_term :
    iIi1IiI ( search_term , I1iIII1 , OO0o , '' , '' , '' , '' , '' , None , '' , total = int ( len ( oOoOOOo ) ) )
   else :
    o0ooooO0o0O ( I1iIII1 + ':' + search_term , I1iIII1 , 26 , oo , oOOoo00O00o , '' , '' , '' , '' )
 if not search_term :
  iIIIIIii = xbmc . Keyboard ( '' , 'Enter Search Term' )
  iIIIIIii . doModal ( )
  if ( iIIIIIii . isConfirmed ( ) == False ) :
   return
  search_term = iIIIIIii . getText ( )
  if len ( search_term ) == 0 :
   return
 search_term = search_term . replace ( ' ' , '+' )
 search_term = search_term . encode ( 'utf-8' )
 if 'youtube' in site_name :
  if 15 - 15: i1iiIII111ii % ii1II11I1ii1I / iiIIIII1i1iI - Ooo00oOo00o . iI11I1II1I1I
  import _ytplist
  if 28 - 28: Ooo00oOo00o * i1iiIII111ii * II1Iiii1111i
  Oo0o0O0o0oo0O0O = { }
  Oo0o0O0o0oo0O0O = _ytplist . YoUTube ( 'searchYT' , youtube = search_term , max_page = 4 , nosave = 'nosave' )
  ii1I = len ( Oo0o0O0o0oo0O0O )
  for I1I111iIi in Oo0o0O0o0oo0O0O :
   try :
    I1iIII1 = Oo0o0O0o0oo0O0O [ I1I111iIi ] [ 'title' ]
    Ii11iiI = Oo0o0O0o0oo0O0O [ I1I111iIi ] [ 'date' ]
    try :
     o00i111i = Oo0o0O0o0oo0O0O [ I1I111iIi ] [ 'desc' ]
    except Exception :
     o00i111i = 'UNAVAIABLE'
     if 36 - 36: II1Iiii1111i
    O0oOo00o = 'plugin://plugin.video.youtube/play/?video_id=' + Oo0o0O0o0oo0O0O [ I1I111iIi ] [ 'url' ]
    OO0o = 'http://img.youtube.com/vi/' + Oo0o0O0o0oo0O0O [ I1I111iIi ] [ 'url' ] + '/0.jpg'
    iIi1IiI ( O0oOo00o , I1iIII1 , OO0o , '' , '' , '' , '' , '' , None , '' , ii1I )
   except Exception :
    iIIiIi1 ( 'This item is ignored::' )
  ooOO00o0 = site_name + ':' + search_term + '\n'
  Ii1I1 ( os . path . join ( Oo0oO00o , 'history' ) , ooOO00o0 , append = True )
 elif 'dmotion' in site_name :
  Ii1I1iIiiI1 = "https://api.dailymotion.com"
  if 68 - 68: i1iII1I1i1i1 . O0OOo
  import _DMsearch
  i111iiIiiIiI = str ( Ii1I1I1i1Ii . getSetting ( 'familyFilter' ) )
  _DMsearch . listVideos ( Ii1I1iIiiI1 + "/videos?fields=description,duration,id,owner.username,taken_time,thumbnail_large_url,title,views_total&search=" + search_term + "&sort=relevance&limit=100&family_filter=" + i111iiIiiIiI + "&localization=en_EN&page=1" )
  if 59 - 59: i11Ii11I1Ii1i + I1IiI / Ooo00oOo00o / iI1Ii11111iIi
  ooOO00o0 = site_name + ':' + search_term + '\n'
  Ii1I1 ( os . path . join ( Oo0oO00o , 'history' ) , ooOO00o0 , append = True )
 elif 'IMDBidplay' in site_name :
  Ii1I1iIiiI1 = "http://www.omdbapi.com/?t="
  O0oOo00o = Ii1I1iIiiI1 + search_term
  if 80 - 80: iI1Ii11111iIi + iI11I1II1I1I . i1iIIII
  I1Ii = dict ( { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.3; rv:33.0) Gecko/20100101 Firefox/33.0' , 'Referer' : 'http://joker.org/' , 'Accept-Encoding' : 'gzip, deflate' , 'Content-Type' : 'application/json;charset=utf-8' , 'Accept' : 'application/json, text/plain, */*' } )
  if 76 - 76: I1IiI * i11Ii11I1Ii1i
  I1IiooooOoO0O = requests . get ( O0oOo00o , headers = I1Ii )
  oo0OO00OoooOo = I1IiooooOoO0O . json ( )
  ii111 = oo0OO00OoooOo [ 'Response' ]
  if ii111 == 'True' :
   IIiiI11 = oo0OO00OoooOo [ 'imdbID' ]
   I1iIII1 = oo0OO00OoooOo [ 'Title' ] + oo0OO00OoooOo [ 'Released' ]
   Iii1IIII11I = xbmcgui . Dialog ( )
   Oo0000 = Iii1IIII11I . yesno ( 'Check Movie Title' , 'PLAY :: %s ?' % I1iIII1 )
   if Oo0000 :
    O0oOo00o = 'plugin://plugin.video.pulsar/movie/' + IIiiI11 + '/play'
    ooOO00o0 = I1iIII1 + ':' + O0oOo00o + '\n'
    Ii1I1 ( iI1i11iII111 , ooOO00o0 , append = True )
    return O0oOo00o
  else :
   if 7 - 7: I1IiI / i11iII1iiI + oOOOO + O0OOo / I1IiI
   xbmc . executebuiltin ( "XBMC.Notification(No IMDB match found ,7000," + oo + ")" )
   if 82 - 82: oO0o0ooO0 + OOOo0
def IIiIi11i111II ( string ) :
 if isinstance ( string , basestring ) :
  if isinstance ( string , unicode ) :
   string = string . encode ( 'ascii' , 'ignore' )
 return string
def ooO0 ( string , encoding = 'utf-8' ) :
 if isinstance ( string , basestring ) :
  if not isinstance ( string , unicode ) :
   string = unicode ( string , encoding , 'ignore' )
 return string
def Iii11ii1iIIi ( s ) : return "" . join ( filter ( lambda iiii1Ii1iii : ord ( iiii1Ii1iii ) < 128 , s ) )
if 73 - 73: Ii + iiIIIII1i1iI % O0OOo . OOOo0 % iiIIIII1i1iI
def iiiiiIIi ( command ) :
 oo0OO00OoooOo = ''
 try :
  oo0OO00OoooOo = xbmc . executeJSONRPC ( ooO0 ( command ) )
 except UnicodeEncodeError :
  oo0OO00OoooOo = xbmc . executeJSONRPC ( IIiIi11i111II ( command ) )
  if 10 - 10: iI1Ii11111iIi - ii1II11I1ii1I * Ii / iii1II11ii + ii1II11I1ii1I + iI11I1II1I1I
 return ooO0 ( oo0OO00OoooOo )
 if 23 - 23: Oo + oO0o0ooO0 + I1IiI - i1iiIII111ii % OOOo0 . i1iIIII
 if 49 - 49: iiIIIII1i1iI . iI1Ii11111iIi
def o000O0OOoo ( ) :
 O0oo = xbmc . getSkinDir ( )
 if O0oo == 'skin.confluence' :
  xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
 elif O0oo == 'skin.aeon.nox' :
  xbmc . executebuiltin ( 'Container.SetViewMode(511)' )
 else :
  xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
  if 34 - 34: I1IiI
  if 57 - 57: i11Ii11I1Ii1i . II1Iiii1111i % ii1II11I1ii1I
def I1I11 ( url ) :
 iI1i1iI1iI = ooO0 ( '{"jsonrpc":"2.0","method":"Files.GetDirectory","params":{"directory":"%s","media":"video","properties":["thumbnail","title","year","dateadded","fanart","rating","season","episode","studio"]},"id":1}' ) % url
 if 18 - 18: O0OOo + iii1II11ii - i11iII1iiI / oOOOO / i11Ii11I1Ii1i
 OOoOoO = json . loads ( iiiiiIIi ( iI1i1iI1iI ) )
 for ii1 in OOoOoO [ 'result' ] [ 'files' ] :
  url = ii1 [ 'file' ]
  I1iIII1 = Iii11ii1iIIi ( ii1 [ 'label' ] )
  OO0o = Iii11ii1iIIi ( ii1 [ 'thumbnail' ] )
  try :
   iIiiiI1IiI1I1 = Iii11ii1iIIi ( ii1 [ 'fanart' ] )
  except Exception :
   iIiiiI1IiI1I1 = ''
  try :
   Ii11iiI = ii1 [ 'year' ]
  except Exception :
   Ii11iiI = ''
  try :
   OO000 = ii1 [ 'episode' ]
   o0oOoo0o = ii1 [ 'season' ]
   if OO000 == - 1 or o0oOoo0o == - 1 :
    o00i111i = ''
   else :
    o00i111i = '[COLOR yellow] S' + str ( o0oOoo0o ) + '[/COLOR][COLOR hotpink] E' + str ( OO000 ) + '[/COLOR]'
  except Exception :
   o00i111i = ''
  try :
   oO000oOo00o0o = ii1 [ 'studio' ]
   if oO000oOo00o0o :
    o00i111i += '\n Studio:[COLOR steelblue] ' + oO000oOo00o0o [ 0 ] + '[/COLOR]'
  except Exception :
   oO000oOo00o0o = ''
   if 19 - 19: I1IiI - iI1Ii11111iIi . iii1II11ii . Oo - iiIIIII1i1iI
  if ii1 [ 'filetype' ] == 'file' :
   I11IIIiIi11 ( url , I1iIII1 , OO0o , iIiiiI1IiI1I1 , o00i111i , '' , Ii11iiI , '' , None , '' , total = len ( OOoOoO [ 'result' ] [ 'files' ] ) )
   if 93 - 93: i1iIIII % oO0o0ooO0
   if 31 - 31: Ooo00oOo00o + i11Ii11I1Ii1i - OOOo0 . O0OOo
  else :
   oOOoo ( I1iIII1 , url , 53 , OO0o , iIiiiI1IiI1I1 , o00i111i , '' , Ii11iiI , '' )
   if 28 - 28: II1Iiii1111i . oO0o0ooO0
def OOOO0OOO ( url , headers = None ) :
 try :
  if headers is None :
   if 77 - 77: oO0o0ooO0 % Ooo00oOo00o
   if 81 - 81: iI1Ii11111iIi % II1Iiii1111i / o0o00Oo0O * iI11I1II1I1I % i1iIIII . I1IiI
   headers = { '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Referer' : 'coppyright' , 'Ref' : 'copyright © 2017-2020' , 'KelTec' : 'www.keltecmp.net' }
  iiIII1i = urllib2 . Request ( url , None , headers )
  Oo0OO = urllib2 . urlopen ( iiIII1i )
  oo0OO00OoooOo = Oo0OO . read ( )
  Oo0OO . close ( )
  return oo0OO00OoooOo
 except urllib2 . URLError , I1I :
  iIIiIi1 ( 'URL: ' + url )
  if hasattr ( I1I , 'code' ) :
   iIIiIi1 ( 'Falha com o código de erro - %s.' % I1I . code )
   if 90 - 90: ii1II11I1ii1I
   if 44 - 44: ii1II11I1ii1I / oO0o0ooO0 . iii1II11ii + iI1Ii11111iIi
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + oo + ")" )
  elif hasattr ( I1I , 'reason' ) :
   iIIiIi1 ( 'Falha ao acessar um servidor.' )
   iIIiIi1 ( 'Razão: %s' % I1I . reason )
   if 32 - 32: i1iIIII - i1iiIII111ii * i1iII1I1i1i1 * O0OOo
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + oo + ")" )
   if 84 - 84: II1Iiii1111i + oO0o0ooO0 % I1IiI + Ii
def I11IIIiIi11 ( url , name , iconimage , fanart , description , genre , date , showcontext , playlist , regexs , total , setCookie = "" , allinfo = { } ) :
 if 37 - 37: O0OOo % oO0o0ooO0 / i1iiIII111ii
 i1io0o00O = [ ]
 III1I = Ii1I1I1i1Ii . getSetting ( 'parentalblocked' )
 III1I = III1I == "true"
 I1IiiiI = Ii1I1I1i1Ii . getSetting ( 'parentalblockedpin' )
 if 94 - 94: O0OOo / i11iII1iiI . ii1II11I1ii1I
 if len ( I1IiiiI ) > 0 :
  if III1I :
   i1io0o00O . append ( ( 'Disable Parental Block' , 'XBMC.RunPlugin(%s?mode=55&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
  else :
   i1io0o00O . append ( ( 'Enable Parental Block' , 'XBMC.RunPlugin(%s?mode=56&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   if 1 - 1: iii1II11ii . Ooo00oOo00o
 try :
  name = name . encode ( 'utf-8' )
 except : pass
 iIIi1IIi = True
 OoiiI11111II = False
 if regexs :
  I1ii1i11iI1 = '17'
  if 'listrepeat' in regexs :
   OoiiI11111II = True
   if 6 - 6: o0o00Oo0O . i1iiIII111ii - iiIIIII1i1iI / Ii
   if 84 - 84: O0OOo / oO0o0ooO0 * ii1II11I1ii1I * i11iII1iiI * i11Ii11I1Ii1i * o0o00Oo0O
  i1io0o00O . append ( ( OOo00O0 , 'XBMC.RunPlugin(%s?url=%s&mode=21&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
 elif ( any ( x in url for x in O0oo00o0O ) and url . startswith ( 'http' ) ) or url . endswith ( '&mode=19' ) :
  url = url . replace ( '&mode=19' , '' )
  I1ii1i11iI1 = '19'
  if 83 - 83: o0o00Oo0O % Ooo00oOo00o + ii1II11I1ii1I / OOOo0
  i1io0o00O . append ( ( OOo00O0 , 'XBMC.RunPlugin(%s?url=%s&mode=21&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
 elif url . endswith ( '&mode=18' ) :
  url = url . replace ( '&mode=18' , '' )
  I1ii1i11iI1 = '18'
  i1io0o00O . append ( ( '[COLOR white]!!Download!![/COLOR]' , 'XBMC.RunPlugin(%s?url=%s&mode=23&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
  if Ii1I1I1i1Ii . getSetting ( 'dlaudioonly' ) == 'true' :
   i1io0o00O . append ( ( '!!Download [COLOR seablue]Audio!![/COLOR]' , 'XBMC.RunPlugin(%s?url=%s&mode=24&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
   if 75 - 75: Ooo00oOo00o . I1IiI + i11Ii11I1Ii1i - iI1Ii11111iIi - o0o00Oo0O . O0OOo
 elif url . startswith ( 'magnet:?xt=' ) or '.torrent' in url :
  if '&' in url and not '&amp;' in url :
   url = url . replace ( '&' , '&amp;' )
   if 19 - 19: II1Iiii1111i * Oo % o0o00Oo0O + O0OOo
  url = 'plugin://plugin.video.elementum/play?uri=' + url
  I1ii1i11iI1 = '12'
 else :
  I1ii1i11iI1 = '12'
  if 25 - 25: oOOOO - II1Iiii1111i / o0o00Oo0O . OOOo0 % I1IiI . Oo
  i1io0o00O . append ( ( OOo00O0 , 'XBMC.RunPlugin(%s?url=%s&mode=21&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
 if 'plugin://plugin.video.youtube/play/?video_id=' in url :
  Ii1i = url . replace ( 'plugin://plugin.video.youtube/play/?video_id=' , 'https://www.youtube.com/watch?v=' )
  i1io0o00O . append ( ( '!!Download [COLOR blue]Audio!![/COLOR]' , 'XBMC.RunPlugin(%s?url=%s&mode=24&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( Ii1i ) , urllib . quote_plus ( name ) ) ) )
 oOo0Oo00O = sys . argv [ 0 ] + "?"
 IIII1i = False
 if playlist :
  if Ii1I1I1i1Ii . getSetting ( 'add_playlist' ) == "false" and '$$LSPlayOnlyOne$$' not in playlist [ 0 ] :
   oOo0Oo00O += "url=" + urllib . quote_plus ( url ) + "&mode=" + I1ii1i11iI1
  else :
   oOo0Oo00O += "mode=13&name=%s&playlist=%s" % ( urllib . quote_plus ( name ) , urllib . quote_plus ( str ( playlist ) . replace ( ',' , '||' ) ) )
   name = name + '[COLOR orangered] (' + str ( len ( playlist ) ) + ' itens)[/COLOR]'
   IIII1i = True
 else :
  oOo0Oo00O += "url=" + urllib . quote_plus ( url ) + "&mode=" + I1ii1i11iI1
 if regexs :
  oOo0Oo00O += "&regexs=" + regexs
 if not setCookie == '' :
  oOo0Oo00O += "&setCookie=" + urllib . quote_plus ( setCookie )
 if iconimage and not iconimage == '' :
  oOo0Oo00O += "&iconimage=" + urllib . quote_plus ( iconimage )
  if 84 - 84: Oo - I1IiI % i1iII1I1i1i1
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 i1oO = xbmcgui . ListItem ( name , iconImage = "DefaultVideo.png" , thumbnailImage = iconimage )
 if 80 - 80: ii1II11I1ii1I % i1iII1I1i1i1
 if allinfo == None or len ( allinfo ) < 1 :
  i1oO . setInfo ( type = "Video" , infoLabels = { "Title" : name , "Plot" : description , "Genre" : genre , "dateadded" : date } )
 else :
  i1oO . setInfo ( type = "Video" , infoLabels = allinfo )
 i1oO . setProperty ( "Fanart_Image" , fanart )
 if 80 - 80: II1Iiii1111i
 if ( not IIII1i ) and not any ( x in url for x in i1I1I ) and not '$PLAYERPROXY$=' in url :
  if regexs :
   if 26 - 26: iI11I1II1I1I . OOOo0 - iI11I1II1I1I
   if '$pyFunction:playmedia(' not in urllib . unquote_plus ( regexs ) and 'notplayable' not in urllib . unquote_plus ( regexs ) and 'listrepeat' not in urllib . unquote_plus ( regexs ) :
    if 59 - 59: oO0o0ooO0 + O0OOo . iiIIIII1i1iI
    i1oO . setProperty ( 'IsPlayable' , 'true' )
  else :
   i1oO . setProperty ( 'IsPlayable' , 'true' )
 else :
  iIIiIi1 ( 'NOT setting isplayable' + url )
 if showcontext :
  if 87 - 87: i11iII1iiI
  if showcontext == 'fav' :
   i1io0o00O . append (
 ( 'Remove CANAIS do Favoritos' , 'XBMC.RunPlugin(%s?mode=6&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) )
 )
  elif not name in iIiIi11 :
   try :
    iII1I1i = (
 '%s?mode=5&name=%s&url=%s&iconimage=%s&fanart=%s&fav_mode=0'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( url ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) )
 )
   except :
    iII1I1i = (
 '%s?mode=5&name=%s&url=%s&iconimage=%s&fanart=%s&fav_mode=0'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( url ) , urllib . quote_plus ( iconimage . encode ( "utf-8" ) ) , urllib . quote_plus ( fanart . encode ( "utf-8" ) ) )
 )
   if playlist :
    iII1I1i += 'playlist=' + urllib . quote_plus ( str ( playlist ) . replace ( ',' , '||' ) )
   if regexs :
    iII1I1i += "&regexs=" + regexs
    if 34 - 34: oOOOO . iI1Ii11111iIi / Ii / i1iII1I1i1i1
  i1oO . addContextMenuItems ( i1io0o00O )
 try :
  if not playlist is None :
   if Ii1I1I1i1Ii . getSetting ( 'add_playlist' ) == "true" :
    II1iII1 = name . split ( ') ' ) [ 1 ]
    I11II11IiI11 = [
 ( 'Play ' + II1iII1 + ' PlayList' , 'XBMC.RunPlugin(%s?mode=13&name=%s&playlist=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( II1iII1 ) , urllib . quote_plus ( str ( playlist ) . replace ( ',' , '||' ) ) ) )
 ]
    i1oO . addContextMenuItems ( I11II11IiI11 )
 except : pass
 if 97 - 97: i1iiIII111ii / iI11I1II1I1I % i1iiIII111ii / I1IiI * i1iII1I1i1i1 % iI1Ii11111iIi
 iIIi1IIi = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = oOo0Oo00O , listitem = i1oO , totalItems = total , isFolder = OoiiI11111II )
 if 17 - 17: iI11I1II1I1I
 if 89 - 89: Oo . Oo
 return iIIi1IIi
 if 10 - 10: i1iII1I1i1i1 % iii1II11ii
def OOOO0OOO ( url , headers = None ) :
 try :
  if headers is None :
   if 48 - 48: i11Ii11I1Ii1i + oOOOO % i11Ii11I1Ii1i
   if 84 - 84: o0o00Oo0O % II1Iiii1111i . II1Iiii1111i . i1iII1I1i1i1 * O0OOo
   headers = { 'Add-on' : 'plugin.video.Keltec-MP' , 'KelTec Media-Play' : 'Direitos Reservados' , 'Ref' : 'copyright © 2017-2020' , 'Referer' : 'www.keltecmp.net' , 'Team' : 'KelTec-Media-Play' , '\x55\x73\x65\x72\x2d\x61\x67\x65\x6e\x74' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0)/KelTec-Media-Play Gecko/20100101 Firefox/19.0' }
  iiIII1i = urllib2 . Request ( url , None , headers )
  Oo0OO = urllib2 . urlopen ( iiIII1i )
  oo0OO00OoooOo = Oo0OO . read ( )
  Oo0OO . close ( )
  return oo0OO00OoooOo
 except urllib2 . URLError , I1I :
  iIIiIi1 ( 'URL: ' + url )
  if hasattr ( I1I , 'code' ) :
   iIIiIi1 ( 'Falha com o código de erro - %s.' % I1I . code )
   if 43 - 43: iI1Ii11111iIi . oO0o0ooO0 % Oo
   if 61 - 61: I1IiI + iiIIIII1i1iI % oOOOO % iI11I1II1I1I - OOOo0
   xbmc . executebuiltin ( "XBMC.Notification(Falha, código de erro - " + str ( I1I . code ) + ",10000," + oo + ")" )
  elif hasattr ( I1I , 'reason' ) :
   iIIiIi1 ( 'Falha ao acessar um servidor.' )
   iIIiIi1 ( 'Razão: %s' % I1I . reason )
   if 22 - 22: i11Ii11I1Ii1i + Ooo00oOo00o + iii1II11ii
   xbmc . executebuiltin ( "XBMC.Notification(Falha, motivo - " + str ( I1I . reason ) + ",10000," + oo + ")" )
   if 83 - 83: i1iiIII111ii
def iIi1IiI ( url , name , iconimage , fanart , description , genre , date , year , director , duration , premiered , studio , rate , originaltitle , country , rating , episodes , votes , aired , showcontext , playlist , regexs , total , setCookie = "" , allinfo = { } ) :
 if 43 - 43: i11Ii11I1Ii1i
 i1io0o00O = [ ]
 III1I = Ii1I1I1i1Ii . getSetting ( 'parentalblocked' )
 III1I = III1I == "true"
 I1IiiiI = Ii1I1I1i1Ii . getSetting ( 'parentalblockedpin' )
 if 84 - 84: i11Ii11I1Ii1i . i1iIIII . i1iII1I1i1i1
 if len ( I1IiiiI ) > 0 :
  if III1I :
   i1io0o00O . append ( ( 'Disable Parental Block' , 'XBMC.RunPlugin(%s?mode=55&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
  else :
   i1io0o00O . append ( ( 'Enable Parental Block' , 'XBMC.RunPlugin(%s?mode=56&name=%s)' % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) ) )
   if 2 - 2: iii1II11ii - iI1Ii11111iIi
 try :
  name = name . encode ( 'utf-8' )
 except : pass
 iIIi1IIi = True
 OoiiI11111II = False
 if regexs :
  I1ii1i11iI1 = '17'
  if 'listrepeat' in regexs :
   OoiiI11111II = True
   if 49 - 49: II1Iiii1111i + Ooo00oOo00o / iiIIIII1i1iI - iI1Ii11111iIi % iI1Ii11111iIi + I1IiI
   if 54 - 54: i1iiIII111ii % iii1II11ii - i11Ii11I1Ii1i
  i1io0o00O . append ( ( OOo00O0 , 'XBMC.RunPlugin(%s?url=%s&mode=21&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
 elif ( any ( x in url for x in O0oo00o0O ) and url . startswith ( 'http' ) ) or url . endswith ( '&mode=19' ) :
  url = url . replace ( '&mode=19' , '' )
  I1ii1i11iI1 = '19'
  if 16 - 16: oO0o0ooO0 * i1iII1I1i1i1 / O0OOo
  i1io0o00O . append ( ( OOo00O0 , 'XBMC.RunPlugin(%s?url=%s&mode=21&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
 elif url . endswith ( '&mode=18' ) :
  url = url . replace ( '&mode=18' , '' )
  I1ii1i11iI1 = '18'
  i1io0o00O . append ( ( '[COLOR white]!!Download!![/COLOR]' , 'XBMC.RunPlugin(%s?url=%s&mode=23&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
  if Ii1I1I1i1Ii . getSetting ( 'dlaudioonly' ) == 'true' :
   i1io0o00O . append ( ( '!!Download [COLOR seablue]Audio!![/COLOR]' , 'XBMC.RunPlugin(%s?url=%s&mode=24&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
   if 46 - 46: Ooo00oOo00o
 elif url . startswith ( 'magnet:?xt=' ) or '.torrent' in url :
  if '&' in url and not '&amp;' in url :
   url = url . replace ( '&' , '&amp;' )
   if 13 - 13: i1iIIII + Ooo00oOo00o % I1IiI
  url = 'plugin://plugin.video.elementum/play?uri=' + url
  I1ii1i11iI1 = '12'
 else :
  I1ii1i11iI1 = '12'
  if 30 - 30: OOOo0 - Ii + iiIIIII1i1iI / iii1II11ii - Ii
  i1io0o00O . append ( ( OOo00O0 , 'XBMC.RunPlugin(%s?url=%s&mode=21&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( url ) , urllib . quote_plus ( name ) ) ) )
 if 'plugin://plugin.video.youtube/play/?video_id=' in url :
  Ii1i = url . replace ( 'plugin://plugin.video.youtube/play/?video_id=' , 'https://www.youtube.com/watch?v=' )
  i1io0o00O . append ( ( '!!Download [COLOR blue]Audio!![/COLOR]' , 'XBMC.RunPlugin(%s?url=%s&mode=24&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( Ii1i ) , urllib . quote_plus ( name ) ) ) )
 oOo0Oo00O = sys . argv [ 0 ] + "?"
 IIII1i = False
 if playlist :
  if Ii1I1I1i1Ii . getSetting ( 'add_playlist' ) == "false" and '$$LSPlayOnlyOne$$' not in playlist [ 0 ] :
   oOo0Oo00O += "url=" + urllib . quote_plus ( url ) + "&mode=" + I1ii1i11iI1
  else :
   oOo0Oo00O += "mode=13&name=%s&playlist=%s" % ( urllib . quote_plus ( name ) , urllib . quote_plus ( str ( playlist ) . replace ( ',' , '||' ) ) )
   name = name + '[COLOR orangered] (' + str ( len ( playlist ) ) + ' itens)[/COLOR]'
   IIII1i = True
 else :
  oOo0Oo00O += "url=" + urllib . quote_plus ( url ) + "&mode=" + I1ii1i11iI1
 if regexs :
  oOo0Oo00O += "&regexs=" + regexs
 if not setCookie == '' :
  oOo0Oo00O += "&setCookie=" + urllib . quote_plus ( setCookie )
 if iconimage and not iconimage == '' :
  oOo0Oo00O += "&iconimage=" + urllib . quote_plus ( iconimage )
  if 74 - 74: o0o00Oo0O . O0OOo
 if date == '' :
  date = None
 else :
  description += '\n\nDate: %s' % date
 i1oO = xbmcgui . ListItem ( name , iconImage = "DefaultVideo.png" , thumbnailImage = iconimage )
 if 64 - 64: i1iiIII111ii / Oo % i1iII1I1i1i1
 if allinfo == None or len ( allinfo ) < 1 :
  i1oO . setInfo ( type = "Video" , infoLabels = { "Title" : name , "Plot" : description , "Genre" : genre , "dateadded" : date , "Year" : year , "Director" : director , "Duration" : duration , "Premiered" : premiered , "Studio" : studio , "Mpaa" : rate , "Originaltitle" : originaltitle , "Country" : country , "Rating" : rating , "episodes" : episodes , "Votes" : votes , "Aired" : aired } )
 else :
  i1oO . setInfo ( type = "Video" , infoLabels = allinfo )
 i1oO . setProperty ( "Fanart_Image" , fanart )
 if 84 - 84: iI1Ii11111iIi - iii1II11ii . i1iiIII111ii . i1iIIII - iii1II11ii
 if ( not IIII1i ) and not any ( x in url for x in i1I1I ) and not '$PLAYERPROXY$=' in url :
  if regexs :
   if 99 - 99: oOOOO
   if '$pyFunction:playmedia(' not in urllib . unquote_plus ( regexs ) and 'notplayable' not in urllib . unquote_plus ( regexs ) and 'listrepeat' not in urllib . unquote_plus ( regexs ) :
    if 75 - 75: i1iiIII111ii . i11Ii11I1Ii1i / i1iIIII
    i1oO . setProperty ( 'IsPlayable' , 'true' )
  else :
   i1oO . setProperty ( 'IsPlayable' , 'true' )
 else :
  iIIiIi1 ( 'NOT setting isplayable' + url )
 if showcontext :
  if 84 - 84: OOOo0 . I1IiI / ii1II11I1ii1I
  if showcontext == 'fav' :
   i1io0o00O . append (
 ( 'Remove CANAIS do Favoritos' , 'XBMC.RunPlugin(%s?mode=6&name=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) ) )
 )
  elif not name in iIiIi11 :
   try :
    iII1I1i = (
 '%s?mode=5&name=%s&url=%s&iconimage=%s&fanart=%s&fav_mode=0'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( url ) , urllib . quote_plus ( iconimage ) , urllib . quote_plus ( fanart ) )
 )
   except :
    iII1I1i = (
 '%s?mode=5&name=%s&url=%s&iconimage=%s&fanart=%s&fav_mode=0'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( name ) , urllib . quote_plus ( url ) , urllib . quote_plus ( iconimage . encode ( "utf-8" ) ) , urllib . quote_plus ( fanart . encode ( "utf-8" ) ) )
 )
   if playlist :
    iII1I1i += 'playlist=' + urllib . quote_plus ( str ( playlist ) . replace ( ',' , '||' ) )
   if regexs :
    iII1I1i += "&regexs=" + regexs
    if 86 - 86: iii1II11ii % iI1Ii11111iIi
  i1oO . addContextMenuItems ( i1io0o00O )
 try :
  if not playlist is None :
   if Ii1I1I1i1Ii . getSetting ( 'add_playlist' ) == "true" :
    II1iII1 = name . split ( ') ' ) [ 1 ]
    I11II11IiI11 = [
 ( 'Play ' + II1iII1 + ' PlayList' , 'XBMC.RunPlugin(%s?mode=13&name=%s&playlist=%s)'
 % ( sys . argv [ 0 ] , urllib . quote_plus ( II1iII1 ) , urllib . quote_plus ( str ( playlist ) . replace ( ',' , '||' ) ) ) )
 ]
    i1oO . addContextMenuItems ( I11II11IiI11 )
 except : pass
 if 77 - 77: II1Iiii1111i % i11Ii11I1Ii1i / iiIIIII1i1iI
 iIIi1IIi = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = oOo0Oo00O , listitem = i1oO , totalItems = total , isFolder = OoiiI11111II )
 if 91 - 91: i11iII1iiI / i11iII1iiI . Ooo00oOo00o . i1iiIII111ii - I1IiI
 if 23 - 23: I1IiI
 return iIIi1IIi
 if 7 - 7: i1iII1I1i1i1 % oO0o0ooO0
def o0oOOO ( url , name , iconimage , setresolved = True ) :
 if setresolved :
  i1oO = xbmcgui . ListItem ( name , iconImage = iconimage )
  i1oO . setInfo ( type = 'Video' , infoLabels = { 'Title' : name } )
  i1oO . setProperty ( "IsPlayable" , "true" )
  i1oO . setPath ( str ( url ) )
  xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , i1oO )
 else :
  xbmc . executebuiltin ( 'XBMC.RunPlugin(' + url + ')' )
  if 47 - 47: i11Ii11I1Ii1i / Ooo00oOo00o % i1iIIII . iiIIIII1i1iI * oO0o0ooO0
  if 35 - 35: iii1II11ii * Ooo00oOo00o
  if 32 - 32: iiIIIII1i1iI . iii1II11ii / i1iiIII111ii + i1iiIII111ii . oO0o0ooO0
  if 50 - 50: iI11I1II1I1I * iiIIIII1i1iI
def IiIii1ii ( link ) :
 O0oOo00o = urllib . urlopen ( link )
 o0Oo = O0oOo00o . read ( )
 O0oOo00o . close ( )
 III1IIiIi1 = o0Oo . split ( "Jetzt" )
 OOO0O = III1IIiIi1 [ 1 ] . split ( 'programm/detail.php?const_id=' )
 I1iiIII = OOO0O [ 1 ] . split ( '<br /><a href="/' )
 II1IIIII11iiIIiI11I = I1iiIII [ 0 ] [ 40 : len ( I1iiIII [ 0 ] ) ]
 OoO0o00oo0oO = OOO0O [ 2 ] . split ( "</a></p></div>" )
 I11IiIi1iI1ii = OoO0o00oo0oO [ 0 ] [ 17 : len ( OoO0o00oo0oO [ 0 ] ) ]
 I11IiIi1iI1ii = I11IiIi1iI1ii . encode ( 'utf-8' )
 return "  - " + I11IiIi1iI1ii + " - " + II1IIIII11iiIIiI11I
 if 68 - 68: i1iIIII * i11iII1iiI . O0OOo / II1Iiii1111i . ii1II11I1ii1I - Ii
 if 49 - 49: iii1II11ii / II1Iiii1111i % O0OOo + iiIIIII1i1iI - i11iII1iiI
def iIiii ( url , regex ) :
 oo0OO00OoooOo = OOOO0OOO ( url )
 try :
  I1I111iIi = re . findall ( regex , oo0OO00OoooOo ) [ 0 ]
  return I1I111iIi
 except :
  iIIiIi1 ( 'regex failed' )
  iIIiIi1 ( regex )
  return
  if 13 - 13: Ooo00oOo00o
  if 83 - 83: OOOo0 . I1IiI + II1Iiii1111i * o0o00Oo0O / iiIIIII1i1iI
xbmcplugin . setContent ( int ( sys . argv [ 1 ] ) , 'movies' )
if 8 - 8: Oo + Ooo00oOo00o / II1Iiii1111i + oO0o0ooO0 % II1Iiii1111i - iI11I1II1I1I
if 29 - 29: iii1II11ii + Ooo00oOo00o
if 95 - 95: iiIIIII1i1iI
if 48 - 48: O0OOo / iI11I1II1I1I % Ooo00oOo00o
if 39 - 39: Oo . oO0o0ooO0 / O0OOo / O0OOo
oooo = 'plugin.video.KeltecMP'
iIIii1IIi = xbmcaddon . Addon ( oooo )
o0OO00 = iIIii1IIi . getAddonInfo ( "name" )
oo = iIIii1IIi . getAddonInfo ( 'icon' )
if 100 - 100: OOOo0 - OOOo0 + i1iIIII
o0OOO = iIIii1IIi . getAddonInfo ( 'path' ) . decode ( "utf-8" )
iIiiiI = os . path . join ( o0OOO , "resources" , "images" )
if 32 - 32: iI1Ii11111iIi * ii1II11I1ii1I / OOOo0
o0oO0 = os . path . join ( o0OOO , 'resources' , 'lib' )
sys . path . insert ( 0 , o0oO0 )
import common
if 90 - 90: oOOOO
Ooo = xbmc . translatePath ( iIIii1IIi . getAddonInfo ( "profile" ) ) . decode ( "utf-8" )
o0oOoO00o = os . path . join ( Ooo , "cache" )
if not os . path . exists ( o0oOoO00o ) :
 os . makedirs ( o0oOoO00o )
 if 35 - 35: Ooo00oOo00o / II1Iiii1111i
OO0000 = iIIii1IIi . getSetting ( "cadulto" )
if 79 - 79: Oo / iii1II11ii - I1IiI . o0o00Oo0O
O00oOoo00O = iIIii1IIi . getSetting ( "O00oOoo00O" )
IiIIii1 = iIIii1IIi . getSetting ( "cPageGOf" )
if 7 - 7: o0o00Oo0O - oO0o0ooO0 / iI1Ii11111iIi - II1Iiii1111i - iiIIIII1i1iI / OOOo0
iIiI = iIIii1IIi . getSetting ( "cEPG" )
if 57 - 57: iI11I1II1I1I * II1Iiii1111i * i1iII1I1i1i1 / iiIIIII1i1iI
iIIiII1i1ii = iIIii1IIi . getSetting ( "Cat" )
if 57 - 57: i1iiIII111ii + oOOOO
iIiiIi1IIIi11 = iIIii1IIi . getSetting ( "CatMM" )
IIiiI = iIIii1IIi . getSetting ( "CatGO" )
if 58 - 58: OOOo0
OOo00O00o0O0 = [ "lancamentos" , "acao" , "animacao" , "aventura" , "comedia" , "drama" , "fantasia" , "ficcao-cientifica" , "guerra" , "policial" , "romance" , "suspense" , "terror" ]
iI1III = [ "Lançamentos" , "Ação" , "Animação" , "Aventura" , "Comédia" , "Drama" , "Fantasia" , "F. Científica" , "Guerra" , "Policial" , "Romance" , "Suspense" , "Terror" ]
I1I111 = [ "all" , "lancamentos" , "acao" , "animacao" , "aventura" , "comedia" , "drama" , "ficcao-cientifica" , "guerra" , "policial" , "romance" , "suspense" , "terror" ]
I1iI = [ "Sem filtro (Mostrar Todos)" , "Lançamentos" , "Ação" , "Animação" , "Aventura" , "Comédia" , "Drama" , "Ficção-Científica" , "Guerra" , "Policial" , "Romance" , "Suspense" , "Terror" ]
if 33 - 33: oO0o0ooO0 / Oo / i1iIIII - Oo . I1IiI
def I1iI11I ( ) :
 xbmcplugin . setContent ( int ( sys . argv [ 1 ] ) , 'tvshows' )
def IiIiI1 ( ) :
 xbmcplugin . setContent ( int ( sys . argv [ 1 ] ) , 'movies' )
 if 12 - 12: O0OOo
Iiiiii = os . path . join ( Ooo , 'favoritesf.txt' )
IiIii1i11i1 = os . path . join ( Ooo , 'favoritess.txt' )
ooOOo00o0ooO = os . path . join ( Ooo , 'historic.txt' )
if 40 - 40: ii1II11I1ii1I . ii1II11I1ii1I * Ii
if 44 - 44: ii1II11I1ii1I
oo0Ooo0 = "true"
OOO0O00 = "http://KelTecPlay-iptv.directorioforuns.com/h113-baixe"
if 54 - 54: o0o00Oo0O * iiIIIII1i1iI * II1Iiii1111i * i11iII1iiI % Ooo00oOo00o
IIiIII11Ii = OOO0O00 + "nc/"
oooOoo0oOO0 = OOO0O00 + "fo/"
if 58 - 58: i1iIIII * II1Iiii1111i . Oo
def i11I1iiii ( id ) :
 return iIIii1IIi . getLocalizedString ( id ) . encode ( 'utf-8' )
 if 31 - 31: oOOOO / iii1II11ii / iI11I1II1I1I
def oOO00OOOoO0o ( msg ) :
 Ii1iII1ii1 ( "[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]" , "" , 45 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = False , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [B]CENTRO DE ENTRETENIMENTOS![/B][B] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nSUPORTE OFICIAL KELTEC MEDIA-PLAY [COLOR orangered]|[/COLOR] FILMES [COLOR orangered]|[/COLOR] SERIES [COLOR orangered]|[/COLOR] DESENHOS [COLOR orangered]|[/COLOR] ANIMES [COLOR orangered]|[/COLOR] MELHORES LANÇAMENTOS DUBLADOS E LEGENDADOS! [COLOR orangered]|[/COLOR]" )
 Ii1iII1ii1 ( "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]AJUDAR [COLOR crimson]|[/COLOR] PROJETO[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]" , "config" , 46 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B][B][COLOR red] AVISO IMPORTANTE! [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B][/COLOR] NÃO OBRIGATÓRIO! [B][COLOR orangered]|[/COLOR][/B] ESTE RECURSO É PARA AQUELES QUE ADMIRAM NOSSO TRABALHO KELTEC MEDIA-PLAY, [B][COLOR orangered]|[/COLOR][/B] POR FAVOR NÃO SE CINTA OBRIGADO, [B][COLOR orangered]|[/COLOR][/B] DOE SOMENTE SE NÃO FOR LHE FAZER FALTA [B][COLOR orangered]|[/COLOR][/B] Deus Abençoe! >> AGRADEÇO A TODOS CONTRIBUINTES! << [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orangered]|[/COLOR] [/COLOR][COLOR silver]Busca[/B][/COLOR]" , "" , 160 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B][COLOR white]PESQUISA DE FILMES & SÉRIES[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] [COLOR white]PARA TODA FAMÍLIA[/COLOR] [B][COLOR orangered]|[/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] KelTec Media'Play [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orangered]|[/COLOR] [/COLOR][COLOR silver]Tv ao Vivo[/COLOR][/B]" , "config" , 477 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B][B][COLOR red] AVISO IMPORTANTE! [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[/COLOR]OLÁ SEJA BEM-VINDO AO SUPORTE EXCLUSIVO: [COLOR gold]VIP[/COLOR], QUALIDADE E MUITO ENTRETENIMENTO PARA TODA FAMÍLIA, [B][COLOR orangered]|[/COLOR][/B] PEÇA UM TESTE AGORA E PARE DE SOFRER COM TRAVAMENTOS! [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orangered]|[/COLOR] [/COLOR][COLOR silver]Filmes[/COLOR][/B]" , "" , - 2 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B][COLOR white]FILMES[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nA telinha tem cada vez mais diversão.\nComédia, ação, dramas, entrevistas, viagens...\nAqui você encontra o que há de melhor entre os melhores Lançamentos de  Filmes e Séries da TV.\n[B][COLOR orangered]|[/COLOR][/B] KelTec Media'Play [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orangered]|[/COLOR] [/COLOR][COLOR silver]Séries[/B][/COLOR]" , "config" , 190 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B][COLOR white]SÉRIES[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nA telinha tem cada vez mais diversão.\nComédia, ação, dramas, entrevistas, viagens...\nAqui você encontra o que há de melhor entre os melhores Lançamentos de  Filmes e Séries da TV.\n[B][COLOR orangered]|[/COLOR][/B] KelTec Media'Play [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orangered]|[/COLOR] [/COLOR][COLOR silver][B]Filmes Favoritos[/B][/COLOR]" , "" , 301 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B]Filmes Favoritos KelTec Play[/B] [B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nFilmes da TV.\n[B][COLOR orangered]|[/COLOR][/B] KelTec Media'Play [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play [COLOR orangered]|[/COLOR] [/COLOR][COLOR silver]Séries Favoritas [/B][/COLOR]" , "" , 302 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B]Séries Favoritas KelTec Play[/B] [B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\nSéries da TV.\n[B][COLOR orangered]|[/COLOR][/B] KelTec Media'Play [B][COLOR orangered]|[/COLOR][/B]" )
 Ii1iII1ii1 ( "[B][COLOR silver]Limpar Histórico & Check Update[/COLOR][/B]" , "" , 54 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = False , info = "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B] [B]Limpar e Checar![/B] [B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]\n[B][COLOR orangered]|[/COLOR][/B] Limpar Hitóricos Favoritos [B][COLOR orangered]|[/COLOR][/B]\r\n[B][COLOR orangered]|[/COLOR][/B] Versão atual: [B][COLOR orangered]|[/COLOR][/B]" + oOOOoo0O0oO )
 if 80 - 80: iI11I1II1I1I / Ii + i1iII1I1i1i1
 if 41 - 41: oOOOO + i11iII1iiI * I1IiI * o0o00Oo0O * iii1II11ii - iI1Ii11111iIi
 if 96 - 96: I1IiI - iI11I1II1I1I
def Ii1o0OOOoo0000 ( ) :
 i11i1ii1I = common . OpenURL ( "https://pastebin.com/raw/" )
 oOoOOOo = re . compile ( '(.+);(.+)' ) . findall ( i11i1ii1I )
 for IiIIii1i1i11iII , oOOo00O0O0 in oOoOOOo :
  Ii1iII1ii1 ( "[COLOR while][B][" + IiIIii1i1i11iII + "][/COLOR][/B]" , oOOo00O0O0 , 102 , "https://i62.servimg.com/u/f62/19/82/45/70/family10.png" , "https://i62.servimg.com/u/f62/19/82/45/70/family10.png" )
 IiIiI1 ( )
def o0II1 ( ) :
 Ii1iII1ii1 ( "[B][COLOR white]Ultimos Adicionados[/COLOR][/B]" , "config" , 184 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True )
 Ii1iII1ii1 ( "[B][COLOR white]Menu Geral de Filmes[/COLOR][/B]" , "config" , 180 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True )
 IiIiI1 ( )
def OOOiiIII1I11iii ( ) :
 Ii1iII1ii1 ( "[B][COLOR white]Séries MMFilmes.tv[/COLOR][/B]" , "config" , 190 , "https://i97.servimg.com/u/f97/19/82/45/70/hqdefa10.jpg" , "https://i97.servimg.com/u/f97/19/82/45/70/cats11.jpg" , isFolder = True )
 IiIiI1 ( )
 if 95 - 95: o0o00Oo0O . i11iII1iiI
def ooOo ( ) :
 IiiIi1 = xbmcgui . Dialog ( ) . select ( "Escolha o Genero" , iI1III )
 if IiiIi1 != - 1 :
  global iIIiII1i1ii
  iIIii1IIi . setSetting ( "CatMM" , str ( IiiIi1 ) )
  iIIiII1i1ii = IiiIi1
  iIIii1IIi . setSetting ( "O00oOoo00O" , "0" )
  xbmc . executebuiltin ( "XBMC.Container.Refresh()" )
def OO00oOOO ( ) :
 oo00OO0O0Ooo0 = 0
 ii1 = 0
 try :
  OOOO = common . OpenURL ( "http://www.mmfilmes.io/series/" )
  oOooooo0ooOO = re . compile ( 'href\=\"(.+www.mmfilmes.io.+)\" rel\=\"bookmark\"' ) . findall ( OOOO )
  for iiii1Ii1iii in range ( 0 , 5 ) :
   oo00OO0O0Ooo0 += 1
   i11i1ii1I = common . OpenURL ( "http://www.mmfilmes.io/ultimos/page/" + str ( oo00OO0O0Ooo0 ) + "/" )
   OOOoo = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( i11i1ii1I )
   ii111 = re . compile ( 'audioy..([^\<]*)' ) . findall ( i11i1ii1I )
   IIIiIIii11I = re . compile ( 'src=\"(http.+?www.mmfilmes.io\/wp-content\/uploads[^\"]+)' ) . findall ( i11i1ii1I )
   oOOO0OOoOO0 = re . compile ( 'boxxer.+\s.+boxxer..([^\<]*)' ) . findall ( i11i1ii1I )
   if OOOoo :
    for IiIIii1i1i11iII , oOo00 , oOOo00O0O0 in OOOoo :
     IiIIii1i1i11iII = IiIIii1i1i11iII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
     if not oOOo00O0O0 in oOooooo0ooOO :
      Ii1iII1ii1 ( IiIIii1i1i11iII + " [COLOR gold]" + ii111 [ ii1 ] + "[/COLOR] [COLOR silver]" + oOOO0OOoOO0 [ ii1 ] + "[/COLOR]" , oOOo00O0O0 , 181 , IIIiIIii11I [ ii1 ] , IIIiIIii11I [ ii1 ] , isFolder = True , IsPlayable = False )
     ii1 += 1
   ii1 = 0
 except :
  pass
  if 13 - 13: iI11I1II1I1I + oO0o0ooO0
def II1i1 ( pagina2 ) :
 Ii1iII1ii1 ( "[COLOR yellow][B][Gênero dos Filmes]:[/B] " + iI1III [ int ( iIiiIi1IIIi11 ) ] + "[/COLOR]" , "url" , 189 , "http://icons.iconarchive.com/icons/johanchalibert/mac-osx-yosemite/1024/system-preferences-icon.png" , "http://icons.iconarchive.com/icons/johanchalibert/mac-osx-yosemite/1024/system-preferences-icon.png" , isFolder = False )
 o0o0oo0OOo0O0 = eval ( pagina2 )
 oo00OO0O0Ooo0 = int ( o0o0oo0OOo0O0 ) * 5
 oO0Oo00oo = 1
 ii1 = 0
 if int ( o0o0oo0OOo0O0 ) > 0 :
  Ii1iII1ii1 ( "[COLOR silver][B]<< Pagina Anterior [" + str ( int ( o0o0oo0OOo0O0 ) ) + "[/B]][/COLOR]" , o0o0oo0OOo0O0 , 120 , "https://i97.servimg.com/u/f97/19/82/45/70/url10.png" , isFolder = False , background = pagina2 )
 try :
  OOOO = common . OpenURL ( "http://www.mmfilmes.io/series/" )
  oOooooo0ooOO = re . compile ( 'href\=\"(.+www.mmfilmes.io.+)\" rel\=\"bookmark\"' ) . findall ( OOOO )
  for iiii1Ii1iii in range ( 0 , 5 ) :
   oo00OO0O0Ooo0 += 1
   i11i1ii1I = common . OpenURL ( "http://www.mmfilmes.io/category/" + OOo00O00o0O0 [ int ( iIiiIi1IIIi11 ) ] + "/page/" + str ( oo00OO0O0Ooo0 ) + "/" )
   OOOoo = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( i11i1ii1I )
   ii111 = re . compile ( 'audioy..([^\<]*)' ) . findall ( i11i1ii1I )
   IIIiIIii11I = re . compile ( 'src=\"(http.+?www.mmfilmes.io\/wp-content\/uploads[^\"]+)' ) . findall ( i11i1ii1I )
   oOOO0OOoOO0 = re . compile ( 'boxxer.+\s.+boxxer..([^\<]*)' ) . findall ( i11i1ii1I )
   if OOOoo :
    for IiIIii1i1i11iII , oOo00 , oOOo00O0O0 in OOOoo :
     IiIIii1i1i11iII = IiIIii1i1i11iII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
     if not oOOo00O0O0 in oOooooo0ooOO :
      Ii1iII1ii1 ( IiIIii1i1i11iII + " [COLOR gold]" + ii111 [ ii1 ] + "[/COLOR] [COLOR silver]" + oOOO0OOoOO0 [ ii1 ] + "[/COLOR]" , oOOo00O0O0 , 181 , IIIiIIii11I [ ii1 ] , IIIiIIii11I [ ii1 ] , isFolder = True , IsPlayable = False )
     ii1 += 1
     oO0Oo00oo += 1
   ii1 = 0
   if oO0Oo00oo >= 50 :
    Ii1iII1ii1 ( "[COLOR silver][B]Proxima Pagina >> [" + str ( int ( o0o0oo0OOo0O0 ) + 2 ) + "[/B]][/COLOR]" , o0o0oo0OOo0O0 , 110 , "https://i97.servimg.com/u/f97/19/82/45/70/proxim10.png" , isFolder = False , background = pagina2 )
 except :
  pass
def iIIiiII11i1I1 ( ) :
 i11i1ii1I = common . OpenURL ( O0oOo00o )
 OOOoo = re . compile ( 'boxp\(.([^\']+)' ) . findall ( i11i1ii1I )
 Ii111Ii1iiIi1 = re . compile ( 'mCSB_container..\s(\h*(?s)(.+?))\<\/div' ) . findall ( i11i1ii1I )
 Ii111Ii1iiIi1 = Ii111Ii1iiIi1 [ 0 ] [ 0 ] . replace ( "\t" , "" ) if Ii111Ii1iiIi1 else ""
 if OOOoo :
  OOI11i1IIi1i1 = common . OpenURL ( OOOoo [ 0 ] , headers = { 'referer' : "http://www.mmfilmes.io/" } )
  I11i1iiiiIIIi = re . compile ( 'opb\(.([^\']+).+?.{3}.+?[^\\>]+.([^\<]+)' ) . findall ( OOI11i1IIi1i1 )
  if I11i1iiiiIIIi :
   IiIIii1i1i11iII = re . sub ( ' \[.+' , '' , I1iIII1 )
   for i11i1ii1I , oOOO0OOoOO0 in I11i1iiiiIIIi :
    Ii1iII1ii1 ( IiIIii1i1i11iII + " [COLOR gold](" + oOOO0OOoOO0 + ")[/COLOR]" , i11i1ii1I , 182 , i1Iii , i1Iii , isFolder = False , IsPlayable = True , info = Ii111Ii1iiIi1 , background = O0oOo00o )
def Ii11Ii1 ( ) :
 i11i1ii1I = common . OpenURL ( O0oOo00o , headers = { 'referer' : "http://www.mmfilmes.io/" } )
 OOOoo = re . compile ( 'addiframe\(\'([^\']+)' ) . findall ( i11i1ii1I )
 if OOOoo :
  OOOoo [ 0 ] = "https://player.openload.network" + OOOoo [ 0 ] if not "http" in OOOoo [ 0 ] else OOOoo [ 0 ]
  OOI11i1IIi1i1 = common . OpenURL ( OOOoo [ 0 ] , headers = { 'referer' : "https://player.openload.network" } ) . replace ( "file" , "\nfile" )
  I11i1iiiiIIIi = re . compile ( 'file.+?(h[^\']+).+?(\d+p)\'' ) . findall ( OOI11i1IIi1i1 )
  IIIO0oo0OOO0O0 = re . compile ( '([^\']+\.(vtt|srt|sub|ssa|txt|ass))' ) . findall ( OOI11i1IIi1i1 )
  o0o0ooOO0 = [ ]
  o0oIi11I1II1 = [ ]
  for i11i1ii1I , ii111 in I11i1iiiiIIIi :
   o0oIi11I1II1 . append ( i11i1ii1I )
   o0o0ooOO0 . append ( ii111 )
  if len ( o0oIi11I1II1 ) < 1 :
   xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , 'Erro, video não encontrado' )
   sys . exit ( int ( sys . argv [ 1 ] ) )
  IiiIi1 = xbmcgui . Dialog ( ) . select ( "Selecione a resolucão" , o0o0ooOO0 )
  if IiiIi1 != - 1 :
   oOOo00O0O0 = re . sub ( ' ' , '%20' , o0oIi11I1II1 [ IiiIi1 ] )
   global I11Ii1I11
   I11Ii1I11 = I11Ii1I11 + ";;;" + I1iIII1 + ";;;MM"
   if IIIO0oo0OOO0O0 :
    IIIO0oo0OOO0O0 = re . sub ( ' ' , '%20' , IIIO0oo0OOO0O0 [ 0 ] [ 0 ] )
    if not "http" in IIIO0oo0OOO0O0 :
     IIIO0oo0OOO0O0 = "https://player.openload.network/" + IIIO0oo0OOO0O0
    iI11II11I1 ( I1iIII1 , oOOo00O0O0 , i1Iii , ooOi1i1i11iI11II , sub = IIIO0oo0OOO0O0 )
   else :
    iI11II11I1 ( I1iIII1 , oOOo00O0O0 , i1Iii , ooOi1i1i11iI11II )
    if 67 - 67: oO0o0ooO0
def I11O0O0o ( ) :
 try :
  i11i1ii1I = common . OpenURL ( "http://www.mmfilmes.io/series/" )
  OOOoo = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( i11i1ii1I )
  IIIiIIii11I = re . compile ( 'src=\"(http.+?www.mmfilmes.io\/wp-content\/uploads[^\"]+)' ) . findall ( i11i1ii1I )
  ii1 = 0
  I11i1iiiiIIIi = [ ]
  if OOOoo :
   for IiIIii1i1i11iII , oOo00 , oOOo00O0O0 in OOOoo :
    I11i1iiiiIIIi . append ( [ IiIIii1i1i11iII , oOOo00O0O0 , IIIiIIii11I [ ii1 ] ] )
    ii1 += 1
   I11i1iiiiIIIi = sorted ( I11i1iiiiIIIi , key = lambda I11i1iiiiIIIi : I11i1iiiiIIIi [ 0 ] )
   for IiIIii1i1i11iII , oOOo00O0O0 , i1i1i1I in I11i1iiiiIIIi :
    IiIIii1i1i11iII = IiIIii1i1i11iII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
    Ii1iII1ii1 ( IiIIii1i1i11iII , oOOo00O0O0 , 191 , i1i1i1I , i1i1i1I , isFolder = True , IsPlayable = False )
 except :
  Ii1iII1ii1 ( "Server offline" , "" , 0 , "" , "" , isFolder = False )
def i111II ( x ) :
 i11i1ii1I = common . OpenURL ( O0oOo00o )
 OOOoo = re . compile ( 'boxp\(.([^\']+)' ) . findall ( i11i1ii1I )
 Ii111Ii1iiIi1 = re . compile ( 'mCSB_container..\s(\h*(?s)(.+?))\<\/div' ) . findall ( i11i1ii1I )
 Ii111Ii1iiIi1 = Ii111Ii1iiIi1 [ 0 ] [ 0 ] . replace ( "\t" , "" ) if Ii111Ii1iiIi1 else ""
 ii1 = 0
 if OOOoo :
  if x == "None" :
   OOI11i1IIi1i1 = common . OpenURL ( OOOoo [ 0 ] , headers = { 'referer' : "http://www.mmfilmes.io/" } )
   I11i1iiiiIIIi = re . compile ( 'opb\(.([^\']+).+?.{3}.+?[^\\>]+.([^\<]+)' ) . findall ( OOI11i1IIi1i1 )
   o0o0ooOO0 = [ ]
   o0oIi11I1II1 = [ ]
   for i11i1ii1I , ii111 in I11i1iiiiIIIi :
    o0oIi11I1II1 . append ( i11i1ii1I )
    o0o0ooOO0 . append ( ii111 )
   if len ( o0o0ooOO0 ) == 1 :
    IiiIi1 = 0
   else :
    IiiIi1 = xbmcgui . Dialog ( ) . select ( "Selecione o server:" , o0o0ooOO0 )
   if IiiIi1 == - 1 :
    IiiIi1 = 0
   if I11i1iiiiIIIi :
    O0o0 = common . OpenURL ( I11i1iiiiIIIi [ 0 ] [ 0 ] , headers = { 'referer' : "http://www.mmfilmes.io/" } ) . replace ( "\n" , "" ) . replace ( "\r" , "" ) . replace ( '".Svplayer"' , "<end>" ) . replace ( '\t' , " " )
    O0o0 = re . sub ( '(\(s \=\= \d+\))' , r'<end>\1' , O0o0 )
    ooOo0O0 = re . compile ( 's \=\= (\d+)(.+?\<end\>)' ) . findall ( O0o0 )
    for OooO00O0OO0oo in ooOo0O0 :
     Ii1iII1ii1 ( "[B]Temporada " + OooO00O0OO0oo [ 0 ] + "[/B]" , o0oIi11I1II1 [ IiiIi1 ] , 192 , i1Iii , i1Iii , isFolder = True , info = Ii111Ii1iiIi1 , background = ii1 )
     ii1 += 1
def Oo0OO0 ( x ) :
 O0o0 = common . OpenURL ( O0oOo00o , headers = { 'referer' : "http://www.mmfilmes.io/" } ) . replace ( "\n" , "" ) . replace ( "\r" , "" ) . replace ( '".Svplayer"' , "<end>" ) . replace ( '\t' , " " )
 O0o0 = re . sub ( '(\(s \=\= \d+\))' , r'<end>\1' , O0o0 )
 ooOo0O0 = re . compile ( 's \=\= (\d+)(.+?\<end\>)' ) . findall ( O0o0 )
 I1IiooooOoO0O = - 1
 oO0Oo00oo = 1
 oOOO0OOoOO0 = re . compile ( "t \=\= \'([^\']+)(.+?\})" ) . findall ( ooOo0O0 [ int ( x ) ] [ 1 ] )
 I1iIi1IiI1i = re . compile ( "e \=\= (\d+).+?addiframe\(\'([^\']+)" ) . findall ( ooOo0O0 [ int ( x ) ] [ 1 ] )
 for I1I , oOOo00O0O0 in I1iIi1IiI1i :
  oOOo00O0O0 = "https://player.openload.network" + oOOo00O0O0 if not "http" in oOOo00O0O0 else oOOo00O0O0
  if oO0Oo00oo == int ( I1I ) :
   I1IiooooOoO0O += 1
  if len ( oOOO0OOoOO0 [ I1IiooooOoO0O ] [ 1 ] ) < 30 :
   I1IiooooOoO0O += 1
  IiIIii1i1i11iII = "[COLOR gold](Dub)[/COLOR]" if "dub" in oOOO0OOoOO0 [ I1IiooooOoO0O ] [ 0 ] else "[COLOR silver](Leg)[/COLOR]"
  Ii1iII1ii1 ( "Episodio " + I1I + " [COLOR blue]" + IiIIii1i1i11iII , oOOo00O0O0 , 194 , i1Iii , i1Iii , isFolder = False , IsPlayable = True , info = ooOi1i1i11iI11II )
def IiiIiiiiI1III ( ) :
 if "drive.google" in O0oOo00o :
  xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , 'Erro, video não encontrado' )
  sys . exit ( )
 OOI11i1IIi1i1 = common . OpenURL ( O0oOo00o , headers = { 'referer' : "https://player.openload.network" } ) . replace ( '"' , "'" )
 I11i1iiiiIIIi = re . compile ( '(h[^\']+).+?label...(\w+)' ) . findall ( OOI11i1IIi1i1 )
 IIIO0oo0OOO0O0 = re . compile ( '([^\']+\.(vtt|srt|sub|ssa|txt|ass))' ) . findall ( OOI11i1IIi1i1 )
 o0o0ooOO0 = [ ]
 o0oIi11I1II1 = [ ]
 for i11i1ii1I , ii111 in I11i1iiiiIIIi :
  o0oIi11I1II1 . append ( i11i1ii1I )
  o0o0ooOO0 . append ( ii111 )
 if len ( o0oIi11I1II1 ) < 1 :
  xbmcgui . Dialog ( ) . ok ( 'KelTec Play' , 'Erro, video não encontrado' )
  sys . exit ( int ( sys . argv [ 1 ] ) )
 IiiIi1 = xbmcgui . Dialog ( ) . select ( "Selecione a resolucão" , o0o0ooOO0 )
 if IiiIi1 != - 1 :
  oOOo00O0O0 = re . sub ( ' ' , '%20' , o0oIi11I1II1 [ IiiIi1 ] )
  if IIIO0oo0OOO0O0 :
   IIIO0oo0OOO0O0 = re . sub ( ' ' , '%20' , IIIO0oo0OOO0O0 [ 0 ] [ 0 ] )
   if not "http" in IIIO0oo0OOO0O0 :
    IIIO0oo0OOO0O0 = "https://player.openload.network/" + IIIO0oo0OOO0O0
   iI11II11I1 ( I1iIII1 , oOOo00O0O0 , i1Iii , ooOi1i1i11iI11II , sub = IIIO0oo0OOO0O0 )
  else :
   iI11II11I1 ( I1iIII1 , oOOo00O0O0 , i1Iii , ooOi1i1i11iI11II )
   if 42 - 42: iiIIIII1i1iI - i1iiIII111ii * O0OOo % i1iII1I1i1i1 * iii1II11ii / oOOOO
   if 94 - 94: i1iiIII111ii + iI11I1II1I1I
def OOo0 ( ) :
 Ii1iII1ii1 ( "[COLOR withe][B][Nova Busca][/B][/COLOR]" , "" , 50 , "" , isFolder = False )
 IiiIi1 = xbmcgui . Dialog ( ) . input ( "Busca (poder demorar a carregar os resultados)" ) . replace ( " " , "+" )
 if not IiiIi1 :
  return oOO00OOOoO0o ( True )
  sys . exit ( int ( sys . argv [ 1 ] ) )
  if 79 - 79: I1IiI + iiIIIII1i1iI % O0OOo % iiIIIII1i1iI
  if 56 - 56: oO0o0ooO0 + iiIIIII1i1iI . i11iII1iiI + OOOo0 * oO0o0ooO0 - o0o00Oo0O
  if 35 - 35: i11Ii11I1Ii1i . O0OOo . oOOOO - O0OOo % O0OOo + oOOOO
  if 99 - 99: ii1II11I1ii1I + i11Ii11I1Ii1i
  if 34 - 34: oOOOO * ii1II11I1ii1I . I1IiI % Ii
  if 61 - 61: iI11I1II1I1I + iiIIIII1i1iI * O0OOo - Oo % iiIIIII1i1iI
  if 76 - 76: iiIIIII1i1iI / iI1Ii11111iIi
  if 12 - 12: oOOOO
  if 58 - 58: i11iII1iiI + iI11I1II1I1I % o0o00Oo0O + O0OOo + iI1Ii11111iIi * OOOo0
  if 41 - 41: iiIIIII1i1iI * I1IiI
  if 76 - 76: iiIIIII1i1iI . o0o00Oo0O * OOOo0 + i1iiIII111ii
  if 53 - 53: iii1II11ii
  if 3 - 3: i1iIIII - OOOo0 * OOOo0 - I1IiI / oOOOO * oO0o0ooO0
  if 58 - 58: i1iIIII % iI11I1II1I1I / Ii % ii1II11I1ii1I . oOOOO * i1iII1I1i1i1
  if 32 - 32: OOOo0 + ii1II11I1ii1I
 oo00OO0O0Ooo0 = 0
 ii1 = 0
 try :
  Ii1iII1ii1 ( "[B][COLOR white]KelTec[/COLOR] [COLOR crimson]Play: [/COLOR][COLOR silver]Filmes & Séries[/B][/COLOR]" , "" , 0 , "" , isFolder = False )
  OOOO = common . OpenURL ( "http://www.mmfilmes.io/series/" )
  oOooooo0ooOO = re . compile ( 'href\=\"(.+www.mmfilmes.io.+)\" rel\=\"bookmark\"' ) . findall ( OOOO )
  for iiii1Ii1iii in range ( 0 , 3 ) :
   oo00OO0O0Ooo0 += 1
   i11i1ii1I = common . OpenURL ( "http://www.mmfilmes.io/page/" + str ( oo00OO0O0Ooo0 ) + "/?s=" + IiiIi1 )
   OOOoo = re . compile ( 'id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)' ) . findall ( i11i1ii1I )
   ii111 = re . compile ( 'audioy..([^\<]*)' ) . findall ( i11i1ii1I )
   IIIiIIii11I = re . compile ( 'src=\"(http.+?www.mmfilmes.io\/wp-content\/uploads[^\"]+)' ) . findall ( i11i1ii1I )
   oOOO0OOoOO0 = re . compile ( 'boxxer.+\s.+boxxer..([^\<]*)' ) . findall ( i11i1ii1I )
   if OOOoo :
    for IiIIii1i1i11iII , oOo00 , oOOo00O0O0 in OOOoo :
     IiIIii1i1i11iII = IiIIii1i1i11iII . replace ( "&#8211;" , "-" ) . replace ( "&#038;" , "&" ) . replace ( "&#8217;" , "\'" )
     if not oOOo00O0O0 in oOooooo0ooOO :
      Ii1iII1ii1 ( IiIIii1i1i11iII + " [COLOR glod]" + ii111 [ ii1 ] + "[/COLOR] [COLOR orange]" + oOOO0OOoOO0 [ ii1 ] + "[/COLOR]" , oOOo00O0O0 , 181 , IIIiIIii11I [ ii1 ] , IIIiIIii11I [ ii1 ] , isFolder = True , IsPlayable = False )
     else :
      Ii1iII1ii1 ( IiIIii1i1i11iII , oOOo00O0O0 , 191 , IIIiIIii11I [ ii1 ] , IIIiIIii11I [ ii1 ] , isFolder = True , IsPlayable = False )
     ii1 += 1
   ii1 = 0
 except :
  pass
 oo00OO0O0Ooo0 = 0
 ii1 = 0
 try :
  if 91 - 91: i1iiIII111ii - oOOOO * oOOOO
  for iiii1Ii1iii in range ( 0 , 3 ) :
   oo00OO0O0Ooo0 += 1
   i11i1ii1I = common . OpenURL ( "http://gofilmes.me/search?s=" + IiiIi1 + "&p=" + str ( oo00OO0O0Ooo0 ) ) . replace ( "</div><div" , "\r\n" )
   OOOoo = re . compile ( 'href=\"([^\"]+)\" title\=\"([^\"]+).+b\" src\=\"([^\"]+).+' ) . findall ( i11i1ii1I )
   for oOOo00O0O0 , IiIIii1i1i11iII , ooOOOo0 in OOOoo :
    Ii1iII1ii1 ( IiIIii1i1i11iII , oOOo00O0O0 , 211 , ooOOOo0 , ooOOOo0 , isFolder = False , IsPlayable = True )
 except :
  pass
  if 19 - 19: oOOOO + i1iII1I1i1i1 * oOOOO
  if 71 - 71: ii1II11I1ii1I . I1IiI - oO0o0ooO0 - iii1II11ii - Oo - I1IiI
  if 45 - 45: i11iII1iiI * i11iII1iiI
  if 9 - 9: iI11I1II1I1I
def O0000 ( choiceTitle , fileTitle , urlTitle , choiceFile , choiceUrl , choiceNone = None , fileType = 1 , fileMask = None , defaultText = "" ) :
 ooO0OO0Oooo0o = ''
 OOoO00o000 = [ i11I1iiii ( choiceFile ) , i11I1iiii ( choiceUrl ) ]
 if choiceNone is not None :
  OOoO00o000 = [ i11I1iiii ( choiceNone ) ] + OOoO00o000
 iIi1 = Iii11111I1iii ( i11I1iiii ( choiceTitle ) , OOoO00o000 )
 if choiceNone is None and iIi1 == 0 or choiceNone is not None and iIi1 == 1 :
  if not defaultText . startswith ( 'http' ) :
   defaultText = ""
  ooO0OO0Oooo0o = OO0Oo00 ( i11I1iiii ( fileTitle ) , defaultText ) . strip ( ) . decode ( "utf-8" )
 elif choiceNone is None and iIi1 == 1 or choiceNone is not None and iIi1 == 2 :
  if defaultText . startswith ( 'http' ) :
   defaultText = ""
  ooO0OO0Oooo0o = xbmcgui . Dialog ( ) . browse ( fileType , i11I1iiii ( urlTitle ) , 'files' , fileMask , False , False , defaultText ) . decode ( "utf-8" )
 return ooO0OO0Oooo0o
def iI11II11I1 ( name , url , iconimage = None , info = '' , sub = '' , metah = '' ) :
 if ";;;" in I11Ii1I11 :
  oOo00 = I11Ii1I11 . split ( ";;;" )
  if "RC" in oOo00 [ 2 ] :
   IIi11I ( oOo00 [ 0 ] , iconimage , oOo00 [ 1 ] , "95" , "historic.txt" )
  elif "NC" in oOo00 [ 2 ] :
   IIi11I ( oOo00 [ 0 ] , iconimage , oOo00 [ 1 ] , "78" , "historic.txt" )
  elif "MM" in oOo00 [ 2 ] :
   IIi11I ( oOo00 [ 0 ] , iconimage , oOo00 [ 1 ] , "181" , "historic.txt" )
 url = re . sub ( '\.mp4$' , '.mp4?play' , url )
 url = common . getFinalUrl ( url )
 if 61 - 61: i11Ii11I1Ii1i + i11Ii11I1Ii1i + iiIIIII1i1iI / iI11I1II1I1I
 O0Oo0 = xbmcgui . ListItem ( path = url )
 if metah :
  O0Oo0 . setInfo ( type = "Video" , infoLabels = metah )
 else :
  O0Oo0 . setInfo ( type = "Video" , infoLabels = { "mediatype" : "video" , "Title" : name , "Plot" : info } )
 if sub != '' :
  O0Oo0 . setSubtitles ( [ 'special://temp/example.srt' , sub ] )
 if iconimage is not None :
  try :
   O0Oo0 . setArt ( { 'thumb' : iconimage } )
  except :
   O0Oo0 . setThumbnailImage ( iconimage )
 xbmcplugin . setResolvedUrl ( int ( sys . argv [ 1 ] ) , True , O0Oo0 )
 if 91 - 91: I1IiI / Ooo00oOo00o * i11Ii11I1Ii1i
def Ii1iII1ii1 ( name , url , mode , iconimage = '' , logos = '' , index = - 1 , move = 0 , isFolder = True , IsPlayable = False , background = None , cacheMin = '0' , info = '' , metah = '' ) :
 ooOoo000 = { 'name' : name , 'url' : url , 'mode' : mode , 'iconimage' : iconimage , 'logos' : logos , 'cache' : cacheMin , 'info' : info , 'background' : background , 'metah' : metah }
 i1oO = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
 if metah :
  i1oO . setInfo ( '
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))