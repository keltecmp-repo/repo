# encoded by pyprotect
# https://keltecmp.net/pyprotect

import base64, codecs
magic = '# -*- coding: UTF-8 -*-
try :
 import urllib . parse as urllib
except ImportError :
 import urllib
try :
 import urllib2
except ImportError :
 import urllib . request as urllib2
import re
import os
import sys
try :
 import cookielib
except ImportError :
 import http . cookiejar as cookielib
from urllib import request as urllib2 , parse as urllib
import datetime
from datetime import datetime
if 64 - 64: i11iIiiIii
import re
import os
import sys
import hashlib
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
if 73 - 73: II111iiii
import urllib . error
import urllib . parse
import urllib . parse
import urllib . request
import uuid as random
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
import xbmcaddon
import xbmcgui
import xbmcplugin
if 48 - 48: oO0o / OOooOOo / I11i / Ii1I
import resources . lib . common as common
if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * Ii1I
import base64
import codecs
import xbmc
if 46 - 46: ooOoO0o * I11i - OoooooooOO
import xbmcaddon
import xbmcvfs
import traceback
import time
if 30 - 30: o0oOOo0O0Ooo - O0 % o0oOOo0O0Ooo - OoooooooOO * O0 * OoooooooOO
import webbrowser
import platform
if 60 - 60: iIii1I11I1II1 / i1IIi * oO0o - I1ii11iIi11i + o0oOOo0O0Ooo
if 94 - 94: i1IIi % Oo0Ooo
if 68 - 68: Ii1I / O0
if 46 - 46: O0 * II111iiii / IiII * Oo0Ooo * iII111i . I11i
if 62 - 62: i11iIiiIii - II111iiii % I1Ii111 - iIii1I11I1II1 . I1ii11iIi11i . II111iiii
OOoO = 'plugin.video.KelTecPlayTv'
OOo = xbmcaddon . Addon ( OOoO )
Ii1IIii11 = OOo . getAddonInfo ( "name" )
Oooo0000 = OOo . getAddonInfo ( 'icon' )
i11 = OOo . getAddonInfo ( 'path' )
I11 = i11 + '/fanart.jpg'
Oo0o0000o0o0 = i11 + '/icon.gif'
if 86 - 86: OoOoOO00 % I1IiiI
if 80 - 80: OoooooooOO . I1IiiI
OOO0O = OOo . getAddonInfo ( 'path' )
oo0ooO0oOOOOo = os . path . join ( OOO0O , "resources" , "images" )
if 71 - 71: I1Ii111
O0OoOoo00o = os . path . join ( OOO0O , 'resources' , 'lib' )
sys . path . insert ( 0 , O0OoOoo00o )
import common
if 31 - 31: II111iiii + OoO0O00 . I1Ii111
OoOooOOOO = xbmcvfs . translatePath ( OOo . getAddonInfo ( "profile" ) )
i11iiII = os . path . join ( OoOooOOOO , "cache" )
if not os . path . exists ( i11iiII ) :
 os . makedirs ( i11iiII )
 if 34 - 34: OOooOOo % OoooooooOO / i1IIi . iII111i + O0
I1Ii = os . path . join ( OOO0O , "resources" , "common" , "init.py" )
o0oOo0Ooo0O = os . path . join ( OoOooOOOO , "virtual_directoriesLists.txt" )
OO00O0O0O00Oo = os . path . join ( OoOooOOOO , 'tempList.txt' )
IIIiiiiiIii = os . path . join ( OoOooOOOO , 'favorites.txt' )
if 70 - 70: OoO0O00 . OoO0O00 - OoO0O00 / I1ii11iIi11i * OOooOOo
if not ( os . path . isfile ( IIIiiiiiIii ) ) :
 common . SaveList ( IIIiiiiiIii , [ ] )
 if 86 - 86: i11iIiiIii + Ii1I + ooOoO0o * I11i + o0oOOo0O0Ooo
if not ( os . path . isfile ( o0oOo0Ooo0O ) ) :
 common . SaveList ( o0oOo0Ooo0O , [ ] )
 if 61 - 61: OoO0O00 / i11iIiiIii
IiIiIi = OOo . getSetting ( "makeGroups" ) == "true"
if 40 - 40: oO0o . OoOoOO00 . Oo0Ooo . i1IIi
if 33 - 33: Ii1I + II111iiii % i11iIiiIii . ooOoO0o - I1IiiI
def O00oooo0O ( id ) :
 return OOo . getLocalizedString ( id )
 if 22 - 22: OoooooooOO % I11i - iII111i . iIii1I11I1II1 * i11iIiiIii
 if 32 - 32: Oo0Ooo * O0 % oO0o % Ii1I . IiII
def o0OOOOO00o0O0 ( chList , addToVdir = True ) :
 if 71 - 71: ooOoO0o % iII111i / o0oOOo0O0Ooo
 ii11i1iIII = [ ]
 Ii1IOo0o0 = 0
 if 49 - 49: oO0o % Ii1I + i1IIi . I1IiiI % I1ii11iIi11i
 for I1i1iii in chList :
  i1iiI11I = 1 if '.plx' in I1i1iii [ "url" ] else 2
  iiii = common . GetEncodeString ( I1i1iii [ "name" ] )
  if 54 - 54: I1ii11iIi11i * OOooOOo
  I1IIIii = I1i1iii . get ( 'image' , '' )
  oOoOooOo0o0 = I1i1iii [ "uuid" ]
  if 61 - 61: o0oOOo0O0Ooo / OoO0O00 + ooOoO0o * oO0o / oO0o
  if I1IIIii == "" or I1IIIii is None :
   I1IIIii = os . path . join ( oo0ooO0oOOOOo , "default-list-image.gif" )
   if 75 - 75: i1IIi / OoooooooOO - O0 / OoOoOO00 . II111iiii - i1IIi
  O000OO0 = I1i1iii . get ( 'logos' , '' )
  I11iii1Ii = I1i1iii . get ( 'cache' , '0' )
  if I1i1iii [ "url" ] . startswith ( 'http' ) :
   ii11i1iIII . append ( hashlib . md5 ( I1i1iii [ "url" ] . encode ( ) ) . hexdigest ( ) )
  I1IIiiIiii ( "{0}" . format ( iiii ) , I1i1iii [ "url" ] , i1iiI11I , I1IIIii , O000OO0 , index = Ii1IOo0o0 , uuid = oOoOooOo0o0 , cacheMin = I11iii1Ii , addToVdir = addToVdir )
  Ii1IOo0o0 += 1
  if 97 - 97: ooOoO0o - OOooOOo * i11iIiiIii / OoOoOO00 % I1Ii111 - OoooooooOO
 for OoOo00o in os . listdir ( i11iiII ) :
  o0OOoo0OO0OOO = os . path . join ( i11iiII , OoOo00o )
  try :
   if os . path . isfile ( o0OOoo0OO0OOO ) and OoOo00o not in ii11i1iIII :
    os . unlink ( o0OOoo0OO0OOO )
  except Exception as iI1iI1I1i1I :
   xbmc . log ( "{0}" . format ( iI1iI1I1i1I ) , 3 )
   if 24 - 24: I1ii11iIi11i
   if 56 - 56: ooOoO0o
def o0O ( ) :
 I1IIiiIiii ( "[B][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][COLOR white] BEM VINDOS [/COLOR][COLOR dimgrey]||[/COLOR][COLOR crimson]||[/COLOR][COLOR dimgrey]||[/COLOR][/B]{0}" . format ( O00oooo0O ( 0 ) ) , "BEM VINDOS" , 52 , Oo0o0000o0o0 , I11 , isFolder = True )
 I1IIiiIiii ( "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][COLOR white] SUPORTE[/COLOR][COLOR crimson] |[/COLOR][COLOR orange] TOP VIP [/COLOR][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]{0}" . format ( O00oooo0O ( 0 ) ) , "SUPORTE VIP" , 49 , os . path . join ( oo0ooO0oOOOOo , "bright_yellow_star.gif" ) )
 I1IIiiIiii ( "[B][COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR] [COLOR white]MANTER [COLOR crimson]|[/COLOR] ADD-ON [COLOR crimson]|[/COLOR] ONLINE[/COLOR] [COLOR dimgrey]|[/COLOR][COLOR crimson]|[/COLOR][COLOR dimgrey]|[/COLOR][/B]{0}" . format ( O00oooo0O ( 0 ) ) , "MANTER ADD-ON ONLINE" , 48 , os . path . join ( oo0ooO0oOOOOo , "bright_yellow_star.gif" ) )
 I1IIiiIiii ( "[B][COLOR white]KeTec[/COLOR] [COLOR crimson]Play TV[/COLOR][/B][COLOR orange] | [/COLOR]{0}" . format ( O00oooo0O ( 30003 ) ) , "favorites" , 30 , os . path . join ( oo0ooO0oOOOOo , "bright_yellow_star.gif" ) )
 if 72 - 72: iII111i / i1IIi * Oo0Ooo - I1Ii111
 if 51 - 51: II111iiii * OoO0O00 % o0oOOo0O0Ooo * II111iiii % I1ii11iIi11i / ooOoO0o
 iIIIIii1 = common . ReadList ( o0oOo0Ooo0O )
 oo000OO00Oo = 0
 for O0OOO0OOoO0O in iIIIIii1 :
  O00Oo000ooO0 = O0OOO0OOoO0O [ "icon" ] if not O0OOO0OOoO0O [ "icon" ] == "" else os . path . join ( oo0ooO0oOOOOo , "default-folder-image.gif" )
  I1IIiiIiii ( "[COLOR lime][B]{0}[/B][/COLOR]" . format ( O0OOO0OOoO0O [ "name" ] ) , "{0}" . format ( oo000OO00Oo ) , 44 , O00Oo000ooO0 , uuid = O0OOO0OOoO0O [ "uuid" ] , isFolder = True )
  oo000OO00Oo += 1
  if 100 - 100: O0 + IiII - OOooOOo + i11iIiiIii * Ii1I
 iII = [ ]
 for o0 in iIIIIii1 :
  if len ( o0 [ "data" ] ) > 0 :
   iII += o0 [ "data" ]
   if 62 - 62: iIii1I11I1II1 * OoOoOO00
 Ii1IOo0o0 = 0
 i1 = common . ReadList ( I1Ii )
 OOO = [ ]
 try :
  for Oo0oOOo in i1 :
   if "uuid" in Oo0oOOo and not Oo0oOOo [ "uuid" ] in iII :
    OOO . append ( i1 [ Ii1IOo0o0 ] )
   Ii1IOo0o0 += 1
 except :
  OOO = i1
  if 58 - 58: II111iiii * OOooOOo * I1ii11iIi11i / OOooOOo
 o0OOOOO00o0O0 ( OOO )
 if 75 - 75: oO0o
 I1IIiiIiii ( "[B]{0}: {1}[/B] - {2} " . format ( O00oooo0O ( 30036 ) , O00oooo0O ( 30037 ) if IiIiIi else O00oooo0O ( 30038 ) , O00oooo0O ( 30039 ) ) , "setting" , 50 , os . path . join ( oo0ooO0oOOOOo , "setting.gif" ) , isFolder = False )
 if 50 - 50: Ii1I / Oo0Ooo - oO0o - I11i % iII111i - oO0o
 if 91 - 91: OoO0O00 / I11i - II111iiii . I11i
 if 18 - 18: o0oOOo0O0Ooo
def O0o0O00Oo0o0 ( ) :
 O00O0oOO00O00 = i1Oo00 ( O00oooo0O ( 30004 ) ) . strip ( )
 if len ( O00O0oOO00O00 ) < 1 :
  return
 i1i = iiI111I1iIiI ( 30002 , 30005 , 30006 , 30016 , 30017 , fileType = 1 , fileMask = '.plx|.m3u|.m3u8' )
 if len ( i1i ) < 1 :
  return
 I1IIIii = iiI111I1iIiI ( 30022 , 30022 , 30022 , 30024 , 30025 , 30021 , fileType = 2 )
 II = '' if i1i . endswith ( '.plx' ) else iiI111I1iIiI ( 30018 , 30019 , 30020 , 30019 , 30020 , 30021 , fileType = 0 )
 if II . startswith ( 'http' ) and not II . endswith ( '/' ) :
  II += '/'
 Ii1I1IIii1II = O0ii1ii1ii ( O00oooo0O ( 30034 ) , '0' ) if i1i . startswith ( 'http' ) else 0
 if Ii1I1IIii1II is None :
  Ii1I1IIii1II = 0
 i1 = common . ReadList ( I1Ii )
 for I1i1iii in i1 :
  if I1i1iii [ "url" ] . lower ( ) == i1i . lower ( ) :
   xbmc . executebuiltin ( 'Notification({0}, "{1}" {2}, 5000, {3})' . format ( Ii1IIii11 , I1i1iii [ "name" ] , O00oooo0O ( 30007 ) , Oooo0000 ) )
   return
 i1 . append ( { "name" : O00O0oOO00O00 , "url" : i1i , "image" : I1IIIii , "logos" : II , "cache" : Ii1I1IIii1II , "uuid" : str ( random . uuid4 ( ) ) } )
 if common . SaveList ( I1Ii , i1 ) :
  xbmc . executebuiltin ( "Container.Refresh()" )
  if 91 - 91: IiII
  if 15 - 15: II111iiii
def iiI111I1iIiI ( choiceTitle , fileTitle , urlTitle , choiceFile , choiceUrl , choiceNone = None , fileType = 1 , fileMask = None , defaultText = "" ) :
 Ii = ''
 ooo0O = [ O00oooo0O ( choiceFile ) , O00oooo0O ( choiceUrl ) ]
 if choiceNone is not None :
  ooo0O = [ O00oooo0O ( choiceNone ) ] + ooo0O
 oOoO0o00OO0 = i1I1ii ( O00oooo0O ( choiceTitle ) , ooo0O )
 if choiceNone is None and oOoO0o00OO0 == 0 or choiceNone is not None and oOoO0o00OO0 == 1 :
  if not defaultText . startswith ( 'http' ) :
   defaultText = ""
  Ii = i1Oo00 ( O00oooo0O ( fileTitle ) , defaultText ) . strip ( )
 elif choiceNone is None and oOoO0o00OO0 == 1 or choiceNone is not None and oOoO0o00OO0 == 2 :
  if defaultText . startswith ( 'http' ) :
   defaultText = ""
  Ii = xbmcgui . Dialog ( ) . browse ( fileType , O00oooo0O ( urlTitle ) , 'files' , fileMask , False , False , defaultText )
 return Ii
 if 61 - 61: II111iiii
 if 64 - 64: ooOoO0o / OoOoOO00 - O0 - I11i
def O0oOoOOOoOO ( iuuid , listFile ) :
 if 38 - 38: I1Ii111
 i1 = common . ReadList ( listFile )
 Ii1 = common . ReadList ( o0oOo0Ooo0O )
 if 82 - 82: I1ii11iIi11i - iIii1I11I1II1 / OOooOOo + Ii1I
 Ii1IOo0o0 = 0
 for OOOOoOoo0O0O0 in i1 :
  if OOOOoOoo0O0O0 [ "uuid" ] == iuuid :
   del i1 [ Ii1IOo0o0 ]
  Ii1IOo0o0 += 1
  if 85 - 85: oO0o % i11iIiiIii - iII111i * OoooooooOO / I1IiiI % I1IiiI
  if 1 - 1: OoO0O00 - oO0o . I11i . OoO0O00 / Oo0Ooo + I11i
 for O0OOO0OOoO0O in Ii1 :
  Ii1IOo0o0 = 0
  for oOoOooOo0o0 in O0OOO0OOoO0O [ "data" ] :
   if iuuid in oOoOooOo0o0 :
    del O0OOO0OOoO0O [ "data" ] [ Ii1IOo0o0 ]
   Ii1IOo0o0 += 1
   if 78 - 78: O0 . oO0o . II111iiii % OOooOOo
 common . SaveList ( listFile , i1 )
 common . SaveList ( o0oOo0Ooo0O , Ii1 )
 if 49 - 49: Ii1I / OoO0O00 . II111iiii
 xbmc . executebuiltin ( "Container.Refresh()" )
 if 68 - 68: i11iIiiIii % I1ii11iIi11i + i11iIiiIii
 if 31 - 31: II111iiii . I1IiiI
def II1I ( index ) :
 if 84 - 84: IiII . i11iIiiIii . IiII * I1ii11iIi11i - I11i
 ii = common . ReadList ( IIIiiiiiIii )
 if index < 0 or index >= len ( ii ) :
  return
 del ii [ index ]
 common . SaveList ( IIIiiiiiIii , ii )
 xbmc . executebuiltin ( "Container.Refresh()" )
 if 81 - 81: I1Ii111 % iII111i . I1ii11iIi11i / o0oOOo0O0Ooo
 if 40 - 40: I1IiiI + OoooooooOO
def o0O000oo ( url , cache ) :
 IIi1I11I1II = [ ]
 i1 = common . plx2list ( url , cache )
 OooOoooOo = i1 [ 0 ] [ "background" ]
 for ii11IIII11I in i1 [ 1 : ] :
  OOooo = "" if "thumb" not in ii11IIII11I else common . GetEncodeString ( ii11IIII11I [ "thumb" ] )
  iiii = common . GetEncodeString ( ii11IIII11I [ "name" ] )
  if ii11IIII11I [ "type" ] == 'playlist' :
   I1IIiiIiii ( "{0}" . format ( iiii ) , ii11IIII11I [ "url" ] , 1 , OOooo , background = OooOoooOo )
  else :
   I1IIiiIiii ( iiii , ii11IIII11I [ "url" ] , 3 , OOooo , isFolder = False , IsPlayable = True , background = OooOoooOo )
   IIi1I11I1II . append ( { "url" : ii11IIII11I [ "url" ] , "image" : OOooo , "name" : iiii } )
   if 90 - 90: o0oOOo0O0Ooo % i1IIi / OoO0O00
 common . SaveList ( OO00O0O0O00Oo , IIi1I11I1II )
 if 44 - 44: Oo0Ooo . OoO0O00 / I1ii11iIi11i + Ii1I
 if 65 - 65: O0
def oO00OOoO00 ( url , logos , cache , gListIndex = - 1 ) :
 if 40 - 40: I1IiiI * Ii1I + OOooOOo % iII111i
 OOOOOoo0 = None
 if 49 - 49: O0 . iII111i
 IIi1I11I1II = [ ]
 i1 = common . m3u2list ( url , cache )
 I1iI1iIi111i = [ ]
 if 44 - 44: i1IIi % II111iiii + I11i
 for ii11IIII11I in i1 :
  if IiIiIi :
   I1I1I = [ I1iI1iIi111i . index ( OoOO000 ) for OoOO000 in I1iI1iIi111i if len ( OoOO000 ) > 0 and OoOO000 [ 0 ] . get ( "group_title" , OoOO000 [ 0 ] [ "display_name" ] ) == ii11IIII11I . get ( "group_title" , ii11IIII11I [ "display_name" ] ) ]
   if 14 - 14: IiII - I1ii11iIi11i
  if IiIiIi and len ( I1I1I ) == 1 :
   I1iI1iIi111i [ I1I1I [ 0 ] ] . append ( ii11IIII11I )
  else :
   I1iI1iIi111i . append ( [ ii11IIII11I ] )
   if 11 - 11: II111iiii * II111iiii % iIii1I11I1II1 * I1Ii111 + OoOoOO00 / I1IiiI
 for ii1Ii11I in I1iI1iIi111i :
  o00o0 = I1iI1iIi111i . index ( ii1Ii11I )
  if gListIndex > - 1 and gListIndex != o00o0 :
   continue
  iiOOooooO0Oo = gListIndex < 0 and len ( ii1Ii11I ) > 1
  OO = [ ii1Ii11I [ 0 ] ] if iiOOooooO0Oo else ii1Ii11I
  if 25 - 25: OoO0O00
  for ii11IIII11I in OO :
   iiii = common . GetEncodeString ( ii11IIII11I [ "display_name" ] ) if not iiOOooooO0Oo else common . GetEncodeString ( ii11IIII11I . get ( "group_title" , ii11IIII11I [ "display_name" ] ) )
   oOo0oO = "" if OOOOOoo0 is None else OOOOOoo0 [ ii11IIII11I [ "group_title" ] ] [ "overview" ] if ii11IIII11I [ "group_title" ] in OOOOOoo0 else ""
   I11 = "" if OOOOOoo0 is None else OOOOOoo0 [ ii11IIII11I [ "group_title" ] ] [ "fanarts" ] [ 0 ] if ( ii11IIII11I [ "group_title" ] in OOOOOoo0 and len ( OOOOOoo0 [ ii11IIII11I [ "group_title" ] ] [ "fanarts" ] ) > 0 ) else ""
   if 51 - 51: Oo0Ooo - oO0o + II111iiii * Ii1I . I11i + oO0o
   if iiOOooooO0Oo :
    iiii = '{0}' . format ( iiii )
    OoO0o = url
    try :
     I1IIIii = ii11IIII11I [ 'tvg_logo' ] if OOOOOoo0 is None else OOOOOoo0 [ ii11IIII11I [ "group_title" ] ] [ "poster" ] if ii11IIII11I [ "group_title" ] in OOOOOoo0 else ii11IIII11I [ 'tvg_logo' ]
    except KeyError :
     I1IIIii = "DefaultTVShows.gif"
    I1IIiiIiii ( iiii , url , 10 , index = o00o0 , iconimage = I1IIIii , plot = oOo0oO , fanart = I11 )
   else :
    OoO0o = common . GetEncodeString ( ii11IIII11I [ "url" ] )
    I1IIIii = ii11IIII11I . get ( "tvg_logo" , ii11IIII11I . get ( "logo" , "" ) )
    if logos is not None and logos != '' and I1IIIii != "" and not I1IIIii . startswith ( 'http' ) :
     I1IIIii = logos + I1IIIii
    I1IIiiIiii ( iiii , OoO0'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))